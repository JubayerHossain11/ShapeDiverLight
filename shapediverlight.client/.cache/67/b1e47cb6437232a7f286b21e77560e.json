{"id":"node_modules/@shapediver/sdk.sdtf-v1/dist/validation/SdtfComponentValidator.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\validation\\SdtfComponentValidator.js.map","includedInParent":true,"mtime":1706542087001},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\package.json","includedInParent":true,"mtime":1706542086604},{"name":"@shapediver/sdk.sdtf-core","loc":{"line":4,"column":32,"index":150},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\validation\\SdtfComponentValidator.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-core\\dist\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SdtfComponentValidator = void 0;\nconst sdk_sdtf_core_1 = require(\"@shapediver/sdk.sdtf-core\");\nclass SdtfComponentValidator {\n    constructor(componentList) {\n        this.componentList = componentList;\n    }\n    validateAccessor(accessor) {\n        // Validate required properties\n        if (!(0, sdk_sdtf_core_1.isUint)(accessor.bufferView))\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid accessor: Required property 'bufferView' must be an unsigned integer.\");\n        // Validate component references\n        if (accessor.bufferView >= this.componentList.bufferViews.length)\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid accessor: Buffer view index is out of range.\");\n    }\n    validateAsset(asset) {\n        // Validate required properties\n        if (!(0, sdk_sdtf_core_1.isUint)(asset.fileInfo))\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid asset: Required property 'fileInfo' must be an unsigned integer.\");\n        // Validate component references\n        if (asset.fileInfo !== 0) // There can only be one file info object\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid asset: Type hint index is out of range.\");\n    }\n    validateAttributes(attributes) {\n        if (!attributes.entries)\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid attributes: Required property 'entries' must be a string-keyed object.\");\n        Object.values(attributes.entries)\n            .forEach((attribute) => {\n            // Validate required properties\n            if (!(0, sdk_sdtf_core_1.isUint)(attribute.typeHint))\n                throw new sdk_sdtf_core_1.SdtfError(\"Invalid attribute: Required property 'typeHint' must be an unsigned integer.\");\n            // Validate optional properties\n            if (attribute.accessor && !(0, sdk_sdtf_core_1.isUint)(attribute.accessor))\n                throw new sdk_sdtf_core_1.SdtfError(\"Invalid attribute: Optional property 'accessor' must be an unsigned integer.\");\n            // Validate component references\n            if (attribute.accessor && attribute.accessor >= this.componentList.accessors.length)\n                throw new sdk_sdtf_core_1.SdtfError(\"Invalid attribute: Accessor index is out of range.\");\n            if (attribute.typeHint && attribute.typeHint >= this.componentList.typeHints.length)\n                throw new sdk_sdtf_core_1.SdtfError(\"Invalid attribute: Type hint index is out of range.\");\n        });\n    }\n    validateBuffer(buffer) {\n        // Validate required properties\n        if (!(0, sdk_sdtf_core_1.isUint)(buffer.byteLength))\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid buffer: Required property 'byteLength' must be an unsigned integer.\");\n    }\n    validateBufferView(bufferView) {\n        // Validate required properties\n        if (!(0, sdk_sdtf_core_1.isUint)(bufferView.buffer))\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid buffer view: Required property 'buffer' must be an unsigned integer.\");\n        if (!(0, sdk_sdtf_core_1.isUint)(bufferView.byteLength))\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid buffer view: Required property 'byteLength' must be an unsigned integer.\");\n        if (!(0, sdk_sdtf_core_1.isUint)(bufferView.byteOffset))\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid buffer view: Required property 'byteOffset' must be an unsigned integer.\");\n        if (!(0, sdk_sdtf_core_1.isNonEmptyString)(bufferView.contentType))\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid buffer view: Required property 'contentType' must be a non-empty string.\");\n        // Validate component references\n        if (bufferView.buffer >= this.componentList.buffers.length)\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid buffer view: Buffer index is out of range.\");\n    }\n    validateChunk(chunk) {\n        try {\n            this.validateChunkOrNode(chunk);\n        }\n        catch (e) {\n            throw new sdk_sdtf_core_1.SdtfError(`Invalid chunk: ${e.message}`);\n        }\n        // Validate required properties\n        if (typeof chunk.name !== \"string\")\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid chunk: Required property 'name' must be a string.\");\n    }\n    validateDataItem(dataItem) {\n        // Validate required properties\n        if (!(0, sdk_sdtf_core_1.isUint)(dataItem.typeHint))\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid item: Required property 'typeHint' must be an unsigned integer.\");\n        // Validate optional properties\n        if (dataItem.accessor && !(0, sdk_sdtf_core_1.isUint)(dataItem.accessor))\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid item: Optional property 'accessor' must be an unsigned integer.\");\n        if (dataItem.attributes && !(0, sdk_sdtf_core_1.isUint)(dataItem.attributes))\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid item: Optional property 'attributes' must be an unsigned integer.\");\n        // Validate component references\n        if (dataItem.accessor && dataItem.accessor >= this.componentList.accessors.length)\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid item: Accessor index is out of range.\");\n        if (dataItem.attributes && dataItem.attributes >= this.componentList.attributes.length)\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid item: Attributes index is out of range.\");\n        if (dataItem.typeHint && dataItem.typeHint >= this.componentList.typeHints.length)\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid item: Type hint index is out of range.\");\n    }\n    validateFileInfo(fileInfo) {\n        // Validate required properties\n        if (!(0, sdk_sdtf_core_1.isNonEmptyString)(fileInfo.version))\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid file info: Required property 'version' must be a non-empty string.\");\n    }\n    validateNode(node) {\n        try {\n            this.validateChunkOrNode(node);\n        }\n        catch (e) {\n            throw new sdk_sdtf_core_1.SdtfError(`Invalid node: ${e.message}`);\n        }\n    }\n    validateTypeHint(typeHint) {\n        // Validate required properties\n        if (!(0, sdk_sdtf_core_1.isNonEmptyString)(typeHint.name))\n            throw new sdk_sdtf_core_1.SdtfError(\"Invalid type hint: Required property 'name' must be a non-empty string.\");\n    }\n    /**\n     * Validates sdTF node objects.\n     * Thrown error messages have no prefix text to make them usable for chunk and nodes validation.\n     * @private\n     * @throws {@link SdtfError} when the component is invalid.\n     */\n    validateChunkOrNode(chunkOrNode) {\n        // Validate optional properties\n        if (chunkOrNode.attributes && !(0, sdk_sdtf_core_1.isUint)(chunkOrNode.attributes))\n            throw new sdk_sdtf_core_1.SdtfError(\"Optional property 'attributes' must be an unsigned integer.\");\n        if (!(0, sdk_sdtf_core_1.isUintArray)(chunkOrNode.items))\n            throw new sdk_sdtf_core_1.SdtfError(\"Required property 'items' must be an array of unsigned integers.\");\n        if (!(0, sdk_sdtf_core_1.isUintArray)(chunkOrNode.nodes))\n            throw new sdk_sdtf_core_1.SdtfError(\"Required property 'nodes' must be an array of unsigned integers.\");\n        if (chunkOrNode.typeHint && !(0, sdk_sdtf_core_1.isUint)(chunkOrNode.typeHint))\n            throw new sdk_sdtf_core_1.SdtfError(\"Optional property 'typeHint' must be an unsigned integer.\");\n        // Validate component references\n        if (chunkOrNode.attributes && chunkOrNode.attributes >= this.componentList.attributes.length)\n            throw new sdk_sdtf_core_1.SdtfError(\"Attributes index is out of range.\");\n        chunkOrNode.items.forEach(itemIndex => {\n            if (itemIndex >= this.componentList.items.length)\n                throw new sdk_sdtf_core_1.SdtfError(`Node index '${itemIndex}' is out of range.`);\n        });\n        chunkOrNode.nodes.forEach(nodeIndex => {\n            if (nodeIndex >= this.componentList.nodes.length)\n                throw new sdk_sdtf_core_1.SdtfError(`Node index '${nodeIndex}' is out of range.`);\n        });\n        if (chunkOrNode.typeHint && chunkOrNode.typeHint >= this.componentList.typeHints.length)\n            throw new sdk_sdtf_core_1.SdtfError(\"Type hint index is out of range.\");\n        // Prevent self-referencing nodes\n        if (!chunkOrNode.nodes.every(nodePos => this.componentList.nodes[nodePos].componentId !== chunkOrNode.componentId))\n            throw new sdk_sdtf_core_1.SdtfError(\"Node is referencing itself in the 'nodes' property.\");\n    }\n}\nexports.SdtfComponentValidator = SdtfComponentValidator;\n"},"sourceMaps":{"js":{"version":3,"file":"SdtfComponentValidator.js","sourceRoot":"","sources":["../../src/validation/SdtfComponentValidator.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"7bd47efc23d86bf0a07c084c82c7356b","cacheData":{"env":{}}}