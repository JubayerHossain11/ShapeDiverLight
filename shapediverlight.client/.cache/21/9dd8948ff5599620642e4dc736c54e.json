{"id":"node_modules/@shapediver/viewer/dist/implementation/viewport/lights/types/SpotLightApi.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\lights\\types\\SpotLightApi.js.map","includedInParent":true,"mtime":1706527154240},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\src\\implementation\\viewport\\lights\\types\\SpotLightApi.ts","includedInParent":true,"mtime":1706527154843},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\package.json","includedInParent":true,"mtime":1706527153686},{"name":"../AbstractLightApi","loc":{"line":16,"column":35,"index":1341},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\lights\\types\\SpotLightApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\lights\\AbstractLightApi.js"},{"name":"@shapediver/viewer.shared.services","loc":{"line":17,"column":41,"index":1407},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\lights\\types\\SpotLightApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.services\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _SpotLightApi_light, _SpotLightApi_inputValidator, _SpotLightApi_logger, _SpotLightApi_viewportApi;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SpotLightApi = void 0;\r\nconst AbstractLightApi_1 = require(\"../AbstractLightApi\");\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nclass SpotLightApi extends AbstractLightApi_1.AbstractLightApi {\r\n    // #endregion Properties (7)\r\n    // #region Constructors (1)\r\n    constructor(viewportApi, light) {\r\n        super(viewportApi, light);\r\n        // #region Properties (7)\r\n        _SpotLightApi_light.set(this, void 0);\r\n        _SpotLightApi_inputValidator.set(this, viewer_shared_services_1.InputValidator.instance);\r\n        _SpotLightApi_logger.set(this, viewer_shared_services_1.Logger.instance);\r\n        _SpotLightApi_viewportApi.set(this, void 0);\r\n        __classPrivateFieldSet(this, _SpotLightApi_viewportApi, viewportApi, \"f\");\r\n        __classPrivateFieldSet(this, _SpotLightApi_light, light, \"f\");\r\n        this.scope = 'SpotLightApi';\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (12)\r\n    get angle() {\r\n        return __classPrivateFieldGet(this, _SpotLightApi_light, \"f\").angle;\r\n    }\r\n    set angle(value) {\r\n        const scope = 'angle';\r\n        __classPrivateFieldGet(this, _SpotLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _SpotLightApi_light, \"f\").angle = value;\r\n        __classPrivateFieldGet(this, _SpotLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _SpotLightApi_viewportApi, \"f\").update();\r\n    }\r\n    get decay() {\r\n        return __classPrivateFieldGet(this, _SpotLightApi_light, \"f\").decay;\r\n    }\r\n    set decay(value) {\r\n        const scope = 'decay';\r\n        __classPrivateFieldGet(this, _SpotLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _SpotLightApi_light, \"f\").decay = value;\r\n        __classPrivateFieldGet(this, _SpotLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _SpotLightApi_viewportApi, \"f\").update();\r\n    }\r\n    get distance() {\r\n        return __classPrivateFieldGet(this, _SpotLightApi_light, \"f\").distance;\r\n    }\r\n    set distance(value) {\r\n        const scope = 'distance';\r\n        __classPrivateFieldGet(this, _SpotLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _SpotLightApi_light, \"f\").distance = value;\r\n        __classPrivateFieldGet(this, _SpotLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _SpotLightApi_viewportApi, \"f\").update();\r\n    }\r\n    get penumbra() {\r\n        return __classPrivateFieldGet(this, _SpotLightApi_light, \"f\").penumbra;\r\n    }\r\n    set penumbra(value) {\r\n        const scope = 'penumbra';\r\n        __classPrivateFieldGet(this, _SpotLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _SpotLightApi_light, \"f\").penumbra = value;\r\n        __classPrivateFieldGet(this, _SpotLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _SpotLightApi_viewportApi, \"f\").update();\r\n    }\r\n    get position() {\r\n        return __classPrivateFieldGet(this, _SpotLightApi_light, \"f\").position;\r\n    }\r\n    set position(value) {\r\n        const scope = 'position';\r\n        __classPrivateFieldGet(this, _SpotLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'vec3');\r\n        __classPrivateFieldGet(this, _SpotLightApi_light, \"f\").position = value;\r\n        __classPrivateFieldGet(this, _SpotLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _SpotLightApi_viewportApi, \"f\").update();\r\n    }\r\n    get target() {\r\n        return __classPrivateFieldGet(this, _SpotLightApi_light, \"f\").target;\r\n    }\r\n    set target(value) {\r\n        const scope = 'target';\r\n        __classPrivateFieldGet(this, _SpotLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'vec3');\r\n        __classPrivateFieldGet(this, _SpotLightApi_light, \"f\").target = value;\r\n        __classPrivateFieldGet(this, _SpotLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _SpotLightApi_viewportApi, \"f\").update();\r\n    }\r\n}\r\nexports.SpotLightApi = SpotLightApi;\r\n_SpotLightApi_light = new WeakMap(), _SpotLightApi_inputValidator = new WeakMap(), _SpotLightApi_logger = new WeakMap(), _SpotLightApi_viewportApi = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"SpotLightApi.js","sourceRoot":"","sources":["../../../../../src/implementation/viewport/lights/types/SpotLightApi.ts"],"names":[],"mappings":"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","sourcesContent":["import { vec3 } from \"gl-matrix\";\r\nimport { ISpotLight } from \"@shapediver/viewer.rendering-engine.light-engine\";\r\nimport { ISpotLightApi } from \"../../../../interfaces/viewport/lights/types/ISpotLightApi\";\r\nimport { AbstractLightApi } from \"../AbstractLightApi\";\r\nimport { InputValidator, Logger } from \"@shapediver/viewer.shared.services\";\r\nimport { IViewportApi } from \"../../../../interfaces/viewport/IViewportApi\";\r\n\r\nexport class SpotLightApi extends AbstractLightApi implements ISpotLightApi {\r\n    // #region Properties (7)\r\n\r\n    readonly #light: ISpotLight;\r\n    readonly #inputValidator: InputValidator = InputValidator.instance;\r\n    readonly #logger: Logger = Logger.instance;\r\n    readonly #viewportApi: IViewportApi;\r\n\r\n    // #endregion Properties (7)\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(viewportApi: IViewportApi, light: ISpotLight) {\r\n        super(viewportApi, light)\r\n        this.#viewportApi = viewportApi;\r\n        this.#light = light;\r\n        this.scope = 'SpotLightApi';\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Accessors (12)\r\n\r\n    public get angle(): number {\r\n        return this.#light.angle;\r\n    }\r\n\r\n    public set angle(value: number) {\r\n        const scope = 'angle';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#light.angle = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get decay(): number {\r\n        return this.#light.decay;\r\n    }\r\n\r\n    public set decay(value: number) {\r\n        const scope = 'decay';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#light.decay = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get distance(): number {\r\n        return this.#light.distance;\r\n    }\r\n\r\n    public set distance(value: number) {\r\n        const scope = 'distance';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#light.distance = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get penumbra(): number {\r\n        return this.#light.penumbra;\r\n    }\r\n\r\n    public set penumbra(value: number) {\r\n        const scope = 'penumbra';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#light.penumbra = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get position(): vec3 {\r\n        return this.#light.position;\r\n    }\r\n\r\n    public set position(value: vec3) {\r\n        const scope = 'position';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'vec3');\r\n        this.#light.position = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get target(): vec3 {\r\n        return this.#light.target;\r\n    }\r\n\r\n    public set target(value: vec3) {\r\n        const scope = 'target';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'vec3');\r\n        this.#light.target = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    // #endregion Public Accessors (12)\r\n}"]}},"error":null,"hash":"ee01166c9e7a8cae476ba6b6793e115e","cacheData":{"env":{}}}