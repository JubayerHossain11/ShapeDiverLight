{"id":"node_modules/@shapediver/sdk.sdtf-v1/dist/reader/SdtfParser.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js.map","includedInParent":true,"mtime":1706542087114},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\package.json","includedInParent":true,"mtime":1706542086604},{"name":"@shapediver/sdk.sdtf-core","loc":{"line":13,"column":32,"index":819},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-core\\dist\\index.js"},{"name":"browser-or-node","loc":{"line":14,"column":34,"index":883},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\browser-or-node\\lib\\index.js"},{"name":"../binary_sdtf/SdtfBinarySdtf","loc":{"line":15,"column":33,"index":936},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\binary_sdtf\\SdtfBinarySdtf.js"},{"name":"../buffer_cache/SdtfBinaryBufferCache","loc":{"line":16,"column":40,"index":1010},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\buffer_cache\\SdtfBinaryBufferCache.js"},{"name":"../buffer_cache/SdtfFileBufferCache","loc":{"line":17,"column":38,"index":1090},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\buffer_cache\\SdtfFileBufferCache.js"},{"name":"../buffer_cache/SdtfHttpBufferCache","loc":{"line":18,"column":38,"index":1168},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\buffer_cache\\SdtfHttpBufferCache.js"},{"name":"../http/SdtfHttpClient","loc":{"line":19,"column":33,"index":1241},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\http\\SdtfHttpClient.js"},{"name":"../structure/SdtfComponentFactoryWrapper","loc":{"line":20,"column":46,"index":1314},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\structure\\SdtfComponentFactoryWrapper.js"},{"name":"../utils/SdtfFileUtils","loc":{"line":21,"column":32,"index":1391},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\utils\\SdtfFileUtils.js"},{"name":"./components/SdtfReadableAsset","loc":{"line":22,"column":36,"index":1454},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\components\\SdtfReadableAsset.js"},{"name":"./SdtfDataParser","loc":{"line":23,"column":33,"index":1522},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfDataParser.js"},{"name":"./SdtfReadableComponentFactory","loc":{"line":24,"column":47,"index":1590},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfReadableComponentFactory.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SdtfParser = void 0;\nconst sdk_sdtf_core_1 = require(\"@shapediver/sdk.sdtf-core\");\nconst browser_or_node_1 = require(\"browser-or-node\");\nconst SdtfBinarySdtf_1 = require(\"../binary_sdtf/SdtfBinarySdtf\");\nconst SdtfBinaryBufferCache_1 = require(\"../buffer_cache/SdtfBinaryBufferCache\");\nconst SdtfFileBufferCache_1 = require(\"../buffer_cache/SdtfFileBufferCache\");\nconst SdtfHttpBufferCache_1 = require(\"../buffer_cache/SdtfHttpBufferCache\");\nconst SdtfHttpClient_1 = require(\"../http/SdtfHttpClient\");\nconst SdtfComponentFactoryWrapper_1 = require(\"../structure/SdtfComponentFactoryWrapper\");\nconst SdtfFileUtils_1 = require(\"../utils/SdtfFileUtils\");\nconst SdtfReadableAsset_1 = require(\"./components/SdtfReadableAsset\");\nconst SdtfDataParser_1 = require(\"./SdtfDataParser\");\nconst SdtfReadableComponentFactory_1 = require(\"./SdtfReadableComponentFactory\");\nclass SdtfParser {\n    constructor(config) {\n        this.config = config;\n        this.binarySdtfParser = new SdtfBinarySdtf_1.SdtfBinarySdtf();\n        this.componentFactory = new SdtfComponentFactoryWrapper_1.SdtfComponentFactoryWrapper();\n        this.fileUtils = new SdtfFileUtils_1.SdtfFileUtils();\n    }\n    readFromFile(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Quick check to make sure we are in NodeJs\n            if (browser_or_node_1.isBrowser)\n                throw new sdk_sdtf_core_1.SdtfError(\"Reading from file is only supported in Node.js.\");\n            let absolutePath, buffer;\n            try {\n                absolutePath = this.fileUtils.toAbsolutePath(path);\n                buffer = yield this.fileUtils.readFile(absolutePath);\n            }\n            catch (e) {\n                throw new sdk_sdtf_core_1.SdtfError(`Cannot read sdTF-file: ${e.message}`);\n            }\n            const [contentBuffer, binaryBuffer] = this.binarySdtfParser.parseBinarySdtf(buffer);\n            const jsonContent = this.binarySdtfParser.readJsonContent(contentBuffer);\n            const bufferCache = new SdtfFileBufferCache_1.SdtfFileBufferCache(absolutePath);\n            bufferCache.setBinaryBody(binaryBuffer);\n            return this.createSdtfAsset(jsonContent, bufferCache);\n        });\n    }\n    readFromUrl(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpClient = new SdtfHttpClient_1.SdtfHttpClient(url, this.config.authToken);\n            const [contentBuffer, binaryBuffer] = yield httpClient.getJsonContent();\n            const jsonContent = this.binarySdtfParser.readJsonContent(contentBuffer);\n            const bufferCache = new SdtfHttpBufferCache_1.SdtfHttpBufferCache(httpClient);\n            bufferCache.setBinaryBody(binaryBuffer);\n            return this.createSdtfAsset(jsonContent, bufferCache);\n        });\n    }\n    readFromBuffer(sdtf) {\n        const [contentBuffer, binaryBuffer] = this.binarySdtfParser.parseBinarySdtf(sdtf);\n        const jsonContent = this.binarySdtfParser.readJsonContent(contentBuffer);\n        const bufferCache = new SdtfBinaryBufferCache_1.SdtfBinaryBufferCache();\n        bufferCache.setBinaryBody(binaryBuffer);\n        return this.createSdtfAsset(jsonContent, bufferCache);\n    }\n    /** Instantiates a sdTF asset that represents the given content. */\n    createSdtfAsset(content, bufferCache) {\n        const componentList = this.componentFactory.createFromJson(content);\n        const readableComponentFactory = new SdtfReadableComponentFactory_1.SdtfReadableComponentFactory(bufferCache, new SdtfDataParser_1.SdtfDataParser(this.config.integrations));\n        return this.buildReadableAsset(componentList, readableComponentFactory);\n    }\n    /**\n     * Transforms the given component list into a readable sdTF asset.\n     * @private\n     */\n    buildReadableAsset(componentList, factory) {\n        const fileInfo = factory.createFileInfo(componentList.fileInfo);\n        const asset = new SdtfReadableAsset_1.SdtfReadableAsset(fileInfo);\n        asset.typeHints = componentList.typeHints.map(t => factory.createTypeHint(t));\n        asset.buffers = componentList.buffers.map(b => factory.createBuffer(b));\n        asset.bufferViews = componentList.bufferViews.map(b => factory.createBufferView(b, asset.buffers));\n        asset.accessors = componentList.accessors.map(a => factory.createAccessor(a, asset.bufferViews));\n        asset.attributes = componentList.attributes.map(a => factory.createAttributes(a, asset.accessors, asset.typeHints));\n        asset.items = componentList.items.map(d => factory.createDataItem(d, asset.accessors, asset.attributes, asset.typeHints));\n        asset.nodes = componentList.nodes.map(n => factory.createNode(n, asset.attributes, asset.items, asset.typeHints));\n        asset.chunks = componentList.chunks.map(c => factory.createChunk(c, asset.attributes, asset.items, asset.typeHints));\n        factory.setChunkReferences(asset.chunks, componentList.chunks, asset.nodes);\n        factory.setNodeReferences(asset.nodes, componentList.nodes);\n        return asset;\n    }\n}\nexports.SdtfParser = SdtfParser;\n"},"sourceMaps":{"js":{"version":3,"file":"SdtfParser.js","sourceRoot":"","sources":["../../src/reader/SdtfParser.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"266d35b4dc1f63555637d8d2f47d6942","cacheData":{"env":{}}}