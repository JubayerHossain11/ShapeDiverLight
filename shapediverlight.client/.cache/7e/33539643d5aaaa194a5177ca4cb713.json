{"id":"node_modules/@shapediver/viewer.rendering-engine-threejs.standard/dist/loaders/LightLoader.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\loaders\\LightLoader.js.map","includedInParent":true,"mtime":1706542086914},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\src\\loaders\\LightLoader.ts","includedInParent":true,"mtime":1706542087413},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\package.json","includedInParent":true,"mtime":1706542086641},{"name":"three","loc":{"line":23,"column":35,"index":1023},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\loaders\\LightLoader.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\three\\build\\three.module.js"},{"name":"@shapediver/viewer.rendering-engine.light-engine","loc":{"line":24,"column":55,"index":1090},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\loaders\\LightLoader.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine.light-engine\\dist\\index.js"},{"name":"@shapediver/viewer.shared.services","loc":{"line":25,"column":41,"index":1185},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\loaders\\LightLoader.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LightLoader = void 0;\r\nconst THREE = __importStar(require(\"three\"));\r\nconst viewer_rendering_engine_light_engine_1 = require(\"@shapediver/viewer.rendering-engine.light-engine\");\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nclass LightLoader {\r\n    // #region Constructors (1)\r\n    constructor(_renderingEngine) {\r\n        this._renderingEngine = _renderingEngine;\r\n        this._converter = viewer_shared_services_1.Converter.instance;\r\n        this._shadowMapCount = 0;\r\n        this._forceDisabledShadows = false;\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Methods (2)\r\n    init() { }\r\n    load(light, dataChild) {\r\n        let threeLight = dataChild.children[0] instanceof THREE.Light ? dataChild.children[0] : null;\r\n        if (light instanceof viewer_rendering_engine_light_engine_1.AmbientLight) {\r\n            if (!threeLight) {\r\n                threeLight = new THREE.AmbientLight();\r\n                light.threeJsObject[this._renderingEngine.id] = threeLight;\r\n                dataChild.add(threeLight);\r\n            }\r\n            const threeAmbientLight = threeLight;\r\n            threeAmbientLight.color = this._renderingEngine.createThreeJsColor(light.color);\r\n            threeAmbientLight.intensity = light.intensity;\r\n        }\r\n        if (light instanceof viewer_rendering_engine_light_engine_1.DirectionalLight) {\r\n            if (!threeLight) {\r\n                threeLight = new THREE.DirectionalLight();\r\n                dataChild.add(threeLight);\r\n                dataChild.add(threeLight.target);\r\n                light.threeJsObject[this._renderingEngine.id] = threeLight;\r\n            }\r\n            const threeDirectionalLight = threeLight;\r\n            threeDirectionalLight.color = this._renderingEngine.createThreeJsColor(light.color);\r\n            threeDirectionalLight.intensity = light.intensity;\r\n            if (light.useNodeData) {\r\n                threeDirectionalLight.position.set(0, 0, 0);\r\n                threeDirectionalLight.target.position.set(0, 0, -1);\r\n            }\r\n        }\r\n        if (light instanceof viewer_rendering_engine_light_engine_1.HemisphereLight) {\r\n            if (!threeLight) {\r\n                threeLight = new THREE.HemisphereLight();\r\n                dataChild.add(threeLight);\r\n                light.threeJsObject[this._renderingEngine.id] = threeLight;\r\n            }\r\n            const threeHemisphereLight = threeLight;\r\n            threeHemisphereLight.color = this._renderingEngine.createThreeJsColor(light.color);\r\n            threeHemisphereLight.intensity = light.intensity;\r\n            threeHemisphereLight.groundColor = this._renderingEngine.createThreeJsColor(light.groundColor);\r\n        }\r\n        if (light instanceof viewer_rendering_engine_light_engine_1.PointLight) {\r\n            if (!threeLight) {\r\n                threeLight = new THREE.PointLight();\r\n                dataChild.add(threeLight);\r\n                light.threeJsObject[this._renderingEngine.id] = threeLight;\r\n            }\r\n            const threePointLight = threeLight;\r\n            threePointLight.color = this._renderingEngine.createThreeJsColor(light.color);\r\n            threePointLight.intensity = light.intensity;\r\n            threePointLight.distance = light.distance;\r\n            threePointLight.decay = light.decay;\r\n            threePointLight.position.set(light.position[0], light.position[1], light.position[2]);\r\n        }\r\n        if (light instanceof viewer_rendering_engine_light_engine_1.SpotLight) {\r\n            if (!threeLight) {\r\n                threeLight = new THREE.SpotLight(this._renderingEngine.createThreeJsColor(light.color), light.intensity, light.distance, light.angle, light.penumbra, light.decay);\r\n                dataChild.add(threeLight);\r\n                dataChild.add(threeLight.target);\r\n                light.threeJsObject[this._renderingEngine.id] = threeLight;\r\n            }\r\n            const threeSpotLight = threeLight;\r\n            threeSpotLight.color = this._renderingEngine.createThreeJsColor(light.color);\r\n            threeSpotLight.intensity = light.intensity;\r\n            threeSpotLight.distance = light.distance;\r\n            threeSpotLight.angle = light.angle;\r\n            threeSpotLight.penumbra = light.penumbra;\r\n            threeSpotLight.decay = light.decay;\r\n            threeSpotLight.position.set(light.position[0], light.position[1], light.position[2]);\r\n            threeSpotLight.target.position.set(light.target[0], light.target[1], light.target[2]);\r\n        }\r\n    }\r\n    adjustToBoundingBox(light, dataChild, boundingBox) {\r\n        let threeLight = dataChild.children[0];\r\n        if (light instanceof viewer_rendering_engine_light_engine_1.DirectionalLight) {\r\n            const threeDirectionalLight = threeLight;\r\n            const bs = boundingBox.boundingSphere;\r\n            threeDirectionalLight.position.set(bs.center[0] + light.direction[0] * bs.radius * 2.35, bs.center[1] + light.direction[1] * bs.radius * 2.35, bs.center[2] + light.direction[2] * bs.radius * 2.35);\r\n            threeDirectionalLight.target.position.set(bs.center[0], bs.center[1], bs.center[2]);\r\n            if (light.castShadow === true && this.forceDisabledShadows === false) {\r\n                threeDirectionalLight.castShadow = true;\r\n                threeDirectionalLight.shadow.camera.up.set(0, 0, 1);\r\n                threeDirectionalLight.shadow.camera.far = 8 * bs.radius;\r\n                threeDirectionalLight.shadow.camera.right = 1.5 * bs.radius;\r\n                threeDirectionalLight.shadow.camera.left = -1.5 * bs.radius;\r\n                threeDirectionalLight.shadow.camera.top = 1.5 * bs.radius;\r\n                threeDirectionalLight.shadow.camera.bottom = -1.5 * bs.radius;\r\n                threeDirectionalLight.shadow.mapSize.width = light.shadowMapResolution;\r\n                threeDirectionalLight.shadow.mapSize.height = light.shadowMapResolution;\r\n                threeDirectionalLight.shadow.bias = light.shadowMapBias;\r\n                threeDirectionalLight.shadow.camera.updateProjectionMatrix();\r\n                this._shadowMapCount++;\r\n            }\r\n            else {\r\n                threeDirectionalLight.castShadow = false;\r\n            }\r\n        }\r\n    }\r\n    get shadowMapCount() {\r\n        return this._shadowMapCount;\r\n    }\r\n    set shadowMapCount(value) {\r\n        this._shadowMapCount = value;\r\n    }\r\n    get forceDisabledShadows() {\r\n        return this._forceDisabledShadows;\r\n    }\r\n    set forceDisabledShadows(value) {\r\n        this._forceDisabledShadows = value;\r\n    }\r\n}\r\nexports.LightLoader = LightLoader;\r\n"},"sourceMaps":{"js":{"version":3,"file":"LightLoader.js","sourceRoot":"","sources":["../../src/loaders/LightLoader.ts"],"names":[],"mappings":"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","sourcesContent":["import * as THREE from 'three'\r\nimport { Box, IBox, ISphere, Sphere } from '@shapediver/viewer.shared.math'\r\nimport {\r\n  AbstractLight,\r\n  AmbientLight,\r\n  DirectionalLight,\r\n  HemisphereLight,\r\n  PointLight,\r\n  SpotLight,\r\n} from '@shapediver/viewer.rendering-engine.light-engine'\r\n\r\nimport { RenderingEngine } from '../RenderingEngine'\r\nimport { ILoader } from '../interfaces/ILoader'\r\nimport { Converter } from '@shapediver/viewer.shared.services'\r\nimport { SDData } from '../objects/SDData'\r\n\r\nexport class LightLoader implements ILoader {\r\n\r\n\r\n    private readonly _converter: Converter = Converter.instance;\r\n    \r\n    private _shadowMapCount = 0;\r\n    private _forceDisabledShadows: boolean = false;\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(private readonly _renderingEngine: RenderingEngine) {}\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Methods (2)\r\n\r\n    public init(): void {}\r\n\r\n    public load(light: AbstractLight, dataChild: SDData) {\r\n        let threeLight: THREE.Light | null = dataChild.children[0] instanceof THREE.Light ? <THREE.Light>dataChild.children[0] : null;\r\n        if (light instanceof AmbientLight) {\r\n            if(!threeLight) {\r\n                threeLight = new THREE.AmbientLight();\r\n                (<AmbientLight>light).threeJsObject[this._renderingEngine.id] = <THREE.AmbientLight>threeLight;\r\n                dataChild.add(threeLight);\r\n            }\r\n            const threeAmbientLight = <THREE.AmbientLight>threeLight;\r\n\r\n            threeAmbientLight.color = this._renderingEngine.createThreeJsColor(light.color);\r\n            threeAmbientLight.intensity = light.intensity;\r\n        }\r\n        \r\n        if (light instanceof DirectionalLight) {\r\n            if(!threeLight) {\r\n                threeLight = new THREE.DirectionalLight();\r\n                dataChild.add(threeLight);\r\n                dataChild.add((<THREE.DirectionalLight>threeLight).target);\r\n                (<DirectionalLight>light).threeJsObject[this._renderingEngine.id] = <THREE.DirectionalLight>threeLight;\r\n            }\r\n            const threeDirectionalLight = <THREE.DirectionalLight>threeLight;\r\n\r\n            threeDirectionalLight.color = this._renderingEngine.createThreeJsColor(light.color);\r\n            threeDirectionalLight.intensity = light.intensity;\r\n\r\n            if(light.useNodeData) {\r\n                threeDirectionalLight.position.set(0,0,0);\r\n                threeDirectionalLight.target.position.set(0,0,-1);\r\n            }\r\n        }\r\n        \r\n        if (light instanceof HemisphereLight) {\r\n            if(!threeLight) {\r\n                threeLight = new THREE.HemisphereLight();\r\n                dataChild.add(threeLight);\r\n                (<HemisphereLight>light).threeJsObject[this._renderingEngine.id] = <THREE.HemisphereLight>threeLight;\r\n            }\r\n            const threeHemisphereLight = <THREE.HemisphereLight>threeLight;\r\n\r\n            threeHemisphereLight.color = this._renderingEngine.createThreeJsColor(light.color);\r\n            threeHemisphereLight.intensity = light.intensity;\r\n            threeHemisphereLight.groundColor = this._renderingEngine.createThreeJsColor(light.groundColor);\r\n        }\r\n        \r\n        if (light instanceof PointLight) {\r\n            if(!threeLight) {\r\n                threeLight = new THREE.PointLight();\r\n                dataChild.add(threeLight);\r\n                (<PointLight>light).threeJsObject[this._renderingEngine.id] = <THREE.PointLight>threeLight;\r\n            }\r\n            const threePointLight = <THREE.PointLight>threeLight;\r\n\r\n            threePointLight.color = this._renderingEngine.createThreeJsColor(light.color);\r\n            threePointLight.intensity = light.intensity;\r\n            threePointLight.distance = light.distance;\r\n            threePointLight.decay = light.decay;\r\n            threePointLight.position.set(light.position[0], light.position[1], light.position[2]);\r\n        }\r\n        \r\n        if (light instanceof SpotLight) {\r\n            if(!threeLight) {\r\n                threeLight = new THREE.SpotLight(\r\n                    this._renderingEngine.createThreeJsColor(light.color), \r\n                    light.intensity, \r\n                    light.distance, \r\n                    light.angle, \r\n                    light.penumbra, \r\n                    light.decay\r\n                );\r\n                dataChild.add(threeLight);\r\n                dataChild.add((<THREE.SpotLight>threeLight).target);\r\n                (<SpotLight>light).threeJsObject[this._renderingEngine.id] = <THREE.SpotLight>threeLight;\r\n            }\r\n            const threeSpotLight = <THREE.SpotLight>threeLight;\r\n\r\n            threeSpotLight.color = this._renderingEngine.createThreeJsColor(light.color);\r\n            threeSpotLight.intensity = light.intensity;\r\n            threeSpotLight.distance = light.distance;\r\n            threeSpotLight.angle = light.angle;\r\n            threeSpotLight.penumbra = light.penumbra;\r\n            threeSpotLight.decay = light.decay;\r\n\r\n            threeSpotLight.position.set(light.position[0], light.position[1], light.position[2]);\r\n            threeSpotLight.target.position.set(light.target[0], light.target[1], light.target[2]);\r\n        }\r\n    }\r\n\r\n    public adjustToBoundingBox(light: AbstractLight, dataChild: SDData, boundingBox: IBox) {\r\n        let threeLight: THREE.Light = <THREE.Light>dataChild.children[0];\r\n\r\n        if (light instanceof DirectionalLight) {\r\n            const threeDirectionalLight = <THREE.DirectionalLight>threeLight;\r\n\r\n            const bs: ISphere = boundingBox.boundingSphere;\r\n            threeDirectionalLight.position.set(bs.center[0] + light.direction[0] * bs.radius * 2.35, bs.center[1] + light.direction[1] * bs.radius * 2.35, bs.center[2] + light.direction[2] * bs.radius * 2.35);\r\n            threeDirectionalLight.target.position.set(bs.center[0], bs.center[1], bs.center[2]);\r\n\r\n            if (light.castShadow === true && this.forceDisabledShadows === false) {\r\n                threeDirectionalLight.castShadow = true;\r\n                threeDirectionalLight.shadow.camera.up.set(0, 0, 1);\r\n                threeDirectionalLight.shadow.camera.far = 8 * bs.radius;\r\n                threeDirectionalLight.shadow.camera.right = 1.5 * bs.radius;\r\n                threeDirectionalLight.shadow.camera.left = -1.5 * bs.radius;\r\n                threeDirectionalLight.shadow.camera.top = 1.5 * bs.radius;\r\n                threeDirectionalLight.shadow.camera.bottom = -1.5 * bs.radius;\r\n                threeDirectionalLight.shadow.mapSize.width = light.shadowMapResolution;\r\n                threeDirectionalLight.shadow.mapSize.height = light.shadowMapResolution;\r\n                threeDirectionalLight.shadow.bias = light.shadowMapBias;\r\n                threeDirectionalLight.shadow.camera.updateProjectionMatrix();\r\n                this._shadowMapCount++;\r\n            } else {\r\n                threeDirectionalLight.castShadow = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public get shadowMapCount(): number {\r\n        return this._shadowMapCount;\r\n    }\r\n\r\n    public set shadowMapCount(value: number) {\r\n        this._shadowMapCount = value;\r\n    }\r\n\r\n    public get forceDisabledShadows(): boolean {\r\n        return this._forceDisabledShadows;\r\n    }\r\n\r\n    public set forceDisabledShadows(value: boolean) {\r\n        this._forceDisabledShadows = value;\r\n    }\r\n\r\n    // #endregion Public Methods (2)\r\n}"]}},"error":null,"hash":"0fafce6c4fbae51e5c387a8e6c7787f6","cacheData":{"env":{}}}