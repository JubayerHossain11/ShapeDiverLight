{"id":"node_modules/@shapediver/viewer/dist/implementation/viewport/camera/PerspectiveCameraApi.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\camera\\PerspectiveCameraApi.js.map","includedInParent":true,"mtime":1706527154196},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\src\\implementation\\viewport\\camera\\PerspectiveCameraApi.ts","includedInParent":true,"mtime":1706527154824},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\package.json","includedInParent":true,"mtime":1706527153686},{"name":"./AbstractCameraApi","loc":{"line":16,"column":36,"index":1383},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\camera\\PerspectiveCameraApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\camera\\AbstractCameraApi.js"},{"name":"@shapediver/viewer.shared.services","loc":{"line":17,"column":41,"index":1449},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\camera\\PerspectiveCameraApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.services\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _PerspectiveCameraApi_camera, _PerspectiveCameraApi_inputValidator, _PerspectiveCameraApi_logger, _PerspectiveCameraApi_viewportApi;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PerspectiveCameraApi = void 0;\r\nconst AbstractCameraApi_1 = require(\"./AbstractCameraApi\");\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nclass PerspectiveCameraApi extends AbstractCameraApi_1.AbstractCameraApi {\r\n    // #endregion Properties (1)\r\n    // #region Constructors (1)\r\n    constructor(viewportApi, camera) {\r\n        super(viewportApi, camera);\r\n        // #region Properties (1)\r\n        _PerspectiveCameraApi_camera.set(this, void 0);\r\n        _PerspectiveCameraApi_inputValidator.set(this, viewer_shared_services_1.InputValidator.instance);\r\n        _PerspectiveCameraApi_logger.set(this, viewer_shared_services_1.Logger.instance);\r\n        _PerspectiveCameraApi_viewportApi.set(this, void 0);\r\n        __classPrivateFieldSet(this, _PerspectiveCameraApi_viewportApi, viewportApi, \"f\");\r\n        __classPrivateFieldSet(this, _PerspectiveCameraApi_camera, camera, \"f\");\r\n        this.scope = 'PerspectiveCameraApi';\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (38)\r\n    get autoRotationSpeed() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.autoRotationSpeed;\r\n    }\r\n    set autoRotationSpeed(value) {\r\n        const scope = 'autoRotationSpeed';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.autoRotationSpeed = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get cubePositionRestriction() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.cubePositionRestriction;\r\n    }\r\n    set cubePositionRestriction(value) {\r\n        const scope = 'cubePositionRestriction';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'object');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.min, 'vec3');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.max, 'vec3');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.cubePositionRestriction = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get cubeTargetRestriction() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.cubeTargetRestriction;\r\n    }\r\n    set cubeTargetRestriction(value) {\r\n        const scope = 'cubeTargetRestriction';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'object');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.min, 'vec3');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.max, 'vec3');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.cubeTargetRestriction = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get damping() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.damping;\r\n    }\r\n    set damping(value) {\r\n        const scope = 'damping';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.damping = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get enableAutoRotation() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.enableAutoRotation;\r\n    }\r\n    set enableAutoRotation(value) {\r\n        const scope = 'enableAutoRotation';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'boolean');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.enableAutoRotation = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get enableKeyPan() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.enableKeyPan;\r\n    }\r\n    set enableKeyPan(value) {\r\n        const scope = 'enableKeyPan';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'boolean');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.enableKeyPan = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get enablePan() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.enablePan;\r\n    }\r\n    set enablePan(value) {\r\n        const scope = 'enablePan';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'boolean');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.enablePan = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get enableRotation() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.enableRotation;\r\n    }\r\n    set enableRotation(value) {\r\n        const scope = 'enableRotation';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'boolean');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.enableRotation = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get enableZoom() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.enableZoom;\r\n    }\r\n    set enableZoom(value) {\r\n        const scope = 'enableZoom';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'boolean');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.enableZoom = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get fov() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").fov;\r\n    }\r\n    set fov(value) {\r\n        const scope = 'fov';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").fov = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get keyPanSpeed() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.keyPanSpeed;\r\n    }\r\n    set keyPanSpeed(value) {\r\n        const scope = 'keyPanSpeed';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.keyPanSpeed = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get movementSmoothness() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.movementSmoothness;\r\n    }\r\n    set movementSmoothness(value) {\r\n        const scope = 'movementSmoothness';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.movementSmoothness = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get panSpeed() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.panSpeed;\r\n    }\r\n    set panSpeed(value) {\r\n        const scope = 'panSpeed';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.panSpeed = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get rotationRestriction() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.rotationRestriction;\r\n    }\r\n    set rotationRestriction(value) {\r\n        const scope = 'rotationRestriction';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'object');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.minAzimuthAngle, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.maxAzimuthAngle, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.minPolarAngle, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.maxPolarAngle, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.rotationRestriction = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get rotationSpeed() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.rotationSpeed;\r\n    }\r\n    set rotationSpeed(value) {\r\n        const scope = 'rotationSpeed';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.rotationSpeed = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get spherePositionRestriction() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.spherePositionRestriction;\r\n    }\r\n    set spherePositionRestriction(value) {\r\n        const scope = 'spherePositionRestriction';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'object');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.center, 'vec3');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.radius, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.spherePositionRestriction = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get sphereTargetRestriction() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.sphereTargetRestriction;\r\n    }\r\n    set sphereTargetRestriction(value) {\r\n        const scope = 'sphereTargetRestriction';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'object');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.center, 'vec3');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.radius, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.sphereTargetRestriction = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get zoomRestriction() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.zoomRestriction;\r\n    }\r\n    set zoomRestriction(value) {\r\n        const scope = 'zoomRestriction';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'object');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.minDistance, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value.maxDistance, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.zoomRestriction = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n    get zoomSpeed() {\r\n        return __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.zoomSpeed;\r\n    }\r\n    set zoomSpeed(value) {\r\n        const scope = 'zoomSpeed';\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_camera, \"f\").controls.zoomSpeed = value;\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _PerspectiveCameraApi_viewportApi, \"f\").update();\r\n    }\r\n}\r\nexports.PerspectiveCameraApi = PerspectiveCameraApi;\r\n_PerspectiveCameraApi_camera = new WeakMap(), _PerspectiveCameraApi_inputValidator = new WeakMap(), _PerspectiveCameraApi_logger = new WeakMap(), _PerspectiveCameraApi_viewportApi = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"PerspectiveCameraApi.js","sourceRoot":"","sources":["../../../../src/implementation/viewport/camera/PerspectiveCameraApi.ts"],"names":[],"mappings":"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","sourcesContent":["import { vec3, vec2 } from \"gl-matrix\";\r\nimport { IPerspectiveCamera } from \"@shapediver/viewer.rendering-engine.camera-engine\";\r\nimport { IPerspectiveCameraApi } from \"../../../interfaces/viewport/camera/IPerspectiveCameraApi\";\r\nimport { AbstractCameraApi } from \"./AbstractCameraApi\";\r\nimport { InputValidator, Logger } from \"@shapediver/viewer.shared.services\";\r\nimport { IViewportApi } from \"../../../interfaces/viewport/IViewportApi\";\r\n\r\nexport class PerspectiveCameraApi extends AbstractCameraApi implements IPerspectiveCameraApi {\r\n    // #region Properties (1)\r\n\r\n    readonly #camera: IPerspectiveCamera;\r\n    readonly #inputValidator: InputValidator = InputValidator.instance;\r\n    readonly #logger: Logger = Logger.instance;\r\n    readonly #viewportApi: IViewportApi;\r\n\r\n    // #endregion Properties (1)\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(viewportApi: IViewportApi, camera: IPerspectiveCamera) {\r\n        super(viewportApi, camera);\r\n        this.#viewportApi = viewportApi;\r\n        this.#camera = camera;\r\n        this.scope = 'PerspectiveCameraApi';\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Accessors (38)\r\n\r\n    public get autoRotationSpeed(): number {\r\n        return this.#camera.controls.autoRotationSpeed;\r\n    }\r\n\r\n    public set autoRotationSpeed(value: number) {\r\n        const scope = 'autoRotationSpeed';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#camera.controls.autoRotationSpeed = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get cubePositionRestriction(): { min: vec3; max: vec3; } {\r\n        return this.#camera.controls.cubePositionRestriction;\r\n    }\r\n\r\n    public set cubePositionRestriction(value: { min: vec3; max: vec3; }) {\r\n        const scope = 'cubePositionRestriction';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'object');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.min, 'vec3');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.max, 'vec3');\r\n        this.#camera.controls.cubePositionRestriction = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get cubeTargetRestriction(): { min: vec3; max: vec3; } {\r\n        return this.#camera.controls.cubeTargetRestriction;\r\n    }\r\n\r\n    public set cubeTargetRestriction(value: { min: vec3; max: vec3; }) {\r\n        const scope = 'cubeTargetRestriction';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'object');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.min, 'vec3');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.max, 'vec3');\r\n        this.#camera.controls.cubeTargetRestriction = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get damping(): number {\r\n        return this.#camera.controls.damping;\r\n    }\r\n\r\n    public set damping(value: number) {\r\n        const scope = 'damping';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#camera.controls.damping = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get enableAutoRotation(): boolean {\r\n        return this.#camera.controls.enableAutoRotation;\r\n    }\r\n\r\n    public set enableAutoRotation(value: boolean) {\r\n        const scope = 'enableAutoRotation';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'boolean');\r\n        this.#camera.controls.enableAutoRotation = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get enableKeyPan(): boolean {\r\n        return this.#camera.controls.enableKeyPan;\r\n    }\r\n\r\n    public set enableKeyPan(value: boolean) {\r\n        const scope = 'enableKeyPan';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'boolean');\r\n        this.#camera.controls.enableKeyPan = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get enablePan(): boolean {\r\n        return this.#camera.controls.enablePan;\r\n    }\r\n\r\n    public set enablePan(value: boolean) {\r\n        const scope = 'enablePan';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'boolean');\r\n        this.#camera.controls.enablePan = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get enableRotation(): boolean {\r\n        return this.#camera.controls.enableRotation;\r\n    }\r\n\r\n    public set enableRotation(value: boolean) {\r\n        const scope = 'enableRotation';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'boolean');\r\n        this.#camera.controls.enableRotation = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get enableZoom(): boolean {\r\n        return this.#camera.controls.enableZoom;\r\n    }\r\n\r\n    public set enableZoom(value: boolean) {\r\n        const scope = 'enableZoom';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'boolean');\r\n        this.#camera.controls.enableZoom = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get fov(): number {\r\n        return this.#camera.fov;\r\n    }\r\n\r\n    public set fov(value: number) {\r\n        const scope = 'fov';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#camera.fov = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get keyPanSpeed(): number {\r\n        return this.#camera.controls.keyPanSpeed;\r\n    }\r\n\r\n    public set keyPanSpeed(value: number) {\r\n        const scope = 'keyPanSpeed';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#camera.controls.keyPanSpeed = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get movementSmoothness(): number {\r\n        return this.#camera.controls.movementSmoothness;\r\n    }\r\n\r\n    public set movementSmoothness(value: number) {\r\n        const scope = 'movementSmoothness';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#camera.controls.movementSmoothness = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get panSpeed(): number {\r\n        return this.#camera.controls.panSpeed;\r\n    }\r\n\r\n    public set panSpeed(value: number) {\r\n        const scope = 'panSpeed';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#camera.controls.panSpeed = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get rotationRestriction(): { minPolarAngle: number; maxPolarAngle: number; minAzimuthAngle: number; maxAzimuthAngle: number; } {\r\n        return this.#camera.controls.rotationRestriction;\r\n    }\r\n\r\n    public set rotationRestriction(value: { minPolarAngle: number; maxPolarAngle: number; minAzimuthAngle: number; maxAzimuthAngle: number; }) {\r\n        const scope = 'rotationRestriction';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'object');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.minAzimuthAngle, 'number');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.maxAzimuthAngle, 'number');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.minPolarAngle, 'number');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.maxPolarAngle, 'number');\r\n        this.#camera.controls.rotationRestriction = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get rotationSpeed(): number {\r\n        return this.#camera.controls.rotationSpeed;\r\n    }\r\n\r\n    public set rotationSpeed(value: number) {\r\n        const scope = 'rotationSpeed';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#camera.controls.rotationSpeed = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get spherePositionRestriction(): { center: vec3; radius: number; } {\r\n        return this.#camera.controls.spherePositionRestriction;\r\n    }\r\n\r\n    public set spherePositionRestriction(value: { center: vec3; radius: number; }) {\r\n        const scope = 'spherePositionRestriction';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'object');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.center, 'vec3');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.radius, 'number');\r\n        this.#camera.controls.spherePositionRestriction = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get sphereTargetRestriction(): { center: vec3; radius: number; } {\r\n        return this.#camera.controls.sphereTargetRestriction;\r\n    }\r\n\r\n    public set sphereTargetRestriction(value: { center: vec3; radius: number; }) {\r\n        const scope = 'sphereTargetRestriction';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'object');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.center, 'vec3');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.radius, 'number');\r\n        this.#camera.controls.sphereTargetRestriction = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get zoomRestriction(): { minDistance: number; maxDistance: number; } {\r\n        return this.#camera.controls.zoomRestriction;\r\n    }\r\n\r\n    public set zoomRestriction(value: { minDistance: number; maxDistance: number; }) {\r\n        const scope = 'zoomRestriction';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'object');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.minDistance, 'number');\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value.maxDistance, 'number');\r\n        this.#camera.controls.zoomRestriction = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get zoomSpeed(): number {\r\n        return this.#camera.controls.zoomSpeed;\r\n    }\r\n\r\n    public set zoomSpeed(value: number) {\r\n        const scope = 'zoomSpeed';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#camera.controls.zoomSpeed = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    // #endregion Public Accessors (38)\r\n}"]}},"error":null,"hash":"033ae538b484971a54c5ad2c688772dc","cacheData":{"env":{}}}