{"id":"node_modules/@shapediver/viewer/dist/implementation/session/SessionApi.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\SessionApi.js.map","includedInParent":true,"mtime":1706527154219},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\src\\implementation\\session\\SessionApi.ts","includedInParent":true,"mtime":1706527154834},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\package.json","includedInParent":true,"mtime":1706527153686},{"name":"@shapediver/viewer.session-engine.session-engine","loc":{"line":25,"column":55,"index":2152},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\SessionApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.session-engine.session-engine\\dist\\index.js"},{"name":"@shapediver/viewer.main.creation-control-center","loc":{"line":26,"column":54,"index":2260},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\SessionApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.main.creation-control-center\\dist\\index.js"},{"name":"@shapediver/viewer.shared.services","loc":{"line":27,"column":41,"index":2354},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\SessionApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.services\\dist\\index.js"},{"name":"./OutputApi","loc":{"line":28,"column":28,"index":2422},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\SessionApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\OutputApi.js"},{"name":"./ExportApi","loc":{"line":29,"column":28,"index":2467},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\SessionApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\ExportApi.js"},{"name":"./ParameterApi","loc":{"line":30,"column":31,"index":2515},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\SessionApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\ParameterApi.js"},{"name":"./FileParameterApi","loc":{"line":31,"column":35,"index":2570},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\SessionApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\FileParameterApi.js"},{"name":"@shapediver/viewer.data-engine.gltf-converter","loc":{"line":32,"column":52,"index":2646},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\SessionApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.gltf-converter\\dist\\index.js"},{"name":"./data/SessionApiData","loc":{"line":33,"column":33,"index":2730},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\SessionApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer\\dist\\implementation\\session\\data\\SessionApiData.js"}],"generated":{"js":"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _SessionApi_creationControlCenter, _SessionApi_sessionEngine, _SessionApi_logger, _SessionApi_inputValidator, _SessionApi_gltfConverter, _SessionApi_outputs, _SessionApi_parameters, _SessionApi_exports;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SessionApi = void 0;\r\nconst viewer_session_engine_session_engine_1 = require(\"@shapediver/viewer.session-engine.session-engine\");\r\nconst viewer_main_creation_control_center_1 = require(\"@shapediver/viewer.main.creation-control-center\");\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nconst OutputApi_1 = require(\"./OutputApi\");\r\nconst ExportApi_1 = require(\"./ExportApi\");\r\nconst ParameterApi_1 = require(\"./ParameterApi\");\r\nconst FileParameterApi_1 = require(\"./FileParameterApi\");\r\nconst viewer_data_engine_gltf_converter_1 = require(\"@shapediver/viewer.data-engine.gltf-converter\");\r\nconst SessionApiData_1 = require(\"./data/SessionApiData\");\r\nclass SessionApi {\r\n    // #endregion Properties (2)\r\n    // #region Constructors (1)\r\n    constructor(sessionEngine) {\r\n        // #region Properties (2)\r\n        _SessionApi_creationControlCenter.set(this, viewer_main_creation_control_center_1.CreationControlCenter.instance);\r\n        _SessionApi_sessionEngine.set(this, void 0);\r\n        _SessionApi_logger.set(this, viewer_shared_services_1.Logger.instance);\r\n        _SessionApi_inputValidator.set(this, viewer_shared_services_1.InputValidator.instance);\r\n        _SessionApi_gltfConverter.set(this, viewer_data_engine_gltf_converter_1.GLTFConverter.instance);\r\n        _SessionApi_outputs.set(this, {});\r\n        _SessionApi_parameters.set(this, {});\r\n        _SessionApi_exports.set(this, {});\r\n        __classPrivateFieldSet(this, _SessionApi_sessionEngine, sessionEngine, \"f\");\r\n        if (!__classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").initialized)\r\n            throw new viewer_shared_services_1.ShapeDiverViewerSessionError('Session could not be initialized.');\r\n        __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").updateCallback = (newNode, oldNode) => {\r\n            if (newNode.data.findIndex(d => d instanceof SessionApiData_1.SessionApiData) === -1)\r\n                newNode.addData(new SessionApiData_1.SessionApiData(this));\r\n        };\r\n        __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").updateCallback(this.node, this.node);\r\n        for (let o in __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").outputs)\r\n            __classPrivateFieldGet(this, _SessionApi_outputs, \"f\")[o] = new OutputApi_1.OutputApi(__classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").outputs[o]);\r\n        for (let e in __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").exports)\r\n            __classPrivateFieldGet(this, _SessionApi_exports, \"f\")[e] = new ExportApi_1.ExportApi(__classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").exports[e]);\r\n        for (let p in __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").parameters) {\r\n            if (__classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").parameters[p] instanceof viewer_session_engine_session_engine_1.FileParameter) {\r\n                __classPrivateFieldGet(this, _SessionApi_parameters, \"f\")[p] = new FileParameterApi_1.FileParameterApi(__classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").parameters[p]);\r\n            }\r\n            else {\r\n                __classPrivateFieldGet(this, _SessionApi_parameters, \"f\")[p] = new ParameterApi_1.ParameterApi(__classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").parameters[p]);\r\n            }\r\n        }\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (26)\r\n    get automaticSceneUpdate() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").automaticSceneUpdate;\r\n    }\r\n    set automaticSceneUpdate(value) {\r\n        const scope = 'automaticSceneUpdate';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, value, 'boolean');\r\n        __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").automaticSceneUpdate = value;\r\n        __classPrivateFieldGet(this, _SessionApi_logger, \"f\").debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n    }\r\n    get commitParameters() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").settingsEngine.general.commitParameters;\r\n    }\r\n    set commitParameters(value) {\r\n        const scope = 'commitParameters';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, value, 'boolean');\r\n        __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").settingsEngine.general.commitParameters = value;\r\n        __classPrivateFieldGet(this, _SessionApi_logger, \"f\").debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n    }\r\n    get commitSettings() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").settingsEngine.general.commitSettings;\r\n    }\r\n    set commitSettings(value) {\r\n        const scope = 'commitSettings';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, value, 'boolean');\r\n        __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").settingsEngine.general.commitSettings = value;\r\n        __classPrivateFieldGet(this, _SessionApi_logger, \"f\").debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n    }\r\n    get customizeOnParameterChange() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").customizeOnParameterChange;\r\n    }\r\n    set customizeOnParameterChange(value) {\r\n        const scope = 'customizeOnParameterChange';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, value, 'boolean');\r\n        __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").customizeOnParameterChange = value;\r\n        __classPrivateFieldGet(this, _SessionApi_logger, \"f\").debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n    }\r\n    get excludeViewports() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").excludeViewports;\r\n    }\r\n    set excludeViewports(value) {\r\n        const scope = 'excludeViewports';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, value, 'stringArray');\r\n        __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").excludeViewports = value;\r\n        __classPrivateFieldGet(this, _SessionApi_logger, \"f\").debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n    }\r\n    get exports() {\r\n        return __classPrivateFieldGet(this, _SessionApi_exports, \"f\");\r\n    }\r\n    get id() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").id;\r\n    }\r\n    get initialized() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").initialized;\r\n    }\r\n    get jwtToken() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").jwtToken;\r\n    }\r\n    get modelViewUrl() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").modelViewUrl;\r\n    }\r\n    get node() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").node;\r\n    }\r\n    get outputs() {\r\n        return __classPrivateFieldGet(this, _SessionApi_outputs, \"f\");\r\n    }\r\n    get parameters() {\r\n        return __classPrivateFieldGet(this, _SessionApi_parameters, \"f\");\r\n    }\r\n    get updateCallback() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").updateCallback;\r\n    }\r\n    set updateCallback(value) {\r\n        const scope = 'updateCallback';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, value, 'function', false);\r\n        __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").updateCallback = (newNode, oldNode) => {\r\n            if (newNode.data.findIndex(d => d instanceof SessionApiData_1.SessionApiData) === -1)\r\n                newNode.addData(new SessionApiData_1.SessionApiData(this));\r\n            if (value)\r\n                value(newNode, oldNode);\r\n        };\r\n        __classPrivateFieldGet(this, _SessionApi_logger, \"f\").debug(`SessionApi.${scope}: ${scope} was updated to ${value}.`);\r\n    }\r\n    get refreshJwtToken() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").refreshJwtToken;\r\n    }\r\n    set refreshJwtToken(value) {\r\n        const scope = 'refreshJwtToken';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, value, 'function', false);\r\n        __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").refreshJwtToken = value;\r\n        __classPrivateFieldGet(this, _SessionApi_logger, \"f\").debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n    }\r\n    get ticket() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").ticket;\r\n    }\r\n    // #endregion Public Accessors (26)\r\n    // #region Public Methods (21)\r\n    applySettings(response, sections) {\r\n        const scope = 'applySettings';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, response, 'object');\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, sections, 'object', false);\r\n        return __classPrivateFieldGet(this, _SessionApi_creationControlCenter, \"f\").applySettings(this.id, response, sections);\r\n    }\r\n    canGoBack() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").canGoBack();\r\n    }\r\n    canGoForward() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").canGoForward();\r\n    }\r\n    close() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield __classPrivateFieldGet(this, _SessionApi_creationControlCenter, \"f\").closeSessionEngine(this.id);\r\n        });\r\n    }\r\n    convertToGlTF() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            for (let r in __classPrivateFieldGet(this, _SessionApi_creationControlCenter, \"f\").renderingEngines)\r\n                __classPrivateFieldGet(this, _SessionApi_creationControlCenter, \"f\").renderingEngines[r].update('SessionApi.convertToGlTF');\r\n            const result = yield __classPrivateFieldGet(this, _SessionApi_gltfConverter, \"f\").convert(this.node, false);\r\n            return new Blob([result], { type: 'application/octet-stream' });\r\n        });\r\n    }\r\n    customize(force = false) {\r\n        const scope = 'customize';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, force, 'boolean', false);\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").customize(force);\r\n    }\r\n    customizeParallel(parameterValues) {\r\n        const scope = 'customizeParallel';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, parameterValues, 'object');\r\n        for (let p in parameterValues)\r\n            __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, parameterValues[p], 'string');\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").customizeParallel(parameterValues);\r\n    }\r\n    getExportById(id) {\r\n        const scope = 'getExportById';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, id, 'string');\r\n        return __classPrivateFieldGet(this, _SessionApi_exports, \"f\")[id];\r\n    }\r\n    getExportByName(name) {\r\n        const scope = 'getExportByName';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, name, 'string');\r\n        return Object.values(__classPrivateFieldGet(this, _SessionApi_exports, \"f\")).filter(e => e.name === name);\r\n    }\r\n    getExportByType(type) {\r\n        const scope = 'getExportByType';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, type, 'string');\r\n        return Object.values(__classPrivateFieldGet(this, _SessionApi_exports, \"f\")).filter(e => e.type === type);\r\n    }\r\n    getOutputByFormat(format) {\r\n        const scope = 'getOutputByFormat';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, format, 'string');\r\n        return Object.values(__classPrivateFieldGet(this, _SessionApi_outputs, \"f\")).filter(o => o.format.includes(format));\r\n    }\r\n    getOutputById(id) {\r\n        const scope = 'getOutputById';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, id, 'string');\r\n        return __classPrivateFieldGet(this, _SessionApi_outputs, \"f\")[id];\r\n    }\r\n    getOutputByName(name) {\r\n        const scope = 'getOutputByName';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, name, 'string');\r\n        return Object.values(__classPrivateFieldGet(this, _SessionApi_outputs, \"f\")).filter(o => o.name === name);\r\n    }\r\n    getParameterById(id) {\r\n        const scope = 'getParameterById';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, id, 'string');\r\n        return __classPrivateFieldGet(this, _SessionApi_parameters, \"f\")[id];\r\n    }\r\n    getParameterByName(name) {\r\n        const scope = 'getParameterByName';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, name, 'string');\r\n        return Object.values(__classPrivateFieldGet(this, _SessionApi_parameters, \"f\")).filter(p => p.name === name);\r\n    }\r\n    getParameterByType(type) {\r\n        const scope = 'getParameterByType';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, type, 'string');\r\n        return Object.values(__classPrivateFieldGet(this, _SessionApi_parameters, \"f\")).filter(p => p.type === type);\r\n    }\r\n    goBack() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").goBack();\r\n    }\r\n    goForward() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").goForward();\r\n    }\r\n    resetParameterValues(force = false) {\r\n        const scope = 'resetParameterValues';\r\n        for (let p in this.parameters)\r\n            this.parameters[p].value = this.parameters[p].defval;\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, force, 'boolean', false);\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").customize(force);\r\n    }\r\n    resetSettings(sections) {\r\n        const scope = 'applySettings';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, sections, 'object', false);\r\n        return __classPrivateFieldGet(this, _SessionApi_creationControlCenter, \"f\").resetSettings(this.id, sections);\r\n    }\r\n    saveDefaultParameterValues() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").saveDefaultParameterValues();\r\n    }\r\n    saveSettings(viewportId) {\r\n        const scope = 'saveDefaultParameterValues';\r\n        __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, viewportId, 'string', false);\r\n        return __classPrivateFieldGet(this, _SessionApi_creationControlCenter, \"f\").saveSettings(this.id, viewportId);\r\n    }\r\n    saveUiProperties() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").saveUiProperties();\r\n    }\r\n    setJwtToken(value) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const scope = 'setJwtToken';\r\n            __classPrivateFieldGet(this, _SessionApi_inputValidator, \"f\").validateAndError(`SessionApi.${scope}`, value, 'string', false);\r\n            yield __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").setJwtToken(value);\r\n            __classPrivateFieldGet(this, _SessionApi_logger, \"f\").debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n            return;\r\n        });\r\n    }\r\n    updateOutputs() {\r\n        return __classPrivateFieldGet(this, _SessionApi_sessionEngine, \"f\").updateOutputs();\r\n    }\r\n}\r\nexports.SessionApi = SessionApi;\r\n_SessionApi_creationControlCenter = new WeakMap(), _SessionApi_sessionEngine = new WeakMap(), _SessionApi_logger = new WeakMap(), _SessionApi_inputValidator = new WeakMap(), _SessionApi_gltfConverter = new WeakMap(), _SessionApi_outputs = new WeakMap(), _SessionApi_parameters = new WeakMap(), _SessionApi_exports = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"SessionApi.js","sourceRoot":"","sources":["../../../src/implementation/session/SessionApi.ts"],"names":[],"mappings":"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","sourcesContent":["import { ShapeDiverResponseDto } from \"@shapediver/api.geometry-api-dto-v2\";\r\nimport { FileParameter, IParameter, ISettingsSections, SessionEngine } from \"@shapediver/viewer.session-engine.session-engine\";\r\nimport { ITreeNode } from \"@shapediver/viewer.shared.node-tree\";\r\nimport { ICreationControlCenter, CreationControlCenter } from \"@shapediver/viewer.main.creation-control-center\";\r\nimport { IExportApi } from \"../../interfaces/session/IExportApi\";\r\nimport { IOutputApi } from \"../../interfaces/session/IOutputApi\";\r\nimport { IParameterApi } from \"../../interfaces/session/IParameterApi\";\r\nimport { ISessionApi } from \"../../interfaces/session/ISessionApi\";\r\nimport { InputValidator, Logger, ShapeDiverViewerSessionError } from \"@shapediver/viewer.shared.services\";\r\nimport { OutputApi } from \"./OutputApi\";\r\nimport { ExportApi } from \"./ExportApi\";\r\nimport { ParameterApi } from \"./ParameterApi\";\r\nimport { FileParameterApi } from \"./FileParameterApi\";\r\nimport { GLTFConverter } from \"@shapediver/viewer.data-engine.gltf-converter\";\r\nimport { SessionApiData } from \"./data/SessionApiData\";\r\n\r\nexport class SessionApi implements ISessionApi {\r\n    // #region Properties (2)\r\n\r\n    readonly #creationControlCenter: ICreationControlCenter = CreationControlCenter.instance;\r\n    readonly #sessionEngine: SessionEngine;\r\n    readonly #logger: Logger = Logger.instance;\r\n    readonly #inputValidator: InputValidator = InputValidator.instance;\r\n    readonly #gltfConverter: GLTFConverter = GLTFConverter.instance;\r\n\r\n    readonly #outputs: { [key: string]: IOutputApi; } = {};\r\n    readonly #parameters: { [key: string]: IParameterApi<any>; } = {};\r\n    readonly #exports: { [key: string]: IExportApi; } = {};\r\n\r\n    // #endregion Properties (2)\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(sessionEngine: SessionEngine) {\r\n        this.#sessionEngine = sessionEngine;\r\n        if (!this.#sessionEngine.initialized)\r\n            throw new ShapeDiverViewerSessionError('Session could not be initialized.');\r\n\r\n        this.#sessionEngine.updateCallback = (newNode: ITreeNode, oldNode: ITreeNode) => {\r\n            if (newNode.data.findIndex(d => d instanceof SessionApiData) === -1)\r\n                newNode.addData(new SessionApiData(this));\r\n        };\r\n        this.#sessionEngine.updateCallback(this.node, this.node)\r\n\r\n        for (let o in this.#sessionEngine.outputs)\r\n            this.#outputs[o] = new OutputApi(this.#sessionEngine.outputs[o]);\r\n\r\n        for (let e in this.#sessionEngine.exports)\r\n            this.#exports[e] = new ExportApi(this.#sessionEngine.exports[e]);\r\n\r\n        for (let p in this.#sessionEngine.parameters) {\r\n            if (this.#sessionEngine.parameters[p] instanceof FileParameter) {\r\n                this.#parameters[p] = new FileParameterApi(<FileParameter>this.#sessionEngine.parameters[p]);\r\n            } else {\r\n                this.#parameters[p] = new ParameterApi(this.#sessionEngine.parameters[p]);\r\n            }\r\n        }\r\n    }\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Accessors (26)\r\n\r\n    public get automaticSceneUpdate(): boolean {\r\n        return this.#sessionEngine.automaticSceneUpdate;\r\n    }\r\n\r\n    public set automaticSceneUpdate(value: boolean) {\r\n        const scope = 'automaticSceneUpdate';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, value, 'boolean');\r\n        this.#sessionEngine.automaticSceneUpdate = value;\r\n        this.#logger.debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n    }\r\n\r\n    public get commitParameters(): boolean {\r\n        return this.#sessionEngine.settingsEngine.general.commitParameters;\r\n    }\r\n\r\n    public set commitParameters(value: boolean) {\r\n        const scope = 'commitParameters';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, value, 'boolean');\r\n        this.#sessionEngine.settingsEngine.general.commitParameters = value;\r\n        this.#logger.debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n    }\r\n\r\n    public get commitSettings(): boolean {\r\n        return this.#sessionEngine.settingsEngine.general.commitSettings;\r\n    }\r\n\r\n    public set commitSettings(value: boolean) {\r\n        const scope = 'commitSettings';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, value, 'boolean');\r\n        this.#sessionEngine.settingsEngine.general.commitSettings = value;\r\n        this.#logger.debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n    }\r\n\r\n    public get customizeOnParameterChange(): boolean {\r\n        return this.#sessionEngine.customizeOnParameterChange;\r\n    }\r\n\r\n    public set customizeOnParameterChange(value: boolean) {\r\n        const scope = 'customizeOnParameterChange';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, value, 'boolean');\r\n        this.#sessionEngine.customizeOnParameterChange = value;\r\n        this.#logger.debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n    }\r\n\r\n    public get excludeViewports(): string[] {\r\n        return this.#sessionEngine.excludeViewports;\r\n    }\r\n\r\n    public set excludeViewports(value: string[]) {\r\n        const scope = 'excludeViewports';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, value, 'stringArray');\r\n        this.#sessionEngine.excludeViewports = value;\r\n        this.#logger.debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n    }\r\n\r\n    public get exports(): { [key: string]: IExportApi; } {\r\n        return this.#exports;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.#sessionEngine.id;\r\n    }\r\n\r\n    public get initialized(): boolean {\r\n        return this.#sessionEngine.initialized;\r\n    }\r\n\r\n    public get jwtToken(): string | undefined {\r\n        return this.#sessionEngine.jwtToken;\r\n    }\r\n\r\n    public get modelViewUrl(): string {\r\n        return this.#sessionEngine.modelViewUrl;\r\n    }\r\n\r\n    public get node(): ITreeNode {\r\n        return this.#sessionEngine.node;\r\n    }\r\n\r\n    public get outputs(): { [key: string]: IOutputApi; } {\r\n        return this.#outputs;\r\n    }\r\n\r\n    public get parameters(): { [key: string]: IParameterApi<any>; } {\r\n        return this.#parameters;\r\n    }\r\n\r\n    public get updateCallback(): ((newNode: ITreeNode, oldNode: ITreeNode) => void) | null {\r\n        return this.#sessionEngine.updateCallback;\r\n    }\r\n\r\n    public set updateCallback(value: ((newNode: ITreeNode, oldNode: ITreeNode) => void) | null) {\r\n        const scope = 'updateCallback';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, value, 'function', false);\r\n        this.#sessionEngine.updateCallback = (newNode: ITreeNode, oldNode: ITreeNode) => {\r\n            if (newNode.data.findIndex(d => d instanceof SessionApiData) === -1)\r\n                newNode.addData(new SessionApiData(this));\r\n            if (value) value(newNode, oldNode);\r\n        };\r\n        this.#logger.debug(`SessionApi.${scope}: ${scope} was updated to ${value}.`);\r\n    }\r\n\r\n    public get refreshJwtToken(): (() => Promise<string>) | undefined {\r\n        return this.#sessionEngine.refreshJwtToken;\r\n    }\r\n\r\n    public set refreshJwtToken(value: (() => Promise<string>) | undefined) {\r\n        const scope = 'refreshJwtToken';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, value, 'function', false);\r\n        this.#sessionEngine.refreshJwtToken = value;\r\n        this.#logger.debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n    }\r\n\r\n    public get ticket(): string {\r\n        return this.#sessionEngine.ticket;\r\n    }\r\n\r\n    // #endregion Public Accessors (26)\r\n\r\n    // #region Public Methods (21)\r\n\r\n    public applySettings(response: ShapeDiverResponseDto, sections?: ISettingsSections): Promise<void> {\r\n        const scope = 'applySettings';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, response, 'object');\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, sections, 'object', false);\r\n        return this.#creationControlCenter.applySettings(this.id, response, sections);\r\n    }\r\n\r\n    public canGoBack(): boolean {\r\n        return this.#sessionEngine.canGoBack();\r\n    }\r\n\r\n    public canGoForward(): boolean {\r\n        return this.#sessionEngine.canGoForward();\r\n    }\r\n\r\n    public async close(): Promise<void> {\r\n        return await this.#creationControlCenter.closeSessionEngine(this.id);\r\n    }\r\n\r\n    public async convertToGlTF(): Promise<Blob> {\r\n        for (let r in this.#creationControlCenter.renderingEngines)\r\n            this.#creationControlCenter.renderingEngines[r].update('SessionApi.convertToGlTF');\r\n\r\n        const result = await this.#gltfConverter.convert(this.node, false);\r\n        return new Blob([result], { type: 'application/octet-stream' });\r\n    }\r\n\r\n    public customize(force: boolean = false): Promise<ITreeNode> {\r\n        const scope = 'customize';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, force, 'boolean', false);\r\n        return this.#sessionEngine.customize(force);\r\n    }\r\n\r\n    public customizeParallel(parameterValues: { [key: string]: string; }): Promise<ITreeNode> {\r\n        const scope = 'customizeParallel';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, parameterValues, 'object');\r\n        for (let p in parameterValues)\r\n            this.#inputValidator.validateAndError(`SessionApi.${scope}`, parameterValues[p], 'string');\r\n\r\n        return this.#sessionEngine.customizeParallel(parameterValues);\r\n    }\r\n\r\n    public getExportById(id: string): IExportApi | null {\r\n        const scope = 'getExportById';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, id, 'string');\r\n        return this.#exports[id];\r\n    }\r\n\r\n    public getExportByName(name: string): IExportApi[] {\r\n        const scope = 'getExportByName';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, name, 'string');\r\n        return Object.values(this.#exports).filter(e => e.name === name);\r\n    }\r\n\r\n    public getExportByType(type: string): IExportApi[] {\r\n        const scope = 'getExportByType';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, type, 'string');\r\n        return Object.values(this.#exports).filter(e => e.type === type);\r\n    }\r\n\r\n    public getOutputByFormat(format: string): IOutputApi[] {\r\n        const scope = 'getOutputByFormat';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, format, 'string');\r\n        return Object.values(this.#outputs).filter(o => o.format.includes(format));\r\n    }\r\n\r\n    public getOutputById(id: string): IOutputApi | null {\r\n        const scope = 'getOutputById';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, id, 'string');\r\n        return this.#outputs[id];\r\n    }\r\n\r\n    public getOutputByName(name: string): IOutputApi[] {\r\n        const scope = 'getOutputByName';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, name, 'string');\r\n        return Object.values(this.#outputs).filter(o => o.name === name);\r\n    }\r\n\r\n    public getParameterById(id: string): IParameterApi<any> | null {\r\n        const scope = 'getParameterById';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, id, 'string');\r\n        return this.#parameters[id];\r\n    }\r\n\r\n    public getParameterByName(name: string): IParameterApi<any>[] {\r\n        const scope = 'getParameterByName';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, name, 'string');\r\n        return Object.values(this.#parameters).filter(p => p.name === name);\r\n    }\r\n\r\n    public getParameterByType(type: string): IParameterApi<any>[] {\r\n        const scope = 'getParameterByType';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, type, 'string');\r\n        return Object.values(this.#parameters).filter(p => p.type === type);\r\n    }\r\n\r\n    public goBack(): Promise<ITreeNode> {\r\n        return this.#sessionEngine.goBack();\r\n    }\r\n\r\n    public goForward(): Promise<ITreeNode> {\r\n        return this.#sessionEngine.goForward();\r\n    }\r\n\r\n    public resetParameterValues(force: boolean = false): Promise<ITreeNode> {\r\n        const scope = 'resetParameterValues';\r\n        for (let p in this.parameters)\r\n            this.parameters[p].value = this.parameters[p].defval;\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, force, 'boolean', false);\r\n        return this.#sessionEngine.customize(force);\r\n    }\r\n\r\n    public resetSettings(sections?: ISettingsSections): Promise<void> {\r\n        const scope = 'applySettings';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, sections, 'object', false);\r\n        return this.#creationControlCenter.resetSettings(this.id, sections);\r\n    }\r\n\r\n    public saveDefaultParameterValues(): Promise<boolean> {\r\n        return this.#sessionEngine.saveDefaultParameterValues();\r\n    }\r\n\r\n    public saveSettings(viewportId?: string): Promise<boolean> {\r\n        const scope = 'saveDefaultParameterValues';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, viewportId, 'string', false);\r\n        return this.#creationControlCenter.saveSettings(this.id, viewportId);\r\n    }\r\n\r\n    public saveUiProperties(): Promise<boolean> {\r\n        return this.#sessionEngine.saveUiProperties();\r\n    }\r\n\r\n    public async setJwtToken(value: string): Promise<void> {\r\n        const scope = 'setJwtToken';\r\n        this.#inputValidator.validateAndError(`SessionApi.${scope}`, value, 'string', false);\r\n        await this.#sessionEngine.setJwtToken(value);\r\n        this.#logger.debug(`SessionApi.${scope}: ${scope} was set to ${value}`);\r\n        return;\r\n    }\r\n\r\n    public updateOutputs(): Promise<ITreeNode> {\r\n        return this.#sessionEngine.updateOutputs();\r\n    }\r\n\r\n    // #endregion Public Methods (21)\r\n}"]}},"error":null,"hash":"6c15f0f5e754d565d4d3ba697e87ab18","cacheData":{"env":{}}}