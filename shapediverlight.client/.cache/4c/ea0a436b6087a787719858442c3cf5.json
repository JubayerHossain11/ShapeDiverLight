{"id":"node_modules/@shapediver/viewer.rendering-engine.canvas-engine/dist/implementation/Canvas.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.canvas-engine\\dist\\implementation\\Canvas.js.map","includedInParent":true,"mtime":1706527148032},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.canvas-engine\\src\\implementation\\Canvas.ts","includedInParent":true,"mtime":1706527148596},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.canvas-engine\\package.json","includedInParent":true,"mtime":1706527147877}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Canvas = void 0;\r\nclass Canvas {\r\n    // #region Constructors (1)\r\n    constructor(_id, _originalDefinition, _canvasElement) {\r\n        this._id = _id;\r\n        this._originalDefinition = _originalDefinition;\r\n        this._canvasElement = _canvasElement;\r\n        if (this._originalDefinition && this._originalDefinition instanceof HTMLCanvasElement)\r\n            this._originalDefinition = this._originalDefinition.cloneNode(true);\r\n        if (!_canvasElement) {\r\n            this._canvasElement = document.createElement(\"canvas\");\r\n            this._canvasElement.id = this._id;\r\n        }\r\n        else {\r\n            this._canvasElement = _canvasElement;\r\n        }\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (2)\r\n    get canvasElement() {\r\n        return this._canvasElement;\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    // #endregion Public Accessors (2)\r\n    reset() {\r\n        var _a;\r\n        const parent = (_a = this._canvasElement) === null || _a === void 0 ? void 0 : _a.parentElement;\r\n        parent === null || parent === void 0 ? void 0 : parent.removeChild(this._canvasElement);\r\n        if (this._originalDefinition instanceof HTMLCanvasElement) {\r\n            parent === null || parent === void 0 ? void 0 : parent.appendChild(this._canvasElement);\r\n        }\r\n    }\r\n}\r\nexports.Canvas = Canvas;\r\n"},"sourceMaps":{"js":{"version":3,"file":"Canvas.js","sourceRoot":"","sources":["../../src/implementation/Canvas.ts"],"names":[],"mappings":";;;AAEA,MAAa,MAAM;IACf,2BAA2B;IAE3B,YAA6B,GAAW,EAAmB,mBAAgD,EAAmB,cAAkC;QAAnI,QAAG,GAAH,GAAG,CAAQ;QAAmB,wBAAmB,GAAnB,mBAAmB,CAA6B;QAAmB,mBAAc,GAAd,cAAc,CAAoB;QAC5J,IAAG,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,YAAY,iBAAiB;YAChF,IAAI,CAAC,mBAAmB,GAAsB,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAE3F,IAAI,CAAC,cAAc,EAAE;YACjB,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAsB,CAAC;YAC5E,IAAI,CAAC,cAAc,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;SACrC;aAAM;YACH,IAAI,CAAC,cAAc,GAAsB,cAAc,CAAC;SAC3D;IACL,CAAC;IAED,8BAA8B;IAE9B,+BAA+B;IAE/B,IAAW,aAAa;QACpB,OAA0B,IAAI,CAAC,cAAc,CAAC;IAClD,CAAC;IAED,IAAW,EAAE;QACT,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED,kCAAkC;IAE3B,KAAK;;QACR,MAAM,MAAM,GAAG,MAAA,IAAI,CAAC,cAAc,0CAAE,aAAa,CAAC;QAClD,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,CAAC,IAAI,CAAC,cAAe,CAAC,CAAC;QAE1C,IAAI,IAAI,CAAC,mBAAmB,YAAY,iBAAiB,EAAE;YACvD,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,CAAC,IAAI,CAAC,cAAe,CAAC,CAAC;SAC7C;IACL,CAAC;CACJ;AArCD,wBAqCC","sourcesContent":["import { ICanvas } from '../interfaces/ICanvas'\r\n\r\nexport class Canvas implements ICanvas {\r\n    // #region Constructors (1)\r\n\r\n    constructor(private readonly _id: string, private readonly _originalDefinition?: HTMLCanvasElement | string, private readonly _canvasElement?: HTMLCanvasElement) {\r\n        if(this._originalDefinition && this._originalDefinition instanceof HTMLCanvasElement)\r\n            this._originalDefinition = <HTMLCanvasElement>this._originalDefinition.cloneNode(true);\r\n\r\n        if (!_canvasElement) {\r\n            this._canvasElement = document.createElement(\"canvas\") as HTMLCanvasElement;\r\n            this._canvasElement.id = this._id;\r\n        } else {\r\n            this._canvasElement = <HTMLCanvasElement>_canvasElement;\r\n        }\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Accessors (2)\r\n\r\n    public get canvasElement(): HTMLCanvasElement {\r\n        return <HTMLCanvasElement>this._canvasElement;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    // #endregion Public Accessors (2)\r\n\r\n    public reset() {\r\n        const parent = this._canvasElement?.parentElement;\r\n        parent?.removeChild(this._canvasElement!);\r\n\r\n        if (this._originalDefinition instanceof HTMLCanvasElement) {\r\n            parent?.appendChild(this._canvasElement!);\r\n        }\r\n    }\r\n}"]}},"error":null,"hash":"184a8b93997f63a521c650ebfca994e3","cacheData":{"env":{}}}