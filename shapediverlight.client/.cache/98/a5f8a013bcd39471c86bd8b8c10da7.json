{"id":"node_modules/@shapediver/viewer.rendering-engine-threejs.standard/dist/managers/CameraManager.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\managers\\CameraManager.js.map","includedInParent":true,"mtime":1706527152948},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\src\\managers\\CameraManager.ts","includedInParent":true,"mtime":1706527153848},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\package.json","includedInParent":true,"mtime":1706527152875},{"name":"three","loc":{"line":35,"column":35,"index":2171},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\managers\\CameraManager.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\three\\build\\three.module.js"},{"name":"gl-matrix","loc":{"line":36,"column":28,"index":2211},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\managers\\CameraManager.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\gl-matrix\\esm\\index.js"},{"name":"@shapediver/viewer.rendering-engine.camera-engine","loc":{"line":37,"column":56,"index":2282},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\managers\\CameraManager.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _CameraManager_camera, _CameraManager_cameraCache;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CameraManager = void 0;\r\nconst THREE = __importStar(require(\"three\"));\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nconst viewer_rendering_engine_camera_engine_1 = require(\"@shapediver/viewer.rendering-engine.camera-engine\");\r\nclass CameraManager {\r\n    // #region Constructors (1)\r\n    constructor(_renderingEngine) {\r\n        this._renderingEngine = _renderingEngine;\r\n        _CameraManager_camera.set(this, new THREE.PerspectiveCamera());\r\n        _CameraManager_cameraCache.set(this, {});\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Methods (2)\r\n    get camera() {\r\n        return __classPrivateFieldGet(this, _CameraManager_camera, \"f\");\r\n    }\r\n    updateCamera(time, aspect) {\r\n        var _a;\r\n        if (((_a = this._renderingEngine.cameraEngine.camera) === null || _a === void 0 ? void 0 : _a.type) === 'perspective')\r\n            this._renderingEngine.cameraEngine.camera.aspect = aspect;\r\n        return this._renderingEngine.cameraEngine.camera.update(time);\r\n    }\r\n    load(camera, dataChild) {\r\n        let threeCamera = __classPrivateFieldGet(this, _CameraManager_cameraCache, \"f\")[camera.id];\r\n        if (camera instanceof viewer_rendering_engine_camera_engine_1.PerspectiveCamera) {\r\n            if (!threeCamera) {\r\n                threeCamera = new THREE.PerspectiveCamera();\r\n                __classPrivateFieldGet(this, _CameraManager_cameraCache, \"f\")[camera.id] = threeCamera;\r\n                camera.threeJsObject[this._renderingEngine.id] = threeCamera;\r\n                if (dataChild)\r\n                    dataChild.add(threeCamera);\r\n            }\r\n            else {\r\n                camera.threeJsObject[this._renderingEngine.id] = threeCamera;\r\n                if (dataChild && !dataChild.children.find(t => t === threeCamera))\r\n                    dataChild.add(threeCamera);\r\n            }\r\n            const perspectiveCamera = camera;\r\n            const threePerspectiveCamera = threeCamera;\r\n            threePerspectiveCamera.up.set(0, 0, 1);\r\n            if (perspectiveCamera.useNodeData) {\r\n                threePerspectiveCamera.fov = perspectiveCamera.fov;\r\n                threePerspectiveCamera.aspect = perspectiveCamera.aspect;\r\n                threePerspectiveCamera.far = perspectiveCamera.far;\r\n                threePerspectiveCamera.near = perspectiveCamera.near;\r\n                threePerspectiveCamera.updateProjectionMatrix();\r\n            }\r\n        }\r\n        else {\r\n            if (!threeCamera) {\r\n                threeCamera = new THREE.OrthographicCamera(0, 0, 0, 0);\r\n                __classPrivateFieldGet(this, _CameraManager_cameraCache, \"f\")[camera.id] = threeCamera;\r\n                camera.threeJsObject[this._renderingEngine.id] = threeCamera;\r\n                if (dataChild)\r\n                    dataChild.add(threeCamera);\r\n            }\r\n            else {\r\n                camera.threeJsObject[this._renderingEngine.id] = threeCamera;\r\n                if (dataChild && !dataChild.children.find(t => t === threeCamera))\r\n                    dataChild.add(threeCamera);\r\n            }\r\n            const orthographicCamera = camera;\r\n            const threeOrthographicCamera = threeCamera;\r\n            threeOrthographicCamera.up.set(orthographicCamera.up[0], orthographicCamera.up[1], orthographicCamera.up[2]);\r\n            if (orthographicCamera.useNodeData) {\r\n                threeOrthographicCamera.left = orthographicCamera.left;\r\n                threeOrthographicCamera.bottom = orthographicCamera.bottom;\r\n                threeOrthographicCamera.right = orthographicCamera.right;\r\n                threeOrthographicCamera.top = orthographicCamera.top;\r\n                threeOrthographicCamera.near = orthographicCamera.near;\r\n                threeOrthographicCamera.far = orthographicCamera.far;\r\n                threeOrthographicCamera.updateProjectionMatrix();\r\n            }\r\n        }\r\n    }\r\n    adjustCamera(aspect) {\r\n        let cameraThree;\r\n        const camera = this._renderingEngine.cameraEngine.camera;\r\n        if (camera.useNodeData) {\r\n            const sdCameraNode = camera.node.threeJsObject[this._renderingEngine.id];\r\n            const sdCameraData = sdCameraNode.children[0];\r\n            cameraThree = sdCameraData.children[0];\r\n        }\r\n        else {\r\n            if (this._renderingEngine.cameraEngine.camera.type === viewer_rendering_engine_camera_engine_1.CAMERA_TYPE.ORTHOGRAPHIC) {\r\n                const orthographicCameraData = camera;\r\n                let orthographicCameraThreeJs = orthographicCameraData.threeJsObject[this._renderingEngine.id];\r\n                if (!orthographicCameraThreeJs)\r\n                    this.load(orthographicCameraData);\r\n                orthographicCameraThreeJs = orthographicCameraData.threeJsObject[this._renderingEngine.id];\r\n                const distance = gl_matrix_1.vec3.distance(orthographicCameraData.position, orthographicCameraData.target) / 2;\r\n                orthographicCameraThreeJs.up.set(orthographicCameraData.up[0], orthographicCameraData.up[1], orthographicCameraData.up[2]);\r\n                orthographicCameraThreeJs.left = orthographicCameraData.left = -distance * aspect;\r\n                orthographicCameraThreeJs.bottom = orthographicCameraData.bottom = -distance;\r\n                orthographicCameraThreeJs.right = orthographicCameraData.right = distance * aspect;\r\n                orthographicCameraThreeJs.top = orthographicCameraData.top = distance;\r\n                orthographicCameraThreeJs.near = orthographicCameraData.near = 0.01;\r\n                orthographicCameraThreeJs.far = orthographicCameraData.far = 100 * distance;\r\n                orthographicCameraThreeJs.position.set(orthographicCameraData.position[0], orthographicCameraData.position[1], orthographicCameraData.position[2]);\r\n                orthographicCameraThreeJs.lookAt(orthographicCameraData.target[0], orthographicCameraData.target[1], orthographicCameraData.target[2]);\r\n                orthographicCameraThreeJs.updateProjectionMatrix();\r\n                cameraThree = orthographicCameraThreeJs;\r\n            }\r\n            else {\r\n                const perspectiveCameraData = camera;\r\n                let perspectiveCameraThreeJs = perspectiveCameraData.threeJsObject[this._renderingEngine.id];\r\n                if (!perspectiveCameraThreeJs)\r\n                    this.load(perspectiveCameraData);\r\n                perspectiveCameraThreeJs = perspectiveCameraData.threeJsObject[this._renderingEngine.id];\r\n                perspectiveCameraThreeJs.up.set(0, 0, 1);\r\n                const fov = this._renderingEngine.cameraEngine.camera.fov;\r\n                const bs = this._renderingEngine.sceneTreeManager.boundingBox.boundingSphere;\r\n                const radius = bs.radius > 0 ? bs.radius : 2;\r\n                perspectiveCameraThreeJs.fov = perspectiveCameraData.fov = fov;\r\n                perspectiveCameraThreeJs.aspect = perspectiveCameraData.aspect = aspect;\r\n                perspectiveCameraThreeJs.far = perspectiveCameraData.far = (fov < 10 ? fov * 100.0 * 100 * radius : 100 * radius);\r\n                perspectiveCameraThreeJs.near = perspectiveCameraData.near = (fov < 10 ? fov * 100.0 * 0.01 * radius : 0.01 * radius);\r\n                perspectiveCameraThreeJs.position.set(perspectiveCameraData.position[0], perspectiveCameraData.position[1], perspectiveCameraData.position[2]);\r\n                perspectiveCameraThreeJs.lookAt(perspectiveCameraData.target[0], perspectiveCameraData.target[1], perspectiveCameraData.target[2]);\r\n                perspectiveCameraThreeJs.updateProjectionMatrix();\r\n                cameraThree = perspectiveCameraThreeJs;\r\n            }\r\n        }\r\n        __classPrivateFieldSet(this, _CameraManager_camera, cameraThree, \"f\");\r\n        return cameraThree;\r\n    }\r\n    init() { }\r\n}\r\nexports.CameraManager = CameraManager;\r\n_CameraManager_camera = new WeakMap(), _CameraManager_cameraCache = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"CameraManager.js","sourceRoot":"","sources":["../../src/managers/CameraManager.ts"],"names":[],"mappings":"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","sourcesContent":["import * as THREE from 'three'\r\nimport { mat4, vec3 } from 'gl-matrix'\r\nimport {\r\n  AbstractCamera,\r\n  CAMERA_TYPE,\r\n  OrthographicCamera,\r\n  PerspectiveCamera,\r\n} from '@shapediver/viewer.rendering-engine.camera-engine'\r\n\r\nimport { RenderingEngine } from '../RenderingEngine'\r\nimport { SDData } from '../objects/SDData'\r\nimport { IManager } from '@shapediver/viewer.rendering-engine.rendering-engine'\r\n\r\nexport class CameraManager implements IManager {\r\n\r\n    #camera: THREE.Camera = new THREE.PerspectiveCamera();\r\n    #cameraCache: { [key: string]: THREE.Camera } = {};\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(private readonly _renderingEngine: RenderingEngine) { }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Methods (2)\r\n\r\n    public get camera(): THREE.Camera {\r\n        return this.#camera;\r\n    }\r\n\r\n    public updateCamera(time: number, aspect: number): boolean {\r\n        if(this._renderingEngine.cameraEngine.camera?.type === 'perspective') \r\n            (<PerspectiveCamera>this._renderingEngine.cameraEngine.camera).aspect = aspect;\r\n        return (<AbstractCamera>this._renderingEngine.cameraEngine.camera)!.update(time);\r\n\r\n    }\r\n\r\n    public load(camera: AbstractCamera, dataChild?: SDData) {\r\n        let threeCamera: THREE.Camera | null = this.#cameraCache[camera.id];\r\n\r\n        if(camera instanceof PerspectiveCamera) {\r\n            if(!threeCamera) {\r\n                threeCamera = new THREE.PerspectiveCamera();\r\n                this.#cameraCache[camera.id] = threeCamera;\r\n                (<PerspectiveCamera>camera).threeJsObject[this._renderingEngine.id] = <THREE.PerspectiveCamera>threeCamera;\r\n                if(dataChild)\r\n                    dataChild.add(threeCamera);\r\n            } else {\r\n                (<PerspectiveCamera>camera).threeJsObject[this._renderingEngine.id] = <THREE.PerspectiveCamera>threeCamera;\r\n                if(dataChild && !dataChild.children.find(t => t === threeCamera))\r\n                    dataChild.add(threeCamera);\r\n            }\r\n            const perspectiveCamera = <PerspectiveCamera>camera;\r\n            const threePerspectiveCamera = <THREE.PerspectiveCamera>threeCamera;\r\n\r\n            threePerspectiveCamera.up.set(0, 0, 1);\r\n            if(perspectiveCamera.useNodeData) {\r\n                threePerspectiveCamera.fov = perspectiveCamera.fov;\r\n                threePerspectiveCamera.aspect = perspectiveCamera.aspect!;\r\n                threePerspectiveCamera.far = perspectiveCamera.far;\r\n                threePerspectiveCamera.near = perspectiveCamera.near;\r\n                threePerspectiveCamera.updateProjectionMatrix();\r\n            }\r\n\r\n        } else {\r\n            if(!threeCamera) {\r\n                threeCamera = new THREE.OrthographicCamera(0, 0, 0, 0);\r\n                this.#cameraCache[camera.id] = threeCamera;\r\n                (<OrthographicCamera>camera).threeJsObject[this._renderingEngine.id] = <THREE.OrthographicCamera>threeCamera;\r\n                if(dataChild)\r\n                    dataChild.add(threeCamera);\r\n            } else {\r\n                (<OrthographicCamera>camera).threeJsObject[this._renderingEngine.id] = <THREE.OrthographicCamera>threeCamera;\r\n                if(dataChild && !dataChild.children.find(t => t === threeCamera))\r\n                    dataChild.add(threeCamera);\r\n            }\r\n            const orthographicCamera = <OrthographicCamera>camera;\r\n            const threeOrthographicCamera = <THREE.OrthographicCamera>threeCamera;\r\n\r\n            threeOrthographicCamera.up.set(orthographicCamera.up[0], orthographicCamera.up[1], orthographicCamera.up[2]);\r\n            if(orthographicCamera.useNodeData) {\r\n                threeOrthographicCamera.left = orthographicCamera.left;\r\n                threeOrthographicCamera.bottom = orthographicCamera.bottom;\r\n                threeOrthographicCamera.right = orthographicCamera.right;\r\n                threeOrthographicCamera.top = orthographicCamera.top;\r\n                threeOrthographicCamera.near = orthographicCamera.near;\r\n                threeOrthographicCamera.far = orthographicCamera.far;\r\n                threeOrthographicCamera.updateProjectionMatrix();\r\n            }\r\n        }\r\n    }\r\n\r\n    public adjustCamera(aspect: number): THREE.Camera {\r\n        let cameraThree: THREE.Camera;\r\n\r\n        const camera = this._renderingEngine.cameraEngine.camera!;\r\n        if(camera.useNodeData) {\r\n            const sdCameraNode = camera.node!.threeJsObject[this._renderingEngine.id];\r\n            const sdCameraData = sdCameraNode.children[0];\r\n            cameraThree = <THREE.Camera>sdCameraData.children[0];\r\n        } else {\r\n            if (this._renderingEngine.cameraEngine.camera!.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n                const orthographicCameraData = <OrthographicCamera>camera;\r\n                let orthographicCameraThreeJs = orthographicCameraData.threeJsObject[this._renderingEngine.id];\r\n                if(!orthographicCameraThreeJs) this.load(orthographicCameraData)\r\n                orthographicCameraThreeJs = orthographicCameraData.threeJsObject[this._renderingEngine.id];\r\n\r\n                const distance = vec3.distance(orthographicCameraData.position, orthographicCameraData.target) / 2;\r\n                orthographicCameraThreeJs.up.set(orthographicCameraData.up[0], orthographicCameraData.up[1], orthographicCameraData.up[2]);\r\n                orthographicCameraThreeJs.left = orthographicCameraData.left = -distance * aspect;\r\n                orthographicCameraThreeJs.bottom = orthographicCameraData.bottom = -distance;\r\n                orthographicCameraThreeJs.right = orthographicCameraData.right = distance * aspect;\r\n                orthographicCameraThreeJs.top = orthographicCameraData.top = distance;\r\n                orthographicCameraThreeJs.near = orthographicCameraData.near = 0.01;\r\n                orthographicCameraThreeJs.far = orthographicCameraData.far = 100 * distance;\r\n                orthographicCameraThreeJs.position.set(orthographicCameraData.position[0], orthographicCameraData.position[1], orthographicCameraData.position[2]);\r\n                orthographicCameraThreeJs.lookAt(orthographicCameraData.target[0], orthographicCameraData.target[1], orthographicCameraData.target[2]);\r\n                orthographicCameraThreeJs.updateProjectionMatrix();\r\n                cameraThree = orthographicCameraThreeJs;\r\n            } else {\r\n                const perspectiveCameraData = <PerspectiveCamera>camera;\r\n                let perspectiveCameraThreeJs = perspectiveCameraData.threeJsObject[this._renderingEngine.id];\r\n                if(!perspectiveCameraThreeJs) this.load(perspectiveCameraData)\r\n                perspectiveCameraThreeJs = perspectiveCameraData.threeJsObject[this._renderingEngine.id];\r\n\r\n                perspectiveCameraThreeJs.up.set(0, 0, 1);\r\n                const fov = (<PerspectiveCamera>this._renderingEngine.cameraEngine.camera).fov;\r\n                const bs = this._renderingEngine.sceneTreeManager.boundingBox.boundingSphere;\r\n                const radius = bs.radius > 0 ? bs.radius : 2;\r\n                perspectiveCameraThreeJs.fov = perspectiveCameraData.fov = fov;\r\n                perspectiveCameraThreeJs.aspect = perspectiveCameraData.aspect = aspect;\r\n                perspectiveCameraThreeJs.far = perspectiveCameraData.far = (fov < 10 ? fov * 100.0 * 100 * radius : 100 * radius);\r\n                perspectiveCameraThreeJs.near = perspectiveCameraData.near = (fov < 10 ? fov * 100.0 * 0.01 * radius : 0.01 * radius);\r\n                perspectiveCameraThreeJs.position.set(perspectiveCameraData.position[0], perspectiveCameraData.position[1], perspectiveCameraData.position[2]);\r\n                perspectiveCameraThreeJs.lookAt(perspectiveCameraData.target[0], perspectiveCameraData.target[1], perspectiveCameraData.target[2]);\r\n                perspectiveCameraThreeJs.updateProjectionMatrix();\r\n                cameraThree = perspectiveCameraThreeJs;\r\n            }\r\n        }\r\n        \r\n        this.#camera = cameraThree;\r\n        return cameraThree;\r\n    }\r\n\r\n    public init(): void {}\r\n\r\n    // #endregion Public Methods (2)\r\n}"]}},"error":null,"hash":"2f2b88fa2207a69d467f2e7e529bc97f","cacheData":{"env":{}}}