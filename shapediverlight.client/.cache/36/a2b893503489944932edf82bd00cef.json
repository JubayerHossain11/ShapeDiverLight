{"id":"node_modules/@shapediver/sdk.geometry-api-sdk-v2/dist/resources/ShapeDiverArSceneApi.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\dist\\resources\\ShapeDiverArSceneApi.js.map","includedInParent":true,"mtime":1706542085462},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\package.json","includedInParent":true,"mtime":1706542085132},{"name":"@shapediver/sdk.geometry-api-sdk-core","loc":{"line":13,"column":44,"index":841},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\dist\\resources\\ShapeDiverArSceneApi.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.geometry-api-sdk-core\\dist\\index.js"},{"name":"../utils/utils","loc":{"line":14,"column":24,"index":907},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\dist\\resources\\ShapeDiverArSceneApi.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\dist\\utils\\utils.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShapeDiverArSceneApi = void 0;\nconst sdk_geometry_api_sdk_core_1 = require(\"@shapediver/sdk.geometry-api-sdk-core\");\nconst utils_1 = require(\"../utils/utils\");\nclass ShapeDiverArSceneApi extends sdk_geometry_api_sdk_core_1.BaseResourceApi {\n    constructor(api) {\n        super(api);\n    }\n    /**\n     * Checks the existence of the specific AR scene.\n     * @param sceneId\n     * @returns `true` when the AR scene exists, otherwise `false`.\n     */\n    exists(sceneId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const [_, status] = yield this.api.head(`${this.buildArSceneUri()}/${sceneId}`, { disableAuthorization: true });\n                    return status === 200;\n                }\n                catch (e) {\n                    // A 404 HTTP status is returned when the AR scene was not found.\n                    if (e instanceof sdk_geometry_api_sdk_core_1.ShapeDiverResponseError && e.status === 404)\n                        return false;\n                    else\n                        throw e;\n                }\n            }));\n        });\n    }\n    /**\n     * Download the glTF file of the specified AR scene.\n     *\n     * @param sceneId - The ID of the AR scene.\n     * @returns Array of size 2: [0] = content data, [1] = content type\n     */\n    getGltf(sceneId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                const [header, data] = yield this.api.get(`${this.buildArSceneUri()}/${sceneId}/gltf`, {\n                    responseType: sdk_geometry_api_sdk_core_1.ShapeDiverSdkApiResponseType.DATA,\n                    disableAuthorization: true,\n                });\n                const contentType = (_a = header[\"Content-Type\"]) !== null && _a !== void 0 ? _a : header[\"content-type\"];\n                return [data, contentType];\n            }));\n        });\n    }\n    /**\n     * Download the USDZ file of the specified AR scene.\n     *\n     * @param sceneId - The ID of the AR scene.\n     * @returns Array of size 2: [0] = content data, [1] = content type\n     */\n    getUsdz(sceneId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                const [header, data] = yield this.api.get(`${this.buildArSceneUri()}/${sceneId}/usdz`, {\n                    responseType: sdk_geometry_api_sdk_core_1.ShapeDiverSdkApiResponseType.DATA,\n                    disableAuthorization: true,\n                });\n                const contentType = (_a = header[\"Content-Type\"]) !== null && _a !== void 0 ? _a : header[\"content-type\"];\n                return [data, contentType];\n            }));\n        });\n    }\n}\nexports.ShapeDiverArSceneApi = ShapeDiverArSceneApi;\n"},"sourceMaps":{"js":{"version":3,"file":"ShapeDiverArSceneApi.js","sourceRoot":"","sources":["../../src/resources/ShapeDiverArSceneApi.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qFAK8C;AAC9C,0CAA4C;AAE5C,MAAa,oBAAqB,SAAQ,2CAAe;IAErD,YAAa,GAAqB;QAC9B,KAAK,CAAC,GAAG,CAAC,CAAA;IACd,CAAC;IAED;;;;OAIG;IACG,MAAM,CAAE,OAAe;;YACzB,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAS,EAAE;gBAChC,IAAI;oBACA,MAAM,CAAE,CAAC,EAAE,MAAM,CAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CACrC,GAAI,IAAI,CAAC,eAAe,EAAG,IAAK,OAAQ,EAAE,EAC1C,EAAE,oBAAoB,EAAE,IAAI,EAAE,CACjC,CAAA;oBACD,OAAO,MAAM,KAAK,GAAG,CAAA;iBACxB;gBAAC,OAAO,CAAC,EAAE;oBACR,iEAAiE;oBACjE,IAAI,CAAC,YAAY,mDAAuB,IAAI,CAAC,CAAC,MAAM,KAAK,GAAG;wBAAE,OAAO,KAAK,CAAA;;wBACrE,MAAM,CAAC,CAAA;iBACf;YACL,CAAC,CAAA,CAAC,CAAA;QACN,CAAC;KAAA;IAED;;;;;OAKG;IACG,OAAO,CAAE,OAAe;;YAC1B,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAS,EAAE;;gBAChC,MAAM,CAAE,MAAM,EAAE,IAAI,CAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CACvC,GAAI,IAAI,CAAC,eAAe,EAAG,IAAK,OAAQ,OAAO,EAC/C;oBACI,YAAY,EAAE,wDAA4B,CAAC,IAAI;oBAC/C,oBAAoB,EAAE,IAAI;iBAC7B,CACJ,CAAA;gBACD,MAAM,WAAW,GAAG,MAAA,MAAM,CAAC,cAAc,CAAC,mCAAI,MAAM,CAAC,cAAc,CAAC,CAAA;gBACpE,OAAO,CAAE,IAAI,EAAE,WAAW,CAAE,CAAA;YAChC,CAAC,CAAA,CAAC,CAAA;QACN,CAAC;KAAA;IAED;;;;;OAKG;IACG,OAAO,CAAE,OAAe;;YAC1B,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAS,EAAE;;gBAChC,MAAM,CAAE,MAAM,EAAE,IAAI,CAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CACvC,GAAI,IAAI,CAAC,eAAe,EAAG,IAAK,OAAQ,OAAO,EAC/C;oBACI,YAAY,EAAE,wDAA4B,CAAC,IAAI;oBAC/C,oBAAoB,EAAE,IAAI;iBAC7B,CACJ,CAAA;gBACD,MAAM,WAAW,GAAG,MAAA,MAAM,CAAC,cAAc,CAAC,mCAAI,MAAM,CAAC,cAAc,CAAC,CAAA;gBACpE,OAAO,CAAE,IAAI,EAAE,WAAW,CAAE,CAAA;YAChC,CAAC,CAAA,CAAC,CAAA;QACN,CAAC;KAAA;CAEJ;AAnED,oDAmEC","sourcesContent":[null]}},"error":null,"hash":"9c9fcd88fc8cb8d6261c0d04f5a0b63e","cacheData":{"env":{}}}