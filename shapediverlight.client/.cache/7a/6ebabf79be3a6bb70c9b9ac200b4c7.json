{"id":"node_modules/@shapediver/sdk.sdtf-v1/dist/binary_sdtf/SdtfBinarySdtf.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\binary_sdtf\\SdtfBinarySdtf.js.map","includedInParent":true,"mtime":1706527149897},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\package.json","includedInParent":true,"mtime":1706527149378},{"name":"@shapediver/sdk.sdtf-core","loc":{"line":4,"column":32,"index":142},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\binary_sdtf\\SdtfBinarySdtf.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-core\\dist\\index.js"},{"name":"../structure/ISdtfComponentList","loc":{"line":5,"column":37,"index":209},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\binary_sdtf\\SdtfBinarySdtf.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\structure\\ISdtfComponentList.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SdtfBinarySdtf = void 0;\nconst sdk_sdtf_core_1 = require(\"@shapediver/sdk.sdtf-core\");\nconst ISdtfComponentList_1 = require(\"../structure/ISdtfComponentList\");\nclass SdtfBinarySdtf {\n    constructor() {\n        /** Number of bytes of the sdTF header. */\n        this.binaryHeaderLength = 20;\n    }\n    constructBinarySdtf(componentList) {\n        var _a;\n        const binaryBody = (_a = componentList.binaryBody) !== null && _a !== void 0 ? _a : new ArrayBuffer(0);\n        const jsonContent = this.createJsonContent(componentList);\n        const header = this.createHeader(jsonContent.byteLength, binaryBody.byteLength);\n        // Merge sdTF parts\n        return new Uint8Array([\n            ...new Uint8Array(header),\n            ...new Uint8Array(jsonContent),\n            ...new Uint8Array(binaryBody),\n        ]).buffer;\n    }\n    parseBinarySdtf(sdtf) {\n        const header = new DataView(sdtf, 0, this.binaryHeaderLength);\n        const [contentLength, totalLength] = this.readHeader(header);\n        const jsonContent = new DataView(sdtf, this.binaryHeaderLength, contentLength);\n        const binaryBody = new DataView(sdtf, this.binaryHeaderLength + contentLength, totalLength - this.binaryHeaderLength - contentLength);\n        return [jsonContent, binaryBody];\n    }\n    readHeader(header) {\n        if (header instanceof ArrayBuffer)\n            header = new DataView(header);\n        const magic = String.fromCharCode(header.getUint8(0)) +\n            String.fromCharCode(header.getUint8(1)) +\n            String.fromCharCode(header.getUint8(2)) +\n            String.fromCharCode(header.getUint8(3));\n        if (magic !== \"sdtf\")\n            throw new sdk_sdtf_core_1.SdtfError(`Invalid identifier: Unknown file type for sdTF identifier '${magic}'.`);\n        const version = header.getUint32(4, true);\n        if (version !== 1)\n            throw new sdk_sdtf_core_1.SdtfError(`Invalid version: Unsupported sdTF version '${version}'.`);\n        const totalLength = header.getUint32(8, true);\n        const contentLength = header.getUint32(12, true);\n        const contentFormat = header.getUint32(16, true);\n        if (contentFormat !== 0)\n            throw new sdk_sdtf_core_1.SdtfError(`Invalid content: Unsupported sdTF content format '${contentFormat}'.`);\n        return [contentLength, totalLength];\n    }\n    /** Creates an sdTF header buffer object. */\n    createHeader(contentLength, bodyLength) {\n        const buffer = new Uint8Array(20);\n        const headerDataView = new DataView(buffer.buffer, 0, buffer.byteLength);\n        // Write magic (here we must use Unicode encoding)\n        const magic = \"sdtf\";\n        headerDataView.setUint8(0, magic.codePointAt(0));\n        headerDataView.setUint8(1, magic.codePointAt(1));\n        headerDataView.setUint8(2, magic.codePointAt(2));\n        headerDataView.setUint8(3, magic.codePointAt(3));\n        // Write version\n        const version = 1;\n        headerDataView.setUint32(4, version, true);\n        // Write total length of file\n        const totalLength = this.binaryHeaderLength + contentLength + bodyLength;\n        headerDataView.setUint32(8, totalLength, true);\n        // Write length of content string\n        headerDataView.setUint32(12, contentLength, true);\n        // Write format string\n        const format = 0; // JSON\n        headerDataView.setUint32(16, format, true);\n        return headerDataView.buffer;\n    }\n    readJsonContent(jsonContent) {\n        if (jsonContent instanceof ArrayBuffer)\n            jsonContent = new DataView(jsonContent);\n        try {\n            return JSON.parse(new TextDecoder().decode(jsonContent));\n        }\n        catch (e) {\n            throw new sdk_sdtf_core_1.SdtfError(`Invalid content: Cannot parse sdTF JSON content. ${e.message}`);\n        }\n    }\n    /** Creates an sdTF JSON content buffer object. */\n    createJsonContent(componentList) {\n        const jsonContent = (0, ISdtfComponentList_1.toJsonContent)(componentList);\n        try {\n            return new TextEncoder().encode(JSON.stringify(jsonContent, undefined, 0));\n        }\n        catch (e) {\n            throw new sdk_sdtf_core_1.SdtfError(`Invalid content: Cannot create sdTF JSON content. ${e.message}`);\n        }\n    }\n}\nexports.SdtfBinarySdtf = SdtfBinarySdtf;\n"},"sourceMaps":{"js":{"version":3,"file":"SdtfBinarySdtf.js","sourceRoot":"","sources":["../../src/binary_sdtf/SdtfBinarySdtf.ts"],"names":[],"mappings":";;;AAAA,6DAAqD;AACrD,wEAAmF;AAGnF,MAAa,cAAc;IAA3B;QAEI,0CAA0C;QACjC,uBAAkB,GAAG,EAAE,CAAA;IAkGpC,CAAC;IAhGG,mBAAmB,CAAE,aAAiC;;QAClD,MAAM,UAAU,GAAG,MAAA,aAAa,CAAC,UAAU,mCAAI,IAAI,WAAW,CAAC,CAAC,CAAC,CAAA;QACjE,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAA;QACzD,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC,CAAA;QAE/E,mBAAmB;QACnB,OAAO,IAAI,UAAU,CAAC;YAClB,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC;YACzB,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC;YAC9B,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC;SAChC,CAAC,CAAC,MAAM,CAAA;IACb,CAAC;IAED,eAAe,CAAE,IAAiB;QAC9B,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAA;QAC7D,MAAM,CAAE,aAAa,EAAE,WAAW,CAAE,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;QAE9D,MAAM,WAAW,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAA;QAC9E,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,kBAAkB,GAAG,aAAa,EAAE,WAAW,GAAG,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC,CAAA;QAErI,OAAO,CAAE,WAAW,EAAE,UAAU,CAAE,CAAA;IACtC,CAAC;IAED,UAAU,CAAE,MAA8B;QACtC,IAAI,MAAM,YAAY,WAAW;YAAE,MAAM,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAA;QAEhE,MAAM,KAAK,GACP,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;QAC3C,IAAI,KAAK,KAAK,MAAM;YAAE,MAAM,IAAI,yBAAS,CAAC,8DAA+D,KAAM,IAAI,CAAC,CAAA;QAEpH,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;QACzC,IAAI,OAAO,KAAK,CAAC;YAAE,MAAM,IAAI,yBAAS,CAAC,8CAA+C,OAAQ,IAAI,CAAC,CAAA;QAEnG,MAAM,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;QAC7C,MAAM,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;QAEhD,MAAM,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;QAChD,IAAI,aAAa,KAAK,CAAC;YAAE,MAAM,IAAI,yBAAS,CAAC,qDAAsD,aAAc,IAAI,CAAC,CAAA;QAEtH,OAAO,CAAE,aAAa,EAAE,WAAW,CAAE,CAAA;IACzC,CAAC;IAED,4CAA4C;IAC5C,YAAY,CAAE,aAAqB,EAAE,UAAkB;QACnD,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;QACjC,MAAM,cAAc,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,UAAU,CAAC,CAAA;QAExE,kDAAkD;QAClD,MAAM,KAAK,GAAG,MAAM,CAAA;QACpB,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAE,CAAC,CAAA;QACjD,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAE,CAAC,CAAA;QACjD,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAE,CAAC,CAAA;QACjD,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAE,CAAC,CAAA;QAEjD,gBAAgB;QAChB,MAAM,OAAO,GAAG,CAAC,CAAA;QACjB,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAA;QAE1C,6BAA6B;QAC7B,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,GAAG,aAAa,GAAG,UAAU,CAAA;QACxE,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,CAAA;QAE9C,iCAAiC;QACjC,cAAc,CAAC,SAAS,CAAC,EAAE,EAAE,aAAa,EAAE,IAAI,CAAC,CAAA;QAEjD,sBAAsB;QACtB,MAAM,MAAM,GAAG,CAAC,CAAA,CAAI,OAAO;QAC3B,cAAc,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;QAE1C,OAAO,cAAc,CAAC,MAAM,CAAA;IAChC,CAAC;IAED,eAAe,CAAE,WAAmC;QAChD,IAAI,WAAW,YAAY,WAAW;YAAE,WAAW,GAAG,IAAI,QAAQ,CAAC,WAAW,CAAC,CAAA;QAE/E,IAAI;YACA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAA;SAC3D;QAAC,OAAO,CAAC,EAAE;YACR,MAAM,IAAI,yBAAS,CAAC,oDAAqD,CAAC,CAAC,OAAQ,EAAE,CAAC,CAAA;SACzF;IACL,CAAC;IAED,kDAAkD;IAClD,iBAAiB,CAAE,aAAiC;QAChD,MAAM,WAAW,GAAG,IAAA,kCAAa,EAAC,aAAa,CAAC,CAAA;QAEhD,IAAI;YACA,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAA;SAC7E;QAAC,OAAO,CAAC,EAAE;YACR,MAAM,IAAI,yBAAS,CAAC,qDAAsD,CAAC,CAAC,OAAQ,EAAE,CAAC,CAAA;SAC1F;IACL,CAAC;CAEJ;AArGD,wCAqGC","sourcesContent":[null]}},"error":null,"hash":"6f16732921ec4dbb2ad1f6de0b63905e","cacheData":{"env":{}}}