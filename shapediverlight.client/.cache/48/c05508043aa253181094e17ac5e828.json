{"id":"node_modules/@shapediver/sdk.sdtf-v1/dist/buffer_cache/SdtfFileBufferCache.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\buffer_cache\\SdtfFileBufferCache.js.map","includedInParent":true,"mtime":1706542087056},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\package.json","includedInParent":true,"mtime":1706542086604},{"name":"@shapediver/sdk.sdtf-core","loc":{"line":13,"column":32,"index":828},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\buffer_cache\\SdtfFileBufferCache.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-core\\dist\\index.js"},{"name":"../utils/SdtfFileUtils","loc":{"line":14,"column":32,"index":890},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\buffer_cache\\SdtfFileBufferCache.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\utils\\SdtfFileUtils.js"},{"name":"./SdtfBinaryBufferCache","loc":{"line":15,"column":40,"index":957},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\buffer_cache\\SdtfFileBufferCache.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\buffer_cache\\SdtfBinaryBufferCache.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SdtfFileBufferCache = void 0;\nconst sdk_sdtf_core_1 = require(\"@shapediver/sdk.sdtf-core\");\nconst SdtfFileUtils_1 = require(\"../utils/SdtfFileUtils\");\nconst SdtfBinaryBufferCache_1 = require(\"./SdtfBinaryBufferCache\");\nclass SdtfFileBufferCache extends SdtfBinaryBufferCache_1.SdtfBinaryBufferCache {\n    constructor(absolutePath) {\n        super();\n        this.fileUtils = new SdtfFileUtils_1.SdtfFileUtils();\n        // Calculate the base path for all external buffers\n        const index = absolutePath.lastIndexOf(\"/\");\n        this.basePath = absolutePath.substring(0, index);\n    }\n    /**\n     * Loads the requested buffer from disk and updates the internal buffer cache.\n     * @override\n     * @protected\n     */\n    acquireBuffer(relativePath, offset, length) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let buffer;\n            try {\n                buffer = yield this.fileUtils.readFile(`${this.basePath}/${relativePath}`);\n            }\n            catch (e) {\n                throw new sdk_sdtf_core_1.SdtfError(`Cannot read buffer: ${e.message}`);\n            }\n            // Cache the entire buffer\n            this.storeInCache(this.calcCacheKey(relativePath), this.cacheIdFullBuffer, new DataView(buffer));\n            return new DataView(buffer, offset, length);\n        });\n    }\n}\nexports.SdtfFileBufferCache = SdtfFileBufferCache;\n"},"sourceMaps":{"js":{"version":3,"file":"SdtfFileBufferCache.js","sourceRoot":"","sources":["../../src/buffer_cache/SdtfFileBufferCache.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6DAAqD;AACrD,0DAAsD;AACtD,mEAA+D;AAE/D,MAAa,mBAAoB,SAAQ,6CAAqB;IAO1D,YAAa,YAAoB;QAC7B,KAAK,EAAE,CAAA;QAEP,IAAI,CAAC,SAAS,GAAG,IAAI,6BAAa,EAAE,CAAA;QAEpC,mDAAmD;QACnD,MAAM,KAAK,GAAG,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;QAC3C,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;IACpD,CAAC;IAED;;;;OAIG;IACG,aAAa,CAAE,YAAgC,EAAE,MAAc,EAAE,MAAc;;YACjF,IAAI,MAAM,CAAA;YACV,IAAI;gBACA,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAI,IAAI,CAAC,QAAS,IAAK,YAAa,EAAE,CAAC,CAAA;aACjF;YAAC,OAAO,CAAC,EAAE;gBACR,MAAM,IAAI,yBAAS,CAAC,uBAAwB,CAAC,CAAC,OAAQ,EAAE,CAAC,CAAA;aAC5D;YAED,0BAA0B;YAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAA;YAEhG,OAAO,IAAI,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;QAC/C,CAAC;KAAA;CAEJ;AApCD,kDAoCC","sourcesContent":[null]}},"error":null,"hash":"7afe318f6152f63f477ea4d6cb505f65","cacheData":{"env":{}}}