{"id":"node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/interpolation/CameraInterpolationManager.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\interpolation\\CameraInterpolationManager.js.map","includedInParent":true,"mtime":1706527152223},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\src\\implementation\\interpolation\\CameraInterpolationManager.ts","includedInParent":true,"mtime":1706527153164},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\package.json","includedInParent":true,"mtime":1706527151358},{"name":"@tweenjs/tween.js","loc":{"line":23,"column":35,"index":1038},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\interpolation\\CameraInterpolationManager.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@tweenjs\\tween.js\\dist\\tween.esm.js"},{"name":"./interpolationMethods/CameraMultipleInterpolation","loc":{"line":24,"column":46,"index":1108},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\interpolation\\CameraInterpolationManager.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\interpolation\\interpolationMethods\\CameraMultipleInterpolation.js"},{"name":"./interpolationMethods/CameraSphericalInterpolation","loc":{"line":25,"column":47,"index":1211},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\interpolation\\CameraInterpolationManager.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\interpolation\\interpolationMethods\\CameraSphericalInterpolation.js"},{"name":"./interpolationMethods/CameraLinearInterpolation","loc":{"line":26,"column":44,"index":1312},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\interpolation\\CameraInterpolationManager.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\interpolation\\interpolationMethods\\CameraLinearInterpolation.js"},{"name":"./interpolationMethods/CameraCylindricalInterpolation","loc":{"line":27,"column":49,"index":1415},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\interpolation\\CameraInterpolationManager.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\interpolation\\interpolationMethods\\CameraCylindricalInterpolation.js"}],"generated":{"js":"\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CameraInterpolationManager = void 0;\r\nconst TWEEN = __importStar(require(\"@tweenjs/tween.js\"));\r\nconst CameraMultipleInterpolation_1 = require(\"./interpolationMethods/CameraMultipleInterpolation\");\r\nconst CameraSphericalInterpolation_1 = require(\"./interpolationMethods/CameraSphericalInterpolation\");\r\nconst CameraLinearInterpolation_1 = require(\"./interpolationMethods/CameraLinearInterpolation\");\r\nconst CameraCylindricalInterpolation_1 = require(\"./interpolationMethods/CameraCylindricalInterpolation\");\r\nclass CameraInterpolationManager {\r\n    // #endregion Properties (3)\r\n    // #region Constructors (1)\r\n    constructor(_camera, _cameraControls) {\r\n        this._camera = _camera;\r\n        this._cameraControls = _cameraControls;\r\n        // #region Properties (3)\r\n        this.TweenWrapper = class {\r\n            constructor(options, cb, onComplete) {\r\n                this._properties = { delta: 0 };\r\n                this._tween = new TWEEN.Tween(this._properties);\r\n                this._tween.easing(options.easing);\r\n                this._tween.to({ delta: 1.0 }, options.duration);\r\n                this._tween.onUpdate((v) => {\r\n                    cb.onUpdate(v);\r\n                });\r\n                this._tween.onStop((v) => {\r\n                    if (cb.onStop)\r\n                        cb.onStop(v);\r\n                    this._resolve(true);\r\n                });\r\n                this._tween.onComplete((v) => {\r\n                    if (cb.onComplete)\r\n                        cb.onComplete(v);\r\n                    onComplete();\r\n                    this._resolve(true);\r\n                });\r\n            }\r\n            start() {\r\n                return new Promise((resolve) => {\r\n                    this._resolve = resolve;\r\n                    this._tween.start();\r\n                });\r\n            }\r\n            stop() {\r\n                this._tween.stop();\r\n            }\r\n        };\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Methods (3)\r\n    active() {\r\n        return this._tween ? true : false;\r\n    }\r\n    /**\r\n     * cameraTween\r\n     */\r\n    interpolate(path, options = {}) {\r\n        const newPath = [];\r\n        for (let i = 0; i < path.length; i++)\r\n            newPath.push({\r\n                position: path[i].position,\r\n                target: path[i].target,\r\n            });\r\n        if (this._tween) {\r\n            this._tween.stop();\r\n            this._tween = null;\r\n        }\r\n        let parsedOptions = this.optionsParser(options);\r\n        this._tween = new this.TweenWrapper(parsedOptions, newPath.length === 2 ?\r\n            this.getCameraInterpolation(newPath[0], newPath[1], parsedOptions.coordinates) :\r\n            new CameraMultipleInterpolation_1.CameraMultipleInterpolation(this._camera, this._cameraControls, newPath, parsedOptions.interpolation), () => { this._tween = null; });\r\n        return this._tween.start();\r\n    }\r\n    stop() {\r\n        if (this._tween)\r\n            this._tween.stop();\r\n        this._tween = null;\r\n    }\r\n    // #endregion Public Methods (3)\r\n    // #region Private Methods (2)\r\n    getCameraInterpolation(from, to, type) {\r\n        switch (type) {\r\n            case 'linear':\r\n                return new CameraLinearInterpolation_1.CameraLinearInterpolation(this._camera, this._cameraControls, from, to);\r\n            case 'spherical':\r\n                return new CameraSphericalInterpolation_1.CameraSphericalInterpolation(this._camera, this._cameraControls, from, to);\r\n            case 'cylindrical':\r\n                return new CameraCylindricalInterpolation_1.CameraCylindricalInterpolation(this._camera, this._cameraControls, from, to);\r\n            default:\r\n                return new CameraMultipleInterpolation_1.CameraMultipleInterpolation(this._camera, this._cameraControls, [from, to], TWEEN.Interpolation.CatmullRom);\r\n        }\r\n    }\r\n    optionsParser(options) {\r\n        let easing = TWEEN.Easing.Quartic.InOut;\r\n        if (typeof options.easing === 'string') {\r\n            const keys = options.easing.split('.');\r\n            const easingFamily = TWEEN.Easing[keys[0]];\r\n            if (easingFamily) {\r\n                const easingFunction = easingFamily[keys[1]];\r\n                if (easingFunction)\r\n                    easing = easingFunction;\r\n            }\r\n        }\r\n        else if (typeof options.easing === 'function') {\r\n            easing = options.easing;\r\n        }\r\n        let interpolation = TWEEN.Interpolation.CatmullRom;\r\n        if (typeof options.interpolation === 'string') {\r\n            const interpolationFunction = TWEEN.Interpolation[options.interpolation];\r\n            if (interpolationFunction && interpolationFunction !== TWEEN.Interpolation.Utils)\r\n                interpolation = interpolationFunction;\r\n        }\r\n        else if (typeof options.interpolation === 'function') {\r\n            interpolation = options.interpolation;\r\n        }\r\n        return {\r\n            duration: options.duration && options.duration >= 0 ? options.duration : 0,\r\n            easing,\r\n            coordinates: options.coordinates !== 'spherical' && options.coordinates !== 'linear' && options.coordinates !== 'cylindrical' ? 'cylindrical' : options.coordinates,\r\n            interpolation\r\n        };\r\n    }\r\n}\r\nexports.CameraInterpolationManager = CameraInterpolationManager;\r\n"},"sourceMaps":{"js":{"version":3,"file":"CameraInterpolationManager.js","sourceRoot":"","sources":["../../../src/implementation/interpolation/CameraInterpolationManager.ts"],"names":[],"mappings":"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","sourcesContent":["import * as TWEEN from '@tweenjs/tween.js'\r\nimport { vec3 } from 'gl-matrix'\r\n\r\nimport { CameraMultipleInterpolation } from './interpolationMethods/CameraMultipleInterpolation'\r\nimport { CameraSphericalInterpolation } from './interpolationMethods/CameraSphericalInterpolation'\r\nimport { ICameraControlsUsage } from '../../interfaces/controls/ICameraControlsUsage'\r\nimport { ICamera, ICameraOptions } from '../../interfaces/camera/ICamera'\r\nimport { CameraLinearInterpolation } from './interpolationMethods/CameraLinearInterpolation'\r\nimport { CameraCylindricalInterpolation } from './interpolationMethods/CameraCylindricalInterpolation'\r\nimport { ICameraInterpolation } from '../../interfaces/interpolation/ICameraInterpolation'\r\n\r\nexport class CameraInterpolationManager {\r\n    // #region Properties (3)\r\n\r\n\r\n    private TweenWrapper = class {\r\n        private _properties: { delta: 0 } = { delta: 0 };\r\n        private _tween!: TWEEN.Tween<{  delta: number }>;\r\n        private _resolve!: Function;\r\n\r\n        constructor(options: {duration: number, easing: (amount: number) => number, coordinates: string, interpolation: Function }, cb: ICameraInterpolation, onComplete: Function) {\r\n            this._tween = new TWEEN.Tween(this._properties);\r\n            this._tween.easing(options.easing);            \r\n            this._tween.to({ delta: 1.0 }, options.duration);\r\n\r\n            this._tween.onUpdate((v) => {\r\n                cb.onUpdate(v);\r\n            });\r\n            \r\n            this._tween.onStop((v) => {\r\n                if(cb.onStop) cb.onStop(v);\r\n                this._resolve(true);\r\n            });\r\n            this._tween.onComplete((v) => {\r\n                if(cb.onComplete) cb.onComplete(v);\r\n                onComplete();\r\n                this._resolve(true);\r\n            });\r\n        }\r\n\r\n        public start(): Promise<boolean> {\r\n            return new Promise((resolve) => {\r\n                this._resolve = resolve;\r\n                this._tween.start();\r\n            });\r\n        }\r\n\r\n        public stop(): void {\r\n            this._tween.stop();\r\n        }\r\n    };\r\n    private _tween: any;\r\n\r\n    // #endregion Properties (3)\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(\r\n        private readonly _camera: ICamera,\r\n        private readonly _cameraControls: ICameraControlsUsage\r\n        ) {\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Methods (3)\r\n\r\n    public active(): boolean {\r\n        return this._tween ? true : false;\r\n    }\r\n    /**\r\n     * cameraTween\r\n     */\r\n    public interpolate(path: { position: vec3, target: vec3 }[], options: ICameraOptions = {}) : Promise<boolean> \r\n    {\r\n\r\n        const newPath: { position: vec3, target: vec3 }[] = [];\r\n        for(let i = 0; i < path.length; i++)\r\n            newPath.push({\r\n                position: path[i].position,\r\n                target: path[i].target,\r\n            });\r\n                \r\n\r\n        if(this._tween) {\r\n            this._tween.stop();\r\n            this._tween = null;\r\n        }\r\n        let parsedOptions = this.optionsParser(options);\r\n        \r\n        this._tween = new this.TweenWrapper(\r\n            parsedOptions, \r\n            newPath.length === 2 ? \r\n                this.getCameraInterpolation(newPath[0], newPath[1], parsedOptions.coordinates) :\r\n                new CameraMultipleInterpolation(this._camera, this._cameraControls, newPath, parsedOptions.interpolation), \r\n            () => { this._tween = null; }\r\n        );\r\n        return this._tween.start();\r\n    }\r\n\r\n    public stop(): void {\r\n        if(this._tween) this._tween.stop();\r\n        this._tween = null;\r\n    }\r\n\r\n    // #endregion Public Methods (3)\r\n\r\n    // #region Private Methods (2)\r\n\r\n    private getCameraInterpolation(from: { position: vec3, target: vec3 }, to: { position: vec3, target: vec3 }, type: string) {\r\n        switch(type) {\r\n            case 'linear':\r\n                return new CameraLinearInterpolation(this._camera, this._cameraControls, from, to);\r\n            case 'spherical':\r\n                return new CameraSphericalInterpolation(this._camera, this._cameraControls, from, to);\r\n            case 'cylindrical':\r\n                return new CameraCylindricalInterpolation(this._camera, this._cameraControls, from, to);\r\n            default:\r\n                return new CameraMultipleInterpolation(this._camera, this._cameraControls, [from, to], TWEEN.Interpolation.CatmullRom);\r\n        }\r\n    }\r\n\r\n    private optionsParser(options: ICameraOptions): {duration: number, easing: (amount: number) => number, coordinates: string, interpolation: (v: number[], k: number) => number }\r\n    {\r\n        let easing = TWEEN.Easing.Quartic.InOut;\r\n        if(typeof options.easing === 'string') {\r\n            const keys = options.easing.split('.');\r\n            const easingFamily = TWEEN.Easing[<keyof typeof TWEEN.Easing>keys[0]];\r\n            if(easingFamily) {\r\n                const easingFunction = easingFamily[<keyof typeof easingFamily>keys[1]];\r\n                if(easingFunction) easing = easingFunction;\r\n            }\r\n        } else if(typeof options.easing === 'function') {\r\n            easing = <(amount: number) => number>options.easing;\r\n        }\r\n\r\n        let interpolation = TWEEN.Interpolation.CatmullRom;\r\n        if(typeof options.interpolation === 'string') {\r\n            const interpolationFunction = TWEEN.Interpolation[<keyof typeof TWEEN.Interpolation>options.interpolation];\r\n            if(interpolationFunction && interpolationFunction !== TWEEN.Interpolation.Utils) interpolation = <(v: number[], k: number) => number>interpolationFunction;\r\n        } else if(typeof options.interpolation === 'function') {\r\n            interpolation = <(v: number[], k: number) => number>options.interpolation;\r\n        }\r\n\r\n        return {\r\n            duration: options.duration && options.duration >= 0 ? options.duration : 0,\r\n            easing,\r\n            coordinates: options.coordinates !== 'spherical' && options.coordinates !== 'linear' && options.coordinates !== 'cylindrical' ? 'cylindrical' : options.coordinates, \r\n            interpolation\r\n        };\r\n    }\r\n\r\n    // #endregion Private Methods (2)\r\n}"]}},"error":null,"hash":"b929156fe0559fc168a6161e31386345","cacheData":{"env":{}}}