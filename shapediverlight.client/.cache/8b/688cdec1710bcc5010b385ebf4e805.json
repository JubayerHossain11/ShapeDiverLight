{"id":"node_modules/@shapediver/viewer.shared.services/dist/settings-engine/SettingsEngine.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\settings-engine\\SettingsEngine.js.map","includedInParent":true,"mtime":1706542086499},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\src\\settings-engine\\SettingsEngine.ts","includedInParent":true,"mtime":1706542086942},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\package.json","includedInParent":true,"mtime":1706542085933},{"name":"@shapediver/viewer.settings","loc":{"line":4,"column":34,"index":147},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\settings-engine\\SettingsEngine.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.settings\\dist\\index.js"},{"name":"../event-engine/EventEngine","loc":{"line":5,"column":30,"index":210},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\settings-engine\\SettingsEngine.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\event-engine\\EventEngine.js"},{"name":"../logger/Logger","loc":{"line":6,"column":25,"index":268},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\settings-engine\\SettingsEngine.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\logger\\Logger.js"},{"name":"../logger/ShapeDiverViewerErrors","loc":{"line":7,"column":41,"index":331},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\settings-engine\\SettingsEngine.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\logger\\ShapeDiverViewerErrors.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SettingsEngine = void 0;\r\nconst viewer_settings_1 = require(\"@shapediver/viewer.settings\");\r\nconst EventEngine_1 = require(\"../event-engine/EventEngine\");\r\nconst Logger_1 = require(\"../logger/Logger\");\r\nconst ShapeDiverViewerErrors_1 = require(\"../logger/ShapeDiverViewerErrors\");\r\nclass SettingsEngine {\r\n    constructor() {\r\n        // #region Properties (8)\r\n        this._eventEngine = EventEngine_1.EventEngine.instance;\r\n        this._logger = Logger_1.Logger.instance;\r\n        this._settings = (0, viewer_settings_1.DefaultsV3_4)();\r\n        // #endregion Private Methods (1)\r\n    }\r\n    // #endregion Properties (8)\r\n    // #region Public Accessors (10)\r\n    get ar() {\r\n        return this._settings.ar;\r\n    }\r\n    get camera() {\r\n        return this._settings.camera;\r\n    }\r\n    get environment() {\r\n        return this._settings.environment;\r\n    }\r\n    get environmentGeometry() {\r\n        return this._settings.environmentGeometry;\r\n    }\r\n    get general() {\r\n        return this._settings.general;\r\n    }\r\n    get light() {\r\n        return this._settings.light;\r\n    }\r\n    get rendering() {\r\n        return this._settings.rendering;\r\n    }\r\n    get session() {\r\n        return this._settings.session;\r\n    }\r\n    set session(value) {\r\n        this._settings.session = value;\r\n    }\r\n    get settings() {\r\n        return this._settings;\r\n    }\r\n    get settingsJson() {\r\n        return this._settingsJson;\r\n    }\r\n    // #endregion Public Accessors (10)\r\n    // #region Public Methods (4)\r\n    flatten() {\r\n        const flattenObject = (ob) => {\r\n            const toReturn = {};\r\n            for (let i in ob) {\r\n                if (!ob.hasOwnProperty(i))\r\n                    continue;\r\n                if ((typeof ob[i]) == 'object') {\r\n                    const flatObject = flattenObject(ob[i]);\r\n                    for (var x in flatObject) {\r\n                        if (!flatObject.hasOwnProperty(x))\r\n                            continue;\r\n                        toReturn[i + '.' + x] = flatObject[x];\r\n                    }\r\n                }\r\n                else {\r\n                    toReturn[i] = ob[i];\r\n                }\r\n            }\r\n            return toReturn;\r\n        };\r\n        return flattenObject(this.settings);\r\n    }\r\n    loadSettings(json) {\r\n        this._settingsJson = json;\r\n        if (JSON.stringify(json) !== JSON.stringify({})) {\r\n            const prevVersions = ['1.0', '2.0', '3.0', '3.1', '3.2', '3.3'];\r\n            for (let i = 0; i < prevVersions.length; i++) {\r\n                const v = prevVersions[i];\r\n                try {\r\n                    (0, viewer_settings_1.validate)(json, v);\r\n                    this._settings = (0, viewer_settings_1.convert)(json, viewer_settings_1.latestVersion);\r\n                    this.cleanSettings(this._settings);\r\n                    return;\r\n                }\r\n                catch (e) { }\r\n            }\r\n            try {\r\n                (0, viewer_settings_1.validate)(json, viewer_settings_1.latestVersion);\r\n                this._settings = (0, viewer_settings_1.convert)(json, viewer_settings_1.latestVersion);\r\n                this.cleanSettings(this._settings);\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw new ShapeDiverViewerErrors_1.ShapeDiverViewerSettingsError('SettingsEngine.loadSettings: Settings could not be validated. ' + e.message, e);\r\n            }\r\n        }\r\n        else {\r\n            this._settings = (0, viewer_settings_1.DefaultsV3_4)();\r\n            return;\r\n        }\r\n    }\r\n    reset() {\r\n        this._settings = (0, viewer_settings_1.DefaultsV3_4)();\r\n    }\r\n    // #endregion Public Methods (4)\r\n    // #region Private Methods (1)\r\n    cleanSettings(json) {\r\n        for (let c in json.camera.cameras) {\r\n            const camera = json.camera.cameras[c];\r\n            if (camera.type === 'perspective') {\r\n                const restrictions = camera.controls.restrictions;\r\n                if (restrictions.position.cube.min.x === null)\r\n                    restrictions.position.cube.min.x = -Infinity;\r\n                if (restrictions.position.cube.min.y === null)\r\n                    restrictions.position.cube.min.y = -Infinity;\r\n                if (restrictions.position.cube.min.z === null)\r\n                    restrictions.position.cube.min.z = -Infinity;\r\n                if (restrictions.position.cube.max.x === null)\r\n                    restrictions.position.cube.max.x = Infinity;\r\n                if (restrictions.position.cube.max.y === null)\r\n                    restrictions.position.cube.max.y = Infinity;\r\n                if (restrictions.position.cube.max.z === null)\r\n                    restrictions.position.cube.max.z = Infinity;\r\n                if (restrictions.position.sphere.radius === null)\r\n                    restrictions.position.sphere.radius = Infinity;\r\n                if (restrictions.target.cube.min.x === null)\r\n                    restrictions.target.cube.min.x = -Infinity;\r\n                if (restrictions.target.cube.min.y === null)\r\n                    restrictions.target.cube.min.y = -Infinity;\r\n                if (restrictions.target.cube.min.z === null)\r\n                    restrictions.target.cube.min.z = -Infinity;\r\n                if (restrictions.target.cube.max.x === null)\r\n                    restrictions.target.cube.max.x = Infinity;\r\n                if (restrictions.target.cube.max.y === null)\r\n                    restrictions.target.cube.max.y = Infinity;\r\n                if (restrictions.target.cube.max.z === null)\r\n                    restrictions.target.cube.max.z = Infinity;\r\n                if (restrictions.target.sphere.radius === null)\r\n                    restrictions.target.sphere.radius = Infinity;\r\n                if (restrictions.rotation.minAzimuthAngle === null)\r\n                    restrictions.rotation.minAzimuthAngle = -Infinity;\r\n                if (restrictions.rotation.maxAzimuthAngle === null)\r\n                    restrictions.rotation.maxAzimuthAngle = Infinity;\r\n                if (restrictions.zoom.maxDistance === null)\r\n                    restrictions.zoom.maxDistance = Infinity;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.SettingsEngine = SettingsEngine;\r\n"},"sourceMaps":{"js":{"version":3,"file":"SettingsEngine.js","sourceRoot":"","sources":["../../src/settings-engine/SettingsEngine.ts"],"names":[],"mappings":"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","sourcesContent":["import { convert, validate, DefaultsV3_4 as Defaults, ISettingsV3_4 as ISettings, versions, latestVersion } from '@shapediver/viewer.settings';\r\n\r\nimport { EventEngine } from '../event-engine/EventEngine'\r\nimport { Logger } from '../logger/Logger';\r\nimport { ShapeDiverViewerSettingsError } from '../logger/ShapeDiverViewerErrors';\r\n\r\ntype IARSettings = ISettings[\"ar\"];\r\ntype ICameraSettings = ISettings[\"camera\"];\r\ntype IEnvironmentSettings = ISettings[\"environment\"];\r\ntype IEnvironmentGeometrySettings = ISettings[\"environmentGeometry\"];\r\ntype IGeneralSettings = ISettings[\"general\"];\r\ntype ILightSettings = ISettings[\"light\"];\r\ntype IRenderingSettings = ISettings[\"rendering\"];\r\ntype ISessionSettings = ISettings[\"session\"];\r\n\r\nexport class SettingsEngine {\r\n    // #region Properties (8)\r\n\r\n    private readonly _eventEngine: EventEngine = EventEngine.instance;\r\n    private readonly _logger: Logger = Logger.instance;\r\n    private readonly _settings: ISettings = Defaults();\r\n    private _settingsJson: any;\r\n\r\n    // #endregion Properties (8)\r\n\r\n    // #region Public Accessors (10)\r\n\r\n    public get ar(): IARSettings {\r\n        return this._settings.ar;\r\n    }\r\n\r\n    public get camera(): ICameraSettings {\r\n        return this._settings.camera;\r\n    }\r\n\r\n    public get environment(): IEnvironmentSettings {\r\n        return this._settings.environment;\r\n    }\r\n\r\n    public get environmentGeometry(): IEnvironmentGeometrySettings {\r\n        return this._settings.environmentGeometry;\r\n    }\r\n\r\n    public get general(): IGeneralSettings {\r\n        return this._settings.general;\r\n    }\r\n\r\n    public get light(): ILightSettings {\r\n        return this._settings.light;\r\n    }\r\n\r\n    public get rendering(): IRenderingSettings {\r\n        return this._settings.rendering;\r\n    }\r\n\r\n    public get session(): ISessionSettings {\r\n        return this._settings.session;\r\n    }\r\n\r\n    public set session(value: ISessionSettings) {\r\n        this._settings.session = value;\r\n    }\r\n\r\n    public get settings(): ISettings {\r\n        return this._settings;\r\n    }\r\n    \r\n    public get settingsJson(): any {\r\n        return this._settingsJson;\r\n    }\r\n\r\n    // #endregion Public Accessors (10)\r\n\r\n    // #region Public Methods (4)\r\n\r\n    public flatten() {\r\n        const flattenObject = (ob: any) => {\r\n            const toReturn: { [key: string]: any } = {};\r\n            for (let i in ob) {\r\n                if (!ob.hasOwnProperty(i)) continue;\r\n                if ((typeof ob[i]) == 'object') {\r\n                    const flatObject = flattenObject(ob[i]);\r\n                    for (var x in flatObject) {\r\n                        if (!flatObject.hasOwnProperty(x)) continue;\r\n                        toReturn[i + '.' + x] = flatObject[x];\r\n                    }\r\n                } else {\r\n                    toReturn[i] = ob[i];\r\n                }\r\n            }\r\n            return toReturn;\r\n        };\r\n        return flattenObject(this.settings);\r\n    }\r\n\r\n    public loadSettings(json: any) {\r\n        this._settingsJson = json;\r\n        if (JSON.stringify(json) !== JSON.stringify({})) {\r\n\r\n            const prevVersions = ['1.0', '2.0', '3.0', '3.1', '3.2', '3.3'];\r\n            for(let i = 0; i < prevVersions.length; i++) {\r\n                const v = prevVersions[i];\r\n\r\n                try { \r\n                    validate(json, v as versions);             \r\n                    (<any>this._settings) = convert(json, latestVersion);\r\n                    this.cleanSettings(this._settings);\r\n                    return;\r\n                } catch (e) {}\r\n            }\r\n\r\n            try { \r\n                validate(json, latestVersion);             \r\n                (<any>this._settings) = convert(json, latestVersion);\r\n                this.cleanSettings(this._settings);\r\n                return;\r\n            } catch (e) {\r\n                throw new ShapeDiverViewerSettingsError('SettingsEngine.loadSettings: Settings could not be validated. ' + (<Error>e).message, <Error>e);\r\n            }\r\n        } else {\r\n            (<any>this._settings) = Defaults();\r\n            return;\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        (<any>this._settings) = Defaults();\r\n    }\r\n\r\n    // #endregion Public Methods (4)\r\n\r\n    // #region Private Methods (1)\r\n\r\n    private cleanSettings(json: ISettings) {\r\n        for(let c in json.camera.cameras) {\r\n            const camera = json.camera.cameras[c];\r\n            if(camera.type === 'perspective') {\r\n                const restrictions = (<any>camera.controls).restrictions;\r\n                if(restrictions.position.cube.min.x === null) restrictions.position.cube.min.x = -Infinity;\r\n                if(restrictions.position.cube.min.y === null) restrictions.position.cube.min.y = -Infinity;\r\n                if(restrictions.position.cube.min.z === null) restrictions.position.cube.min.z = -Infinity;\r\n                if(restrictions.position.cube.max.x === null) restrictions.position.cube.max.x = Infinity;\r\n                if(restrictions.position.cube.max.y === null) restrictions.position.cube.max.y = Infinity;\r\n                if(restrictions.position.cube.max.z === null) restrictions.position.cube.max.z = Infinity;\r\n                if(restrictions.position.sphere.radius === null) restrictions.position.sphere.radius = Infinity;\r\n                if(restrictions.target.cube.min.x === null) restrictions.target.cube.min.x = -Infinity;\r\n                if(restrictions.target.cube.min.y === null) restrictions.target.cube.min.y = -Infinity;\r\n                if(restrictions.target.cube.min.z === null) restrictions.target.cube.min.z = -Infinity;\r\n                if(restrictions.target.cube.max.x === null) restrictions.target.cube.max.x = Infinity;\r\n                if(restrictions.target.cube.max.y === null) restrictions.target.cube.max.y = Infinity;\r\n                if(restrictions.target.cube.max.z === null) restrictions.target.cube.max.z = Infinity;\r\n                if(restrictions.target.sphere.radius === null) restrictions.target.sphere.radius = Infinity;\r\n                if(restrictions.rotation.minAzimuthAngle === null) restrictions.rotation.minAzimuthAngle = -Infinity;\r\n                if(restrictions.rotation.maxAzimuthAngle === null) restrictions.rotation.maxAzimuthAngle = Infinity;\r\n                if(restrictions.zoom.maxDistance === null) restrictions.zoom.maxDistance = Infinity;\r\n            }\r\n        }\r\n    }\r\n\r\n    // #endregion Private Methods (1)\r\n}"]}},"error":null,"hash":"da78b6608f3dd67e36ec7a600bb7e1a6","cacheData":{"env":{}}}