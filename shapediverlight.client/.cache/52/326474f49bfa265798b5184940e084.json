{"id":"node_modules/@shapediver/viewer.shared.services/dist/state-engine/StatePromise.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\state-engine\\StatePromise.js.map","includedInParent":true,"mtime":1706542086602},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\src\\state-engine\\StatePromise.ts","includedInParent":true,"mtime":1706542087001},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\package.json","includedInParent":true,"mtime":1706542085933}],"generated":{"js":"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StatePromise = void 0;\r\nclass StatePromise {\r\n    constructor() {\r\n        this._resolved = false;\r\n        this._callbacks = [];\r\n        this._promise = new Promise((resolve, reject) => {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        });\r\n        this._promise.finally(() => {\r\n            this._resolved = true;\r\n        });\r\n    }\r\n    get resolved() {\r\n        return this._resolved;\r\n    }\r\n    get resolve() {\r\n        return this._resolve;\r\n    }\r\n    get reject() {\r\n        return this._reject;\r\n    }\r\n    then(callback) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._callbacks.push(callback);\r\n            this.resolved === true ? callback() : this._promise.then(callback);\r\n        });\r\n    }\r\n    reset() {\r\n        this._resolved = false;\r\n        this._promise = new Promise((resolve, reject) => {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        });\r\n        this._promise.finally(() => {\r\n            this._resolved = true;\r\n        });\r\n        const callbackCopy = [...this._callbacks];\r\n        this._callbacks = [];\r\n        for (let i = 0; i < callbackCopy.length; i++)\r\n            this.then(callbackCopy[i]);\r\n    }\r\n}\r\nexports.StatePromise = StatePromise;\r\n"},"sourceMaps":{"js":{"version":3,"file":"StatePromise.js","sourceRoot":"","sources":["../../src/state-engine/StatePromise.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAa,YAAY;IAQrB;QAPQ,cAAS,GAAY,KAAK,CAAC;QAK3B,eAAU,GAAmB,EAAE,CAAC;QAGpC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEY,IAAI,CAAC,QAAoB;;YAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvE,CAAC;KAAA;IAEM,KAAK;QACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,MAAM,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE;YACvC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAA;IAClC,CAAC;CACJ;AArDD,oCAqDC","sourcesContent":["export class StatePromise<T> {\r\n    private _resolved: boolean = false;\r\n    private _resolve!: (value: T | PromiseLike<T>) => void;\r\n    private _reject!: (value: T | PromiseLike<T>) => void;\r\n\r\n    private _promise: Promise<T>;\r\n    private _callbacks: (() => void)[] = [];\r\n\r\n    constructor() {\r\n        this._promise = new Promise((resolve, reject) => {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        });\r\n        \r\n        this._promise.finally(() => {\r\n            this._resolved = true;\r\n        });\r\n    }\r\n\r\n    public get resolved(): boolean {\r\n        return this._resolved;\r\n    }\r\n\r\n    public get resolve(): (value: T | PromiseLike<T>) => void {\r\n        return this._resolve;\r\n    }\r\n\r\n    public get reject(): (value: T | PromiseLike<T>) => void {\r\n        return this._reject;\r\n    }\r\n\r\n    public async then(callback: () => void ) {\r\n        this._callbacks.push(callback);\r\n        this.resolved === true ? callback() : this._promise.then(callback);\r\n    }\r\n\r\n    public reset() {\r\n        this._resolved = false;\r\n        \r\n        this._promise = new Promise((resolve, reject) => {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        });\r\n        \r\n        this._promise.finally(() => {\r\n            this._resolved = true;\r\n        });\r\n\r\n        const callbackCopy = [...this._callbacks];\r\n        this._callbacks = [];\r\n        for(let i = 0; i < callbackCopy.length; i++)\r\n            this.then(callbackCopy[i])\r\n    }\r\n}"]}},"error":null,"hash":"18e0396b9d0408386f1768d4a3f22eff","cacheData":{"env":{}}}