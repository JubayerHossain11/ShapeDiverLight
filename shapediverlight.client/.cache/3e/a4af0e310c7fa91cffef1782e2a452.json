{"id":"node_modules/@shapediver/viewer.rendering-engine.canvas-engine/dist/implementation/CanvasEngine.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.canvas-engine\\dist\\implementation\\CanvasEngine.js.map","includedInParent":true,"mtime":1706527148249},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.canvas-engine\\src\\implementation\\CanvasEngine.ts","includedInParent":true,"mtime":1706527148638},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.canvas-engine\\package.json","includedInParent":true,"mtime":1706527147877},{"name":"@shapediver/viewer.shared.services","loc":{"line":4,"column":41,"index":152},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.canvas-engine\\dist\\implementation\\CanvasEngine.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.services\\dist\\index.js"},{"name":"./Canvas","loc":{"line":5,"column":25,"index":217},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.canvas-engine\\dist\\implementation\\CanvasEngine.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.canvas-engine\\dist\\implementation\\Canvas.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CanvasEngine = void 0;\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nconst Canvas_1 = require(\"./Canvas\");\r\nclass CanvasEngine {\r\n    constructor() {\r\n        // #region Properties (3)\r\n        this._canvasDictionary = {};\r\n        this._uuidGenerator = viewer_shared_services_1.UuidGenerator.instance;\r\n        // #endregion Public Methods (2)\r\n    }\r\n    // #endregion Properties (3)\r\n    // #region Public Static Accessors (1)\r\n    static get instance() {\r\n        return this._instance || (this._instance = new this());\r\n    }\r\n    // #endregion Public Static Accessors (1)\r\n    // #region Public Methods (2)\r\n    /**\r\n     * Creates a canvas object that could in the future be expanded to hold more information\r\n     * The definition of the canvas can be:\r\n     * - empty: A canvas is created with an unique ID.\r\n     * - string:\r\n     *      - If a canvas with this ID was created, this canvas is returned.\r\n     *      - If there is an HTMLCanvasElement in the document with this ID, this is used.\r\n     *      - If there is no HTMLElement found in the document with this ID, a canvas with ID will be created.\r\n     * - HTMLCanvasElement: A Canvas Object will be created with this element. If there is no ID, one will be generated.\r\n     *\r\n     * @param canvasDefinition the definition of this canvas\r\n     */\r\n    createCanvasObject(canvasDefinition, storageId) {\r\n        storageId = storageId !== undefined && this._uuidGenerator.validate(storageId) ? storageId : this._uuidGenerator.create();\r\n        if (canvasDefinition instanceof HTMLCanvasElement) {\r\n            // a canvas was provided\r\n            const canvasElement = canvasDefinition;\r\n            if (!canvasElement.id)\r\n                canvasElement.id = this._uuidGenerator.create();\r\n            this._canvasDictionary[storageId] = new Canvas_1.Canvas(canvasElement.id, canvasDefinition, canvasElement);\r\n            return storageId;\r\n        }\r\n        if (canvasDefinition) {\r\n            const id = canvasDefinition;\r\n            const canvasElement = document.getElementById(id);\r\n            for (let canvasId in this._canvasDictionary)\r\n                if (this._canvasDictionary[canvasId].id === id)\r\n                    return canvasId;\r\n            if (canvasElement instanceof HTMLCanvasElement) {\r\n                // id of a canvas was provided\r\n                this._canvasDictionary[storageId] = new Canvas_1.Canvas(id, canvasDefinition, canvasElement);\r\n                return storageId;\r\n            }\r\n            else if (!canvasElement) {\r\n                // no HTMLElement could be found, create Canvas with the id\r\n                this._canvasDictionary[storageId] = new Canvas_1.Canvas(id, canvasDefinition);\r\n                return storageId;\r\n            }\r\n        }\r\n        this._canvasDictionary[storageId] = new Canvas_1.Canvas(storageId, canvasDefinition);\r\n        return storageId;\r\n    }\r\n    getCanvas(storageId) {\r\n        return this._canvasDictionary[storageId];\r\n    }\r\n}\r\nexports.CanvasEngine = CanvasEngine;\r\n"},"sourceMaps":{"js":{"version":3,"file":"CanvasEngine.js","sourceRoot":"","sources":["../../src/implementation/CanvasEngine.ts"],"names":[],"mappings":";;;AAAA,+EAAkE;AAElE,qCAAiC;AAIjC,MAAa,YAAY;IAAzB;QACI,yBAAyB;QAER,sBAAiB,GAE9B,EAAE,CAAC;QAIY,mBAAc,GAAkB,sCAAa,CAAC,QAAQ,CAAC;QAiE1E,gCAAgC;IACpC,CAAC;IAhEG,4BAA4B;IAE5B,sCAAsC;IAE/B,MAAM,KAAK,QAAQ;QACtB,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,yCAAyC;IAEzC,6BAA6B;IAE7B;;;;;;;;;;;OAWG;IACI,kBAAkB,CAAC,gBAA6C,EAAE,SAAkB;QACvF,SAAS,GAAG,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;QAE1H,IAAI,gBAAgB,YAAY,iBAAiB,EAAE;YAC/C,wBAAwB;YACxB,MAAM,aAAa,GAAuB,gBAAiB,CAAC;YAC5D,IAAI,CAAC,aAAa,CAAC,EAAE;gBACjB,aAAa,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;YACpD,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,eAAM,CAAC,aAAa,CAAC,EAAE,EAAE,gBAAgB,EAAE,aAAa,CAAC,CAAC;YAClG,OAAO,SAAS,CAAC;SACpB;QAED,IAAI,gBAAgB,EAAE;YAClB,MAAM,EAAE,GAAW,gBAAgB,CAAC;YACpC,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;YAElD,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,iBAAiB;gBACvC,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE;oBAC1C,OAAO,QAAQ,CAAC;YAExB,IAAI,aAAa,YAAY,iBAAiB,EAAE;gBAC5C,8BAA8B;gBAC9B,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,eAAM,CAAC,EAAE,EAAE,gBAAgB,EAAE,aAAa,CAAC,CAAC;gBACpF,OAAO,SAAS,CAAC;aACpB;iBAAM,IAAG,CAAC,aAAa,EAAE;gBACtB,2DAA2D;gBAC3D,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,eAAM,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC;gBACrE,OAAO,SAAS,CAAC;aACpB;SACJ;QAED,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,eAAM,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;QAC5E,OAAO,SAAS,CAAC;IACrB,CAAC;IAEM,SAAS,CAAC,SAAiB;QAC9B,OAAO,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;IAC7C,CAAC;CAGJ;AA3ED,oCA2EC","sourcesContent":["import { UuidGenerator } from '@shapediver/viewer.shared.services'\r\n\r\nimport { Canvas } from './Canvas'\r\nimport { ICanvasEngine } from '../interfaces/ICanvasEngine'\r\nimport { ICanvas } from '../interfaces/ICanvas'\r\n\r\nexport class CanvasEngine implements ICanvasEngine {\r\n    // #region Properties (3)\r\n\r\n    private readonly _canvasDictionary: {\r\n        [key: string]: Canvas\r\n    } = {};\r\n\r\n    private static _instance: CanvasEngine;\r\n\r\n    protected readonly _uuidGenerator: UuidGenerator = UuidGenerator.instance;\r\n\r\n    // #endregion Properties (3)\r\n\r\n    // #region Public Static Accessors (1)\r\n\r\n    public static get instance() {\r\n        return this._instance || (this._instance = new this());\r\n    }\r\n\r\n    // #endregion Public Static Accessors (1)\r\n\r\n    // #region Public Methods (2)\r\n\r\n    /**\r\n     * Creates a canvas object that could in the future be expanded to hold more information\r\n     * The definition of the canvas can be:\r\n     * - empty: A canvas is created with an unique ID.\r\n     * - string: \r\n     *      - If a canvas with this ID was created, this canvas is returned.\r\n     *      - If there is an HTMLCanvasElement in the document with this ID, this is used.\r\n     *      - If there is no HTMLElement found in the document with this ID, a canvas with ID will be created.\r\n     * - HTMLCanvasElement: A Canvas Object will be created with this element. If there is no ID, one will be generated.\r\n     * \r\n     * @param canvasDefinition the definition of this canvas\r\n     */\r\n    public createCanvasObject(canvasDefinition?: string | HTMLCanvasElement, storageId?: string): string {\r\n        storageId = storageId !== undefined && this._uuidGenerator.validate(storageId) ? storageId : this._uuidGenerator.create();\r\n\r\n        if (canvasDefinition instanceof HTMLCanvasElement) {\r\n            // a canvas was provided\r\n            const canvasElement = (<HTMLCanvasElement>canvasDefinition);\r\n            if (!canvasElement.id)\r\n                canvasElement.id = this._uuidGenerator.create();\r\n            this._canvasDictionary[storageId] = new Canvas(canvasElement.id, canvasDefinition, canvasElement);\r\n            return storageId;\r\n        }\r\n\r\n        if (canvasDefinition) {\r\n            const id: string = canvasDefinition;\r\n            const canvasElement = document.getElementById(id);\r\n\r\n            for (let canvasId in this._canvasDictionary)\r\n                if (this._canvasDictionary[canvasId].id === id)\r\n                    return canvasId;\r\n\r\n            if (canvasElement instanceof HTMLCanvasElement) {\r\n                // id of a canvas was provided\r\n                this._canvasDictionary[storageId] = new Canvas(id, canvasDefinition, canvasElement);\r\n                return storageId;\r\n            } else if(!canvasElement) {\r\n                // no HTMLElement could be found, create Canvas with the id\r\n                this._canvasDictionary[storageId] = new Canvas(id, canvasDefinition);\r\n                return storageId;\r\n            }\r\n        }\r\n\r\n        this._canvasDictionary[storageId] = new Canvas(storageId, canvasDefinition);\r\n        return storageId;\r\n    }\r\n\r\n    public getCanvas(storageId: string): ICanvas {\r\n        return this._canvasDictionary[storageId];\r\n    }\r\n\r\n    // #endregion Public Methods (2)\r\n}"]}},"error":null,"hash":"d9c592f7d0bde5f491429bd2b795be13","cacheData":{"env":{}}}