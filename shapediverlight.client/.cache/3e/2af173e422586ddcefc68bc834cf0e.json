{"id":"node_modules/@shapediver/viewer.data-engine.data-engine/dist/DataEngine.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.data-engine\\dist\\DataEngine.js.map","includedInParent":true,"mtime":1706527150981},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.data-engine\\src\\DataEngine.ts","includedInParent":true,"mtime":1706527151034},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.data-engine\\package.json","includedInParent":true,"mtime":1706527150956},{"name":"@shapediver/viewer.shared.types","loc":{"line":13,"column":38,"index":837},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.data-engine\\dist\\DataEngine.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.types\\dist\\index.js"},{"name":"@shapediver/viewer.data-engine.geometry-engine","loc":{"line":14,"column":53,"index":927},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.data-engine\\dist\\DataEngine.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.geometry-engine\\dist\\index.js"},{"name":"@shapediver/viewer.data-engine.material-engine","loc":{"line":15,"column":53,"index":1032},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.data-engine\\dist\\DataEngine.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.material-engine\\dist\\index.js"},{"name":"@shapediver/viewer.data-engine.sdtf-engine","loc":{"line":16,"column":49,"index":1133},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.data-engine\\dist\\DataEngine.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.sdtf-engine\\dist\\index.js"},{"name":"@shapediver/viewer.data-engine.tag3d-engine","loc":{"line":17,"column":50,"index":1231},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.data-engine\\dist\\DataEngine.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.tag3d-engine\\dist\\index.js"},{"name":"@shapediver/viewer.shared.node-tree","loc":{"line":18,"column":42,"index":1322},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.data-engine\\dist\\DataEngine.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.node-tree\\dist\\index.js"},{"name":"@shapediver/viewer.shared.services","loc":{"line":19,"column":41,"index":1404},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.data-engine\\dist\\DataEngine.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.services\\dist\\index.js"},{"name":"@shapediver/viewer.data-engine.html-element-anchor-engine","loc":{"line":20,"column":64,"index":1508},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.data-engine\\dist\\DataEngine.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.html-element-anchor-engine\\dist\\index.js"},{"name":"gl-matrix","loc":{"line":21,"column":28,"index":1599},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.data-engine.data-engine\\dist\\DataEngine.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\gl-matrix\\esm\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DataEngine = void 0;\r\nconst viewer_shared_types_1 = require(\"@shapediver/viewer.shared.types\");\r\nconst viewer_data_engine_geometry_engine_1 = require(\"@shapediver/viewer.data-engine.geometry-engine\");\r\nconst viewer_data_engine_material_engine_1 = require(\"@shapediver/viewer.data-engine.material-engine\");\r\nconst viewer_data_engine_sdtf_engine_1 = require(\"@shapediver/viewer.data-engine.sdtf-engine\");\r\nconst viewer_data_engine_tag3d_engine_1 = require(\"@shapediver/viewer.data-engine.tag3d-engine\");\r\nconst viewer_shared_node_tree_1 = require(\"@shapediver/viewer.shared.node-tree\");\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nconst viewer_data_engine_html_element_anchor_engine_1 = require(\"@shapediver/viewer.data-engine.html-element-anchor-engine\");\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nclass DataEngine {\r\n    constructor() {\r\n        // #region Properties (7)\r\n        this._geometryEngine = viewer_data_engine_geometry_engine_1.GeometryEngine.instance;\r\n        this._htmlElementAnchorEngine = viewer_data_engine_html_element_anchor_engine_1.HTMLElementAnchorEngine.instance;\r\n        this._eventEngine = viewer_shared_services_1.EventEngine.instance;\r\n        this._materialEngine = viewer_data_engine_material_engine_1.MaterialEngine.instance;\r\n        this._sdtfEngine = viewer_data_engine_sdtf_engine_1.SDTFEngine.instance;\r\n        this._tag3dEngine = viewer_data_engine_tag3d_engine_1.Tag3dEngine.instance;\r\n        this._uuidGenerator = viewer_shared_services_1.UuidGenerator.instance;\r\n        // #endregion Public Methods (1)\r\n    }\r\n    // #endregion Properties (7)\r\n    // #region Public Static Accessors (1)\r\n    static get instance() {\r\n        return this._instance || (this._instance = new this());\r\n    }\r\n    // #endregion Public Static Accessors (1)\r\n    // #region Public Methods (1)\r\n    loadContent(content, jwtToken, taskEventId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!content || (content && !content.format))\r\n                throw new viewer_shared_services_1.ShapeDiverViewerDataProcessingError('DataEngine cannot load content.');\r\n            taskEventId = taskEventId || this._uuidGenerator.create();\r\n            let node;\r\n            if (content.format === 'glb' || content.format === 'gltf') {\r\n                node = yield this._geometryEngine.loadContent(content, taskEventId);\r\n            }\r\n            else if (content.format === 'material') {\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.TASK.TASK_START, { type: viewer_shared_types_1.TASK_TYPE.MATERIAL_CONTENT_LOADING, id: taskEventId, progress: 0, status: 'Loading material content.' });\r\n                node = yield this._materialEngine.loadContent(content);\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.TASK.TASK_END, { type: viewer_shared_types_1.TASK_TYPE.MATERIAL_CONTENT_LOADING, id: taskEventId, progress: 1, status: 'MATERIAL content loaded.' });\r\n            }\r\n            else if (content.format === 'tag2d' || content.format === 'anchor') {\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.TASK.TASK_START, { type: viewer_shared_types_1.TASK_TYPE.TAG_CONTENT_LOADING, id: taskEventId, progress: 0, status: 'Loading tag content.' });\r\n                node = yield this._htmlElementAnchorEngine.loadContent(content);\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.TASK.TASK_END, { type: viewer_shared_types_1.TASK_TYPE.TAG_CONTENT_LOADING, id: taskEventId, progress: 1, status: 'Tag content loaded.' });\r\n            }\r\n            else if (content.format === 'tag3d') {\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.TASK.TASK_START, { type: viewer_shared_types_1.TASK_TYPE.TAG_CONTENT_LOADING, id: taskEventId, progress: 0, status: 'Loading tag content.' });\r\n                node = yield this._tag3dEngine.loadContent(content);\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.TASK.TASK_END, { type: viewer_shared_types_1.TASK_TYPE.TAG_CONTENT_LOADING, id: taskEventId, progress: 1, status: 'Tag content loaded.' });\r\n            }\r\n            else if (content.format === 'sdtf') {\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.TASK.TASK_START, { type: viewer_shared_types_1.TASK_TYPE.SDTF_CONTENT_LOADING, id: taskEventId, progress: 0, status: 'Loading sdTF content.' });\r\n                node = yield this._sdtfEngine.loadContent(content, jwtToken);\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.TASK.TASK_END, { type: viewer_shared_types_1.TASK_TYPE.SDTF_CONTENT_LOADING, id: taskEventId, progress: 1, status: 'SdTF content loaded.' });\r\n            }\r\n            else {\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.TASK.TASK_START, { type: viewer_shared_types_1.TASK_TYPE.CUSTOM_CONTENT_LOADING, id: taskEventId, progress: 0, status: 'Loading custom content.' });\r\n                node = new viewer_shared_node_tree_1.TreeNode('custom');\r\n                node.data.push(new viewer_shared_types_1.CustomData(Object.assign({}, content)));\r\n                this._eventEngine.emitEvent(viewer_shared_services_1.EVENTTYPE.TASK.TASK_END, { type: viewer_shared_types_1.TASK_TYPE.CUSTOM_CONTENT_LOADING, id: taskEventId, progress: 1, status: 'Custom content loaded.' });\r\n            }\r\n            const transformationNode = new viewer_shared_node_tree_1.TreeNode('transformation');\r\n            if (content.transformations && Array.isArray(content.transformations)) {\r\n                for (let i = 0; i < content.transformations.length; i++) {\r\n                    const t = content.transformations[i];\r\n                    if (Array.isArray(t) && t.length === 16) {\r\n                        const nodeInstance = node.clone();\r\n                        nodeInstance.transformations = [{\r\n                                id: 'content_' + i,\r\n                                matrix: gl_matrix_1.mat4.fromValues(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15])\r\n                            }].concat(node.transformations);\r\n                        transformationNode.updateVersion();\r\n                        transformationNode.addChild(nodeInstance);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                transformationNode.addChild(node);\r\n            }\r\n            return transformationNode;\r\n        });\r\n    }\r\n}\r\nexports.DataEngine = DataEngine;\r\n"},"sourceMaps":{"js":{"version":3,"file":"DataEngine.js","sourceRoot":"","sources":["../src/DataEngine.ts"],"names":[],"mappings":"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","sourcesContent":["import { CustomData, ITaskEvent, TASK_TYPE } from '@shapediver/viewer.shared.types'\r\nimport { GeometryEngine } from '@shapediver/viewer.data-engine.geometry-engine'\r\nimport { MaterialEngine } from '@shapediver/viewer.data-engine.material-engine'\r\nimport { SDTFEngine } from '@shapediver/viewer.data-engine.sdtf-engine'\r\nimport { Tag3dEngine } from '@shapediver/viewer.data-engine.tag3d-engine'\r\nimport { ITreeNode, TreeNode } from '@shapediver/viewer.shared.node-tree'\r\nimport { EventEngine, EVENTTYPE, Logger, ShapeDiverViewerDataProcessingError, UuidGenerator } from '@shapediver/viewer.shared.services'\r\nimport { HTMLElementAnchorEngine } from '@shapediver/viewer.data-engine.html-element-anchor-engine'\r\n\r\nimport { mat4 } from 'gl-matrix'\r\nimport { ShapeDiverResponseOutputContent } from '@shapediver/sdk.geometry-api-sdk-v2'\r\n\r\nexport class DataEngine {\r\n    // #region Properties (7)\r\n\r\n    private readonly _geometryEngine: GeometryEngine = GeometryEngine.instance;\r\n    private readonly _htmlElementAnchorEngine: HTMLElementAnchorEngine = HTMLElementAnchorEngine.instance;\r\n    private readonly _eventEngine: EventEngine = EventEngine.instance;\r\n    private readonly _materialEngine: MaterialEngine = MaterialEngine.instance;\r\n    private readonly _sdtfEngine: SDTFEngine = SDTFEngine.instance;\r\n    private readonly _tag3dEngine: Tag3dEngine = Tag3dEngine.instance;\r\n    private readonly _uuidGenerator: UuidGenerator = UuidGenerator.instance;\r\n\r\n    private static _instance: DataEngine;\r\n\r\n    // #endregion Properties (7)\r\n\r\n    // #region Public Static Accessors (1)\r\n\r\n    public static get instance() {\r\n        return this._instance || (this._instance = new this());\r\n    }\r\n\r\n    // #endregion Public Static Accessors (1)\r\n\r\n    // #region Public Methods (1)\r\n\r\n    public async loadContent(content: ShapeDiverResponseOutputContent, jwtToken?: string, taskEventId?: string): Promise<ITreeNode> {\r\n        if (!content || (content && !content.format)) \r\n            throw new ShapeDiverViewerDataProcessingError('DataEngine cannot load content.');\r\n\r\n        taskEventId = taskEventId || this._uuidGenerator.create();\r\n\r\n        let node: ITreeNode;\r\n\r\n        if (content.format === 'glb' || content.format === 'gltf') {\r\n            node = await this._geometryEngine.loadContent(content, taskEventId);\r\n        } else if (content.format === 'material') {\r\n            this._eventEngine.emitEvent(EVENTTYPE.TASK.TASK_START, { type: TASK_TYPE.MATERIAL_CONTENT_LOADING, id: taskEventId, progress: 0, status: 'Loading material content.' });\r\n            node = await this._materialEngine.loadContent(content);\r\n            this._eventEngine.emitEvent(EVENTTYPE.TASK.TASK_END, { type: TASK_TYPE.MATERIAL_CONTENT_LOADING, id: taskEventId, progress: 1, status: 'MATERIAL content loaded.' });\r\n        } else if (content.format === 'tag2d' || content.format === 'anchor') {\r\n            this._eventEngine.emitEvent(EVENTTYPE.TASK.TASK_START, { type: TASK_TYPE.TAG_CONTENT_LOADING, id: taskEventId, progress: 0, status: 'Loading tag content.' });\r\n            node = await this._htmlElementAnchorEngine.loadContent(content);\r\n            this._eventEngine.emitEvent(EVENTTYPE.TASK.TASK_END, { type: TASK_TYPE.TAG_CONTENT_LOADING, id: taskEventId, progress: 1, status: 'Tag content loaded.' });\r\n        } else if (content.format === 'tag3d') {\r\n            this._eventEngine.emitEvent(EVENTTYPE.TASK.TASK_START, { type: TASK_TYPE.TAG_CONTENT_LOADING, id: taskEventId, progress: 0, status: 'Loading tag content.' });\r\n            node = await this._tag3dEngine.loadContent(content);\r\n            this._eventEngine.emitEvent(EVENTTYPE.TASK.TASK_END, { type: TASK_TYPE.TAG_CONTENT_LOADING, id: taskEventId, progress: 1, status: 'Tag content loaded.' });\r\n        } else if (content.format === 'sdtf') {\r\n            this._eventEngine.emitEvent(EVENTTYPE.TASK.TASK_START, { type: TASK_TYPE.SDTF_CONTENT_LOADING, id: taskEventId, progress: 0, status: 'Loading sdTF content.' });\r\n            node = await this._sdtfEngine.loadContent(content, jwtToken);\r\n            this._eventEngine.emitEvent(EVENTTYPE.TASK.TASK_END, { type: TASK_TYPE.SDTF_CONTENT_LOADING, id: taskEventId, progress: 1, status: 'SdTF content loaded.' });\r\n        } else {\r\n            this._eventEngine.emitEvent(EVENTTYPE.TASK.TASK_START, { type: TASK_TYPE.CUSTOM_CONTENT_LOADING, id: taskEventId, progress: 0, status: 'Loading custom content.' });\r\n            node = new TreeNode('custom');\r\n            node.data.push(new CustomData({ ...content }));\r\n            this._eventEngine.emitEvent(EVENTTYPE.TASK.TASK_END, { type: TASK_TYPE.CUSTOM_CONTENT_LOADING, id: taskEventId, progress: 1, status: 'Custom content loaded.' });\r\n        }\r\n\r\n        const transformationNode = new TreeNode('transformation');\r\n        if (content.transformations && Array.isArray(content.transformations)) {\r\n            for (let i = 0; i < content.transformations.length; i++) {\r\n                const t = content.transformations[i];\r\n                if (Array.isArray(t) && t.length === 16) {\r\n                    const nodeInstance = node.clone();\r\n                    nodeInstance.transformations = [{\r\n                        id: 'content_' + i,\r\n                        matrix: mat4.fromValues(t[0], t[1], t[2], t[3],\r\n                            t[4], t[5], t[6], t[7],\r\n                            t[8], t[9], t[10], t[11],\r\n                            t[12], t[13], t[14], t[15])\r\n                    }].concat(node.transformations);\r\n                    transformationNode.updateVersion();\r\n                    transformationNode.addChild(nodeInstance);\r\n                }\r\n            }\r\n        } else {\r\n            transformationNode.addChild(node)\r\n        }\r\n        return transformationNode;\r\n    }\r\n\r\n    // #endregion Public Methods (1)\r\n}"]}},"error":null,"hash":"c9fc373e1617e4c19d145581106b90a3","cacheData":{"env":{}}}