{"id":"node_modules/@shapediver/viewer.shared.math/dist/implementation/Plane.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.math\\dist\\implementation\\Plane.js.map","includedInParent":true,"mtime":1706527150251},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.math\\src\\implementation\\Plane.ts","includedInParent":true,"mtime":1706527150455},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.math\\package.json","includedInParent":true,"mtime":1706527150101},{"name":"gl-matrix","loc":{"line":4,"column":28,"index":132},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.math\\dist\\implementation\\Plane.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\gl-matrix\\esm\\index.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Plane = void 0;\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nclass Plane {\r\n    // #region Constructors (1)\r\n    constructor(_normal = gl_matrix_1.vec3.fromValues(1, 0, 0), _constant = 0) {\r\n        this._normal = _normal;\r\n        this._constant = _constant;\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (4)\r\n    get constant() {\r\n        return this._constant;\r\n    }\r\n    set constant(value) {\r\n        this._constant = value;\r\n    }\r\n    get normal() {\r\n        return this._normal;\r\n    }\r\n    set normal(value) {\r\n        this._normal = value;\r\n    }\r\n    // #endregion Public Accessors (4)\r\n    // #region Public Methods (7)\r\n    applyMatrix(matrix) {\r\n        const normalMatrix = gl_matrix_1.mat3.transpose(gl_matrix_1.mat3.create(), gl_matrix_1.mat3.invert(gl_matrix_1.mat3.create(), gl_matrix_1.mat3.fromMat4(gl_matrix_1.mat3.create(), matrix)));\r\n        const p = gl_matrix_1.vec3.transformMat4(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.clone(this.normal), gl_matrix_1.vec3.fromValues(this._constant, this._constant, this._constant)), matrix);\r\n        this._normal = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.transformMat3(gl_matrix_1.vec3.create(), this._normal, normalMatrix));\r\n        this.constant = -gl_matrix_1.vec3.dot(p, this._normal);\r\n        return this;\r\n    }\r\n    clampPoint(point) {\r\n        const d = -this.distanceToPoint(point);\r\n        return gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), this.normal, gl_matrix_1.vec3.fromValues(d, d, d)), point);\r\n    }\r\n    clone() {\r\n        return new Plane(this._normal, this._constant);\r\n    }\r\n    containsPoint(point) {\r\n        return this.distanceToPoint(point) === 0;\r\n    }\r\n    distanceToPoint(point) {\r\n        return gl_matrix_1.vec3.dot(this.normal, point) + this.constant;\r\n    }\r\n    intersect(origin, direction) {\r\n        const denominator = gl_matrix_1.vec3.dot(this.normal, direction);\r\n        if (denominator === 0) {\r\n            // line is coplanar, return origin\r\n            if (this.distanceToPoint(origin) === 0)\r\n                return 0;\r\n            // Null is preferable to undefined since undefined means.... it is undefined\r\n            return null;\r\n        }\r\n        const t = -(gl_matrix_1.vec3.dot(origin, this.normal) + this.constant) / denominator;\r\n        if (t < 0)\r\n            return null;\r\n        return t; //vec3.add(vec3.create(), vec3.multiply(vec3.create(), direction, vec3.fromValues(t,t,t)), origin);\r\n    }\r\n    setFromNormalAndCoplanarPoint(normal, point) {\r\n        gl_matrix_1.vec3.copy(this.normal, normal);\r\n        this.constant = -gl_matrix_1.vec3.dot(point, this.normal);\r\n        return this;\r\n    }\r\n    reset() {\r\n        this._normal = gl_matrix_1.vec3.fromValues(1, 0, 0);\r\n        this._constant = 0;\r\n    }\r\n}\r\nexports.Plane = Plane;\r\n"},"sourceMaps":{"js":{"version":3,"file":"Plane.js","sourceRoot":"","sources":["../../src/implementation/Plane.ts"],"names":[],"mappings":"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","sourcesContent":["import { mat3, mat4, vec3 } from 'gl-matrix'\r\nimport { IPlane } from '../interfaces/IPlane';\r\n\r\n\r\nexport class Plane implements IPlane {\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(private _normal: vec3 = vec3.fromValues(1,0,0), private _constant: number = 0) {}\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Accessors (4)\r\n\r\n    public get constant(): number {\r\n\t\treturn this._constant;\r\n\t}\r\n\r\n    public set constant(value: number) {\r\n\t\tthis._constant = value;\r\n\t}\r\n\r\n    public get normal(): vec3 {\r\n\t\treturn this._normal;\r\n\t}\r\n\r\n    public set normal(value: vec3) {\r\n\t\tthis._normal = value;\r\n\t}\r\n\r\n    // #endregion Public Accessors (4)\r\n\r\n    // #region Public Methods (7)\r\n\r\n    public applyMatrix(matrix: mat4): IPlane {\r\n        const normalMatrix = mat3.transpose(mat3.create(), mat3.invert(mat3.create(), mat3.fromMat4(mat3.create(), matrix)))\r\n        const p = vec3.transformMat4(vec3.create(), vec3.multiply(vec3.create(), vec3.clone(this.normal), vec3.fromValues(this._constant, this._constant, this._constant)), matrix)\r\n        this._normal = vec3.normalize(vec3.create(), vec3.transformMat3(vec3.create(), this._normal, normalMatrix));\r\n\t\tthis.constant = -vec3.dot(p, this._normal);\r\n\t\treturn this;\r\n    }\r\n\r\n    public clampPoint(point: vec3): vec3 {\r\n        const d = -this.distanceToPoint(point);\r\n        return vec3.add(vec3.create(), vec3.multiply(vec3.create(), this.normal, vec3.fromValues(d, d, d)), point);\r\n    }\r\n\r\n    public clone(): IPlane {\r\n        return new Plane(this._normal, this._constant);\r\n    }\r\n\r\n    public containsPoint(point: vec3): boolean {\r\n         return this.distanceToPoint(point) === 0;\r\n    }\r\n\r\n    public distanceToPoint(point: vec3): number {\r\n        return vec3.dot(this.normal, point) + this.constant;\r\n    }\r\n\r\n    public intersect(origin: vec3, direction: vec3): number | null {\r\n\t\tconst denominator = vec3.dot(this.normal, direction);\r\n\t\tif (denominator === 0) {\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif (this.distanceToPoint( origin ) === 0) return 0;\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst t = - (vec3.dot(origin, this.normal) + this.constant) / denominator;\r\n\t\tif ( t < 0 ) return null;\r\n\r\n        return t; //vec3.add(vec3.create(), vec3.multiply(vec3.create(), direction, vec3.fromValues(t,t,t)), origin);\r\n    }\r\n\r\n    public setFromNormalAndCoplanarPoint(normal: vec3, point: vec3): IPlane {\r\n        vec3.copy(this.normal, normal);\r\n\t\tthis.constant = -vec3.dot(point, this.normal);\r\n\t\treturn this;\r\n    }\r\n\r\n    public reset() {\r\n        this._normal = vec3.fromValues(1,0,0);\r\n        this._constant = 0;\r\n    }\r\n\r\n    // #endregion Public Methods (7)\r\n}"]}},"error":null,"hash":"c69894a0b85c169f2b5dcee59b626c12","cacheData":{"env":{}}}