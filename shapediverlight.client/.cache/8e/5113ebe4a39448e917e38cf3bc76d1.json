{"id":"node_modules/@shapediver/viewer.shared.types/dist/interfaces/data/material/IMaterialAbstractData.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\dist\\interfaces\\data\\material\\IMaterialAbstractData.js.map","includedInParent":true,"mtime":1706542086720},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\src\\interfaces\\data\\material\\IMaterialAbstractData.ts","includedInParent":true,"mtime":1706542087286},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\package.json","includedInParent":true,"mtime":1706542086386}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MATERIAL_SHADING = exports.MATERIAL_ALPHA = exports.MATERIAL_SIDE = void 0;\r\nvar MATERIAL_SIDE;\r\n(function (MATERIAL_SIDE) {\r\n    MATERIAL_SIDE[\"DOUBLE\"] = \"double\";\r\n    MATERIAL_SIDE[\"FRONT\"] = \"front\";\r\n    MATERIAL_SIDE[\"BACK\"] = \"back\";\r\n})(MATERIAL_SIDE = exports.MATERIAL_SIDE || (exports.MATERIAL_SIDE = {}));\r\nvar MATERIAL_ALPHA;\r\n(function (MATERIAL_ALPHA) {\r\n    MATERIAL_ALPHA[\"OPAQUE\"] = \"opaque\";\r\n    MATERIAL_ALPHA[\"MASK\"] = \"mask\";\r\n    MATERIAL_ALPHA[\"BLEND\"] = \"blend\";\r\n})(MATERIAL_ALPHA = exports.MATERIAL_ALPHA || (exports.MATERIAL_ALPHA = {}));\r\nvar MATERIAL_SHADING;\r\n(function (MATERIAL_SHADING) {\r\n    MATERIAL_SHADING[\"FLAT\"] = \"flat\";\r\n    MATERIAL_SHADING[\"SMOOTH\"] = \"smooth\";\r\n})(MATERIAL_SHADING = exports.MATERIAL_SHADING || (exports.MATERIAL_SHADING = {}));\r\n"},"sourceMaps":{"js":{"version":3,"file":"IMaterialAbstractData.js","sourceRoot":"","sources":["../../../../src/interfaces/data/material/IMaterialAbstractData.ts"],"names":[],"mappings":";;;AAIA,IAAY,aAIX;AAJD,WAAY,aAAa;IACrB,kCAAiB,CAAA;IACjB,gCAAe,CAAA;IACf,8BAAa,CAAA;AACjB,CAAC,EAJW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAIxB;AAED,IAAY,cAIX;AAJD,WAAY,cAAc;IACtB,mCAAiB,CAAA;IACjB,+BAAa,CAAA;IACb,iCAAe,CAAA;AACnB,CAAC,EAJW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAIzB;AAED,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IACxB,iCAAa,CAAA;IACb,qCAAiB,CAAA;AACrB,CAAC,EAHW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAG3B","sourcesContent":["import { ITreeNodeData } from \"@shapediver/viewer.shared.node-tree\";\r\nimport { Color } from \"../../../types\";\r\nimport { IMapData } from \"./IMapData\";\r\n\r\nexport enum MATERIAL_SIDE {\r\n    DOUBLE = 'double',\r\n    FRONT = 'front',\r\n    BACK = 'back'\r\n}\r\n\r\nexport enum MATERIAL_ALPHA {\r\n    OPAQUE = 'opaque',\r\n    MASK = 'mask',\r\n    BLEND = 'blend'\r\n}\r\n\r\nexport enum MATERIAL_SHADING {\r\n    FLAT = 'flat',\r\n    SMOOTH = 'smooth'\r\n}\r\n\r\nexport interface IMaterialAbstractDataProperties {\r\n    // #region Properties (17)\r\n\r\n    alphaCutoff?: number,\r\n    alphaMap?: IMapData,\r\n    alphaMode?: MATERIAL_ALPHA,\r\n    aoMap?: IMapData,\r\n    aoMapIntensity?: number,\r\n    bumpMap?: IMapData,\r\n    bumpScale?: number,\r\n    color?: Color,\r\n    emissiveMap?: IMapData,\r\n    emissiveness?: Color,\r\n    map?: IMapData,\r\n    name?: string,\r\n    normalMap?: IMapData,\r\n    normalScale?: number,\r\n    opacity?: number,\r\n    shading?: MATERIAL_SHADING,\r\n    side?: MATERIAL_SIDE\r\n\r\n    // #endregion Properties (17)\r\n}\r\n\r\nexport interface IMaterialAbstractData extends ITreeNodeData {\r\n    // #region Properties (18)\r\n\r\n    alphaCutoff: number,\r\n    alphaMap?: IMapData,\r\n    alphaMode: MATERIAL_ALPHA,\r\n    aoMap?: IMapData,\r\n    aoMapIntensity: number,\r\n    bumpMap?: IMapData,\r\n    bumpScale: number,\r\n    color: Color,\r\n    emissiveMap?: IMapData,\r\n    emissiveness: Color,\r\n    map?: IMapData,\r\n    materialOutput: boolean;\r\n    name?: string,\r\n    normalMap?: IMapData,\r\n    normalScale: number,\r\n    opacity: number,\r\n    shading: MATERIAL_SHADING,\r\n    side: MATERIAL_SIDE,\r\n    threeJsObject: { [key: string]: THREE.Material };\r\n\r\n    // #endregion Properties (18)\r\n\r\n    // #region Public Methods (3)\r\n\r\n    clone(): IMaterialAbstractData;\r\n    copy(source: IMaterialAbstractData): void\r\n    reset(): void\r\n\r\n    // #endregion Public Methods (3)\r\n}"]}},"error":null,"hash":"124f536ca4fae7cf63d541ca7eedff0a","cacheData":{"env":{}}}