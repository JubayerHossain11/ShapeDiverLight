{"id":"node_modules/@shapediver/viewer/dist/implementation/viewport/lights/AbstractLightApi.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\lights\\AbstractLightApi.js.map","includedInParent":true,"mtime":1706542086539},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer\\src\\implementation\\viewport\\lights\\AbstractLightApi.ts","includedInParent":true,"mtime":1706542087154},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer\\package.json","includedInParent":true,"mtime":1706542086478},{"name":"@shapediver/viewer.shared.services","loc":{"line":16,"column":41,"index":1367},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\lights\\AbstractLightApi.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _AbstractLightApi_light, _AbstractLightApi_inputValidator, _AbstractLightApi_logger, _AbstractLightApi_viewportApi;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AbstractLightApi = void 0;\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nclass AbstractLightApi {\r\n    // #endregion Properties (15)\r\n    // #region Constructors (1)\r\n    constructor(viewportApi, light) {\r\n        // #region Properties (15)\r\n        _AbstractLightApi_light.set(this, void 0);\r\n        _AbstractLightApi_inputValidator.set(this, viewer_shared_services_1.InputValidator.instance);\r\n        _AbstractLightApi_logger.set(this, viewer_shared_services_1.Logger.instance);\r\n        _AbstractLightApi_viewportApi.set(this, void 0);\r\n        this.scope = 'AbstractLightApi';\r\n        __classPrivateFieldSet(this, _AbstractLightApi_viewportApi, viewportApi, \"f\");\r\n        __classPrivateFieldSet(this, _AbstractLightApi_light, light, \"f\");\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (12)\r\n    get color() {\r\n        return __classPrivateFieldGet(this, _AbstractLightApi_light, \"f\").color;\r\n    }\r\n    set color(value) {\r\n        const scope = 'color';\r\n        __classPrivateFieldGet(this, _AbstractLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'color');\r\n        __classPrivateFieldGet(this, _AbstractLightApi_light, \"f\").color = value;\r\n        __classPrivateFieldGet(this, _AbstractLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _AbstractLightApi_viewportApi, \"f\").update();\r\n    }\r\n    get id() {\r\n        return __classPrivateFieldGet(this, _AbstractLightApi_light, \"f\").id;\r\n    }\r\n    get intensity() {\r\n        return __classPrivateFieldGet(this, _AbstractLightApi_light, \"f\").intensity;\r\n    }\r\n    set intensity(value) {\r\n        const scope = 'intensity';\r\n        __classPrivateFieldGet(this, _AbstractLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _AbstractLightApi_light, \"f\").intensity = value;\r\n        __classPrivateFieldGet(this, _AbstractLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _AbstractLightApi_viewportApi, \"f\").update();\r\n    }\r\n    get name() {\r\n        return __classPrivateFieldGet(this, _AbstractLightApi_light, \"f\").name;\r\n    }\r\n    set name(value) {\r\n        const scope = 'name';\r\n        __classPrivateFieldGet(this, _AbstractLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'string', false);\r\n        __classPrivateFieldGet(this, _AbstractLightApi_light, \"f\").name = value;\r\n        __classPrivateFieldGet(this, _AbstractLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _AbstractLightApi_viewportApi, \"f\").update();\r\n    }\r\n    get order() {\r\n        return __classPrivateFieldGet(this, _AbstractLightApi_light, \"f\").order;\r\n    }\r\n    set order(value) {\r\n        const scope = 'order';\r\n        __classPrivateFieldGet(this, _AbstractLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number', false);\r\n        __classPrivateFieldGet(this, _AbstractLightApi_light, \"f\").order = value;\r\n        __classPrivateFieldGet(this, _AbstractLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _AbstractLightApi_viewportApi, \"f\").update();\r\n    }\r\n    get type() {\r\n        return __classPrivateFieldGet(this, _AbstractLightApi_light, \"f\").type;\r\n    }\r\n}\r\nexports.AbstractLightApi = AbstractLightApi;\r\n_AbstractLightApi_light = new WeakMap(), _AbstractLightApi_inputValidator = new WeakMap(), _AbstractLightApi_logger = new WeakMap(), _AbstractLightApi_viewportApi = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"AbstractLightApi.js","sourceRoot":"","sources":["../../../../src/implementation/viewport/lights/AbstractLightApi.ts"],"names":[],"mappings":"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","sourcesContent":["import { vec3 } from \"gl-matrix\";\r\nimport { ILight, LIGHT_TYPE } from \"@shapediver/viewer.rendering-engine.light-engine\";\r\nimport { ILightApi } from \"../../../interfaces/viewport/lights/ILightApi\";\r\nimport { InputValidator, Logger } from \"@shapediver/viewer.shared.services\";\r\nimport { IViewportApi } from \"../../../interfaces/viewport/IViewportApi\";\r\nimport { Color } from \"@shapediver/viewer.shared.types\";\r\n\r\nexport abstract class AbstractLightApi implements ILightApi {\r\n    // #region Properties (15)\r\n\r\n    readonly #light: ILight;\r\n    readonly #inputValidator: InputValidator = InputValidator.instance;\r\n    readonly #logger: Logger = Logger.instance;\r\n    readonly #viewportApi: IViewportApi;\r\n\r\n    protected scope: string = 'AbstractLightApi';\r\n\r\n    // #endregion Properties (15)\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(viewportApi: IViewportApi, light: ILight) {\r\n        this.#viewportApi = viewportApi;\r\n        this.#light = light;\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Accessors (12)\r\n\r\n    public get color(): Color {\r\n        return this.#light.color;\r\n    }\r\n\r\n    public set color(value: Color) {\r\n        const scope = 'color';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'color');\r\n        this.#light.color = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.#light.id;\r\n    }\r\n\r\n    public get intensity(): number {\r\n        return this.#light.intensity;\r\n    }\r\n\r\n    public set intensity(value: number) {\r\n        const scope = 'intensity';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#light.intensity = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get name(): string | undefined {\r\n        return this.#light.name;\r\n    }\r\n\r\n    public set name(value: string | undefined) {\r\n        const scope = 'name';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'string', false);\r\n        this.#light.name = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get order(): number | undefined {\r\n        return this.#light.order;\r\n    }\r\n\r\n    public set order(value: number | undefined) {\r\n        const scope = 'order';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number', false);\r\n        this.#light.order = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get type(): LIGHT_TYPE {\r\n        return this.#light.type;\r\n    }\r\n\r\n    // #endregion Public Accessors (12)\r\n}"]}},"error":null,"hash":"ecbfbe0e716de70fa73ea030c3153caa","cacheData":{"env":{}}}