{"id":"node_modules/@shapediver/viewer.rendering-engine.light-engine/dist/implementation/AbstractLight.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.light-engine\\dist\\implementation\\AbstractLight.js.map","includedInParent":true,"mtime":1706527152477},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.light-engine\\src\\implementation\\AbstractLight.ts","includedInParent":true,"mtime":1706527152871},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.light-engine\\package.json","includedInParent":true,"mtime":1706527152450},{"name":"@shapediver/viewer.shared.services","loc":{"line":16,"column":41,"index":1415},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.light-engine\\dist\\implementation\\AbstractLight.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.services\\dist\\index.js"},{"name":"@shapediver/viewer.shared.node-tree","loc":{"line":17,"column":42,"index":1497},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.light-engine\\dist\\implementation\\AbstractLight.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.node-tree\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _AbstractLight_type, _AbstractLight_color, _AbstractLight_intensity, _AbstractLight_name, _AbstractLight_order, _AbstractLight_useNodeData, _AbstractLight_parentNode;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AbstractLight = void 0;\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nconst viewer_shared_node_tree_1 = require(\"@shapediver/viewer.shared.node-tree\");\r\nclass AbstractLight extends viewer_shared_node_tree_1.AbstractTreeNodeData {\r\n    // #endregion Properties (6)\r\n    // #region Constructors (1)\r\n    constructor(properties) {\r\n        super(properties.id, properties.version);\r\n        // #region Properties (6)\r\n        _AbstractLight_type.set(this, void 0);\r\n        _AbstractLight_color.set(this, void 0);\r\n        _AbstractLight_intensity.set(this, void 0);\r\n        _AbstractLight_name.set(this, void 0);\r\n        _AbstractLight_order.set(this, void 0);\r\n        _AbstractLight_useNodeData.set(this, false);\r\n        _AbstractLight_parentNode.set(this, void 0);\r\n        this._uuidGenerator = viewer_shared_services_1.UuidGenerator.instance;\r\n        __classPrivateFieldSet(this, _AbstractLight_color, properties.color, \"f\");\r\n        __classPrivateFieldSet(this, _AbstractLight_intensity, properties.intensity, \"f\");\r\n        __classPrivateFieldSet(this, _AbstractLight_type, properties.type, \"f\");\r\n        __classPrivateFieldSet(this, _AbstractLight_name, properties.name, \"f\");\r\n        __classPrivateFieldSet(this, _AbstractLight_order, properties.order, \"f\");\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (9)\r\n    get color() {\r\n        return __classPrivateFieldGet(this, _AbstractLight_color, \"f\");\r\n    }\r\n    set color(value) {\r\n        __classPrivateFieldSet(this, _AbstractLight_color, value, \"f\");\r\n        this.updateVersion();\r\n        if (this.parentNode)\r\n            this.parentNode.updateVersion();\r\n    }\r\n    get intensity() {\r\n        return __classPrivateFieldGet(this, _AbstractLight_intensity, \"f\");\r\n    }\r\n    set intensity(value) {\r\n        __classPrivateFieldSet(this, _AbstractLight_intensity, value, \"f\");\r\n        this.updateVersion();\r\n        if (this.parentNode)\r\n            this.parentNode.updateVersion();\r\n    }\r\n    get name() {\r\n        return __classPrivateFieldGet(this, _AbstractLight_name, \"f\");\r\n    }\r\n    set name(value) {\r\n        __classPrivateFieldSet(this, _AbstractLight_name, value, \"f\");\r\n        this.updateVersion();\r\n        if (this.parentNode)\r\n            this.parentNode.updateVersion();\r\n    }\r\n    get order() {\r\n        return __classPrivateFieldGet(this, _AbstractLight_order, \"f\");\r\n    }\r\n    set order(value) {\r\n        __classPrivateFieldSet(this, _AbstractLight_order, value, \"f\");\r\n        this.updateVersion();\r\n        if (this.parentNode)\r\n            this.parentNode.updateVersion();\r\n    }\r\n    set parentNode(value) {\r\n        __classPrivateFieldSet(this, _AbstractLight_parentNode, value, \"f\");\r\n    }\r\n    get parentNode() {\r\n        return __classPrivateFieldGet(this, _AbstractLight_parentNode, \"f\");\r\n    }\r\n    get type() {\r\n        return __classPrivateFieldGet(this, _AbstractLight_type, \"f\");\r\n    }\r\n    set useNodeData(value) {\r\n        __classPrivateFieldSet(this, _AbstractLight_useNodeData, value, \"f\");\r\n    }\r\n    get useNodeData() {\r\n        return __classPrivateFieldGet(this, _AbstractLight_useNodeData, \"f\");\r\n    }\r\n}\r\nexports.AbstractLight = AbstractLight;\r\n_AbstractLight_type = new WeakMap(), _AbstractLight_color = new WeakMap(), _AbstractLight_intensity = new WeakMap(), _AbstractLight_name = new WeakMap(), _AbstractLight_order = new WeakMap(), _AbstractLight_useNodeData = new WeakMap(), _AbstractLight_parentNode = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"AbstractLight.js","sourceRoot":"","sources":["../../src/implementation/AbstractLight.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,+EAAkE;AAClE,iFAAqF;AAKrF,MAAsB,aAAc,SAAQ,8CAAoB;IAc5D,4BAA4B;IAE5B,2BAA2B;IAE3B,YAAY,UAQX;QACG,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;QA1B7C,yBAAyB;QAEzB,sCAA2B;QAE3B,uCAAc;QACd,2CAAmB;QACnB,sCAAe;QACf,uCAAgB;QAChB,qCAAwB,KAAK,EAAC;QAC9B,4CAAwB;QAEL,mBAAc,GAAkB,sCAAa,CAAC,QAAQ,CAAC;QAgBtE,uBAAA,IAAI,wBAAU,UAAU,CAAC,KAAK,MAAA,CAAC;QAC/B,uBAAA,IAAI,4BAAc,UAAU,CAAC,SAAS,MAAA,CAAC;QACvC,uBAAA,IAAI,uBAAS,UAAU,CAAC,IAAI,MAAA,CAAC;QAC7B,uBAAA,IAAI,uBAAS,UAAU,CAAC,IAAI,MAAA,CAAC;QAC7B,uBAAA,IAAI,wBAAU,UAAU,CAAC,KAAK,MAAA,CAAC;IACnC,CAAC;IAED,8BAA8B;IAE9B,+BAA+B;IAE/B,IAAW,KAAK;QACZ,OAAO,uBAAA,IAAI,4BAAO,CAAC;IACvB,CAAC;IAED,IAAW,KAAK,CAAC,KAAY;QACzB,uBAAA,IAAI,wBAAU,KAAK,MAAA,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAG,IAAI,CAAC,UAAU;YAAE,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;IACxD,CAAC;IAED,IAAW,SAAS;QAChB,OAAO,uBAAA,IAAI,gCAAW,CAAC;IAC3B,CAAC;IAED,IAAW,SAAS,CAAC,KAAa;QAC9B,uBAAA,IAAI,4BAAc,KAAK,MAAA,CAAC;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAG,IAAI,CAAC,UAAU;YAAE,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;IACxD,CAAC;IAED,IAAW,IAAI;QACX,OAAO,uBAAA,IAAI,2BAAM,CAAC;IACtB,CAAC;IAED,IAAW,IAAI,CAAC,KAAyB;QACrC,uBAAA,IAAI,uBAAS,KAAK,MAAA,CAAC;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAG,IAAI,CAAC,UAAU;YAAE,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;IACxD,CAAC;IAED,IAAW,KAAK;QACZ,OAAO,uBAAA,IAAI,4BAAO,CAAC;IACvB,CAAC;IAED,IAAW,KAAK,CAAC,KAAyB;QACtC,uBAAA,IAAI,wBAAU,KAAK,MAAA,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAG,IAAI,CAAC,UAAU;YAAE,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;IACxD,CAAC;IAED,IAAW,UAAU,CAAC,KAA4B;QAC9C,uBAAA,IAAI,6BAAe,KAAK,MAAA,CAAC;IAC7B,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,uBAAA,IAAI,iCAAY,CAAC;IAC5B,CAAC;IAED,IAAW,IAAI;QACX,OAAO,uBAAA,IAAI,2BAAM,CAAC;IACtB,CAAC;IAED,IAAW,WAAW,CAAC,KAAc;QACjC,uBAAA,IAAI,8BAAgB,KAAK,MAAA,CAAC;IAC9B,CAAC;IAED,IAAW,WAAW;QAClB,OAAO,uBAAA,IAAI,kCAAa,CAAC;IAC7B,CAAC;CAGJ;AApGD,sCAoGC","sourcesContent":["import { vec3 } from 'gl-matrix'\r\nimport { UuidGenerator } from '@shapediver/viewer.shared.services'\r\nimport { AbstractTreeNodeData, ITreeNode } from '@shapediver/viewer.shared.node-tree'\r\n\r\nimport { ILight, LIGHT_TYPE } from '../interface/ILight'\r\nimport { Color } from '@shapediver/viewer.shared.types'\r\n\r\nexport abstract class AbstractLight extends AbstractTreeNodeData implements ILight {\r\n    // #region Properties (6)\r\n\r\n    readonly #type: LIGHT_TYPE;\r\n\r\n    #color: Color;\r\n    #intensity: number;\r\n    #name?: string;\r\n    #order?: number;\r\n    #useNodeData: boolean = false;\r\n    #parentNode?: ITreeNode;\r\n\r\n    protected readonly _uuidGenerator: UuidGenerator = UuidGenerator.instance;\r\n\r\n    // #endregion Properties (6)\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(properties: {\r\n        color: Color,\r\n        intensity: number,\r\n        type: LIGHT_TYPE,\r\n        name?: string,\r\n        order?: number,\r\n        id?: string,\r\n        version?: string\r\n    }) {\r\n        super(properties.id, properties.version);\r\n        this.#color = properties.color;\r\n        this.#intensity = properties.intensity;\r\n        this.#type = properties.type;\r\n        this.#name = properties.name;\r\n        this.#order = properties.order;\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Accessors (9)\r\n\r\n    public get color(): Color {\r\n        return this.#color;\r\n    }\r\n\r\n    public set color(value: Color) {\r\n        this.#color = value;\r\n        this.updateVersion();\r\n        if(this.parentNode) this.parentNode.updateVersion();\r\n    }\r\n\r\n    public get intensity(): number {\r\n        return this.#intensity;\r\n    }\r\n\r\n    public set intensity(value: number) {\r\n        this.#intensity = value;\r\n        this.updateVersion();\r\n        if(this.parentNode) this.parentNode.updateVersion();\r\n    }\r\n\r\n    public get name(): string | undefined {\r\n        return this.#name;\r\n    }\r\n\r\n    public set name(value: string | undefined) {\r\n        this.#name = value;\r\n        this.updateVersion();\r\n        if(this.parentNode) this.parentNode.updateVersion();\r\n    }\r\n\r\n    public get order(): number | undefined {\r\n        return this.#order;\r\n    }\r\n\r\n    public set order(value: number | undefined) {\r\n        this.#order = value;\r\n        this.updateVersion();\r\n        if(this.parentNode) this.parentNode.updateVersion();\r\n    }\r\n\r\n    public set parentNode(value: ITreeNode | undefined) {\r\n        this.#parentNode = value;\r\n    }\r\n\r\n    public get parentNode(): ITreeNode | undefined {\r\n        return this.#parentNode;\r\n    }\r\n\r\n    public get type(): LIGHT_TYPE {\r\n        return this.#type;\r\n    }\r\n\r\n    public set useNodeData(value: boolean) {\r\n        this.#useNodeData = value;\r\n    }\r\n\r\n    public get useNodeData(): boolean {\r\n        return this.#useNodeData;\r\n    }\r\n\r\n    // #endregion Public Accessors (9)\r\n}"]}},"error":null,"hash":"c88fdb6433e9a0c3d203b83ba6b5e399","cacheData":{"env":{}}}