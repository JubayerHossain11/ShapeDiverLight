{"id":"node_modules/@shapediver/viewer.shared.types/dist/implementation/material/MaterialVariantsData.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\material\\MaterialVariantsData.js.map","includedInParent":true,"mtime":1706527152357},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.types\\src\\implementation\\material\\MaterialVariantsData.ts","includedInParent":true,"mtime":1706527153532},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.types\\package.json","includedInParent":true,"mtime":1706527150980},{"name":"@shapediver/viewer.shared.node-tree","loc":{"line":16,"column":42,"index":1360},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\material\\MaterialVariantsData.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.node-tree\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _MaterialVariantsData_variants, _MaterialVariantsData_geometryData, _MaterialVariantsData_variantIndex;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MaterialVariantsData = void 0;\r\nconst viewer_shared_node_tree_1 = require(\"@shapediver/viewer.shared.node-tree\");\r\nclass MaterialVariantsData extends viewer_shared_node_tree_1.AbstractTreeNodeData {\r\n    // #endregion Properties (1)\r\n    // #region Constructors (1)\r\n    constructor(id, version) {\r\n        super(id, version);\r\n        // #region Properties (1)\r\n        _MaterialVariantsData_variants.set(this, []);\r\n        _MaterialVariantsData_geometryData.set(this, []);\r\n        _MaterialVariantsData_variantIndex.set(this, void 0);\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (2)\r\n    get geometryData() {\r\n        return __classPrivateFieldGet(this, _MaterialVariantsData_geometryData, \"f\");\r\n    }\r\n    get variants() {\r\n        return __classPrivateFieldGet(this, _MaterialVariantsData_variants, \"f\");\r\n    }\r\n    get variantIndex() {\r\n        return __classPrivateFieldGet(this, _MaterialVariantsData_variantIndex, \"f\");\r\n    }\r\n    set variantIndex(value) {\r\n        __classPrivateFieldSet(this, _MaterialVariantsData_variantIndex, value, \"f\");\r\n        for (let i = 0; i < this.geometryData.length; i++) {\r\n            const variant = this.geometryData[i].materialVariants.find(v => v.variant === __classPrivateFieldGet(this, _MaterialVariantsData_variantIndex, \"f\"));\r\n            if (variant) {\r\n                this.geometryData[i].material = variant.material;\r\n            }\r\n            else {\r\n                this.geometryData[i].material = this.geometryData[i].standardMaterial;\r\n            }\r\n        }\r\n    }\r\n    // #endregion Public Accessors (2)\r\n    // #region Public Methods (1)\r\n    /**\r\n     * Clones the scene graph data.\r\n     */\r\n    clone() {\r\n        return new MaterialVariantsData(this.id, this.version);\r\n    }\r\n}\r\nexports.MaterialVariantsData = MaterialVariantsData;\r\n_MaterialVariantsData_variants = new WeakMap(), _MaterialVariantsData_geometryData = new WeakMap(), _MaterialVariantsData_variantIndex = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"MaterialVariantsData.js","sourceRoot":"","sources":["../../../src/implementation/material/MaterialVariantsData.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,iFAAyF;AAIzF,MAAa,oBAAqB,SAAQ,8CAAoB;IAO1D,4BAA4B;IAE5B,2BAA2B;IAE3B,YAAY,EAAW,EAAE,OAAgB;QACrC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QAXvB,yBAAyB;QAEzB,yCAA+B,EAAE,EAAC;QAClC,6CAAyC,EAAE,EAAC;QAC5C,qDAAuB;IAQvB,CAAC;IAED,8BAA8B;IAE9B,+BAA+B;IAE/B,IAAW,YAAY;QACnB,OAAO,uBAAA,IAAI,0CAAc,CAAC;IAC9B,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,uBAAA,IAAI,sCAAU,CAAC;IAC1B,CAAC;IAED,IAAW,YAAY;QACnB,OAAO,uBAAA,IAAI,0CAAc,CAAC;IAC9B,CAAC;IAED,IAAW,YAAY,CAAC,KAAyB;QAC7C,uBAAA,IAAI,sCAAiB,KAAK,MAAA,CAAC;QAC3B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,uBAAA,IAAI,0CAAc,CAAC,CAAC;YAClG,IAAG,OAAO,EAAE;gBACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;aACpD;iBAAM;gBACH,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;aACzE;SACJ;IACL,CAAC;IAED,kCAAkC;IAElC,6BAA6B;IAE7B;;OAEG;IACI,KAAK;QACR,OAAO,IAAI,oBAAoB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3D,CAAC;CAGJ;AAvDD,oDAuDC","sourcesContent":["import { AbstractTreeNodeData, ITreeNodeData } from '@shapediver/viewer.shared.node-tree'\r\nimport { IMaterialVariantsData } from '../../interfaces/data/material/IMaterialVariantsData';\r\nimport { GeometryData, PrimitiveData } from '../data/GeometryData';\r\n\r\nexport class MaterialVariantsData extends AbstractTreeNodeData implements IMaterialVariantsData {\r\n    // #region Properties (1)\r\n\r\n    readonly #variants: string[] = [];\r\n    readonly #geometryData: GeometryData[] = [];\r\n    #variantIndex?: number;\r\n\r\n    // #endregion Properties (1)\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(id?: string, version?: string) {\r\n        super(id, version);\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Accessors (2)\r\n\r\n    public get geometryData(): GeometryData[] {\r\n        return this.#geometryData;\r\n    }\r\n\r\n    public get variants(): string[] {\r\n        return this.#variants;\r\n    }\r\n\r\n    public get variantIndex(): number | undefined {\r\n        return this.#variantIndex;\r\n    }\r\n\r\n    public set variantIndex(value: number | undefined) {\r\n        this.#variantIndex = value;\r\n        for(let i = 0; i < this.geometryData.length; i++) {            \r\n            const variant = this.geometryData[i].materialVariants.find(v => v.variant === this.#variantIndex);\r\n            if(variant) {\r\n                this.geometryData[i].material = variant.material;\r\n            } else {\r\n                this.geometryData[i].material = this.geometryData[i].standardMaterial;\r\n            }\r\n        }\r\n    }\r\n\r\n    // #endregion Public Accessors (2)\r\n\r\n    // #region Public Methods (1)\r\n\r\n    /**\r\n     * Clones the scene graph data.\r\n     */\r\n    public clone(): IMaterialVariantsData {\r\n        return new MaterialVariantsData(this.id, this.version);\r\n    }\r\n\r\n    // #endregion Public Methods (1)\r\n}\r\n"]}},"error":null,"hash":"5696f91699eba8242811e8948365675a","cacheData":{"env":{}}}