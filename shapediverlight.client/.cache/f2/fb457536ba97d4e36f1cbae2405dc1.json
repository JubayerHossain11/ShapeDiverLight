{"id":"node_modules/@shapediver/viewer.shared.services/dist/system-info/SystemInfo.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\system-info\\SystemInfo.js.map","includedInParent":true,"mtime":1706542086620},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\src\\system-info\\SystemInfo.ts","includedInParent":true,"mtime":1706542087016},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\package.json","includedInParent":true,"mtime":1706542085933},{"name":"ua-parser-js","loc":{"line":7,"column":47,"index":298},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\system-info\\SystemInfo.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\ua-parser-js\\src\\ua-parser.js"}],"generated":{"js":"\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SystemInfo = void 0;\r\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\r\nclass SystemInfo {\r\n    // #endregion Properties (5)\r\n    // #region Constructors (1)\r\n    constructor() {\r\n        this._parser = new ua_parser_js_1.default();\r\n        const isInternetExplorer = typeof window !== 'undefined' && window.navigator && window.navigator.userAgent.indexOf('Trident') > -1;\r\n        this._isBrowser = isInternetExplorer ||\r\n            (typeof document !== 'undefined'\r\n                && typeof document.getElementById === 'function'\r\n                && window\r\n                && typeof window.Event === 'function');\r\n        this._isIframe = false;\r\n        if (this._isBrowser) {\r\n            // in case we are running in an iframe, parent and window are different, in\r\n            // that case we use the referrer\r\n            this._isIframe = parent !== window;\r\n            this._origin = this._isIframe ? document.referrer : window.location.origin;\r\n        }\r\n        else {\r\n            this._origin = 'direct';\r\n        }\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Static Accessors (1)\r\n    static get instance() {\r\n        return this._instance || (this._instance = new this());\r\n    }\r\n    // #endregion Public Static Accessors (1)\r\n    // #region Public Accessors (11)\r\n    /**\r\n     * Check if we are on an Android device\r\n     */\r\n    get isAndroid() {\r\n        const osName = this._parser.getOS().name;\r\n        return osName === 'Android';\r\n    }\r\n    /**\r\n     * Check if we are running in a browser\r\n     */\r\n    get isBrowser() {\r\n        return this._isBrowser;\r\n    }\r\n    /**\r\n     * Check if we are running in Safari\r\n     */\r\n    get isChrome() {\r\n        const browserName = this._parser.getBrowser().name;\r\n        return !!(browserName && browserName.includes('Chrome'));\r\n    }\r\n    /**\r\n     * Check if we are running in Firefox\r\n     */\r\n    get isFirefox() {\r\n        const browserName = this._parser.getBrowser().name;\r\n        return !!(browserName && browserName.includes('Firefox'));\r\n    }\r\n    /**\r\n     * Check if we are running in internet explorer (arrrggghhhh!!!!)\r\n     */\r\n    get isIE() {\r\n        const browserName = this._parser.getBrowser().name;\r\n        return !!(browserName && browserName.includes('IE'));\r\n    }\r\n    /**\r\n     * Check if we are on an IOS device\r\n     */\r\n    get isIOS() {\r\n        const osName = this._parser.getOS().name;\r\n        return osName === 'iOS' ||\r\n            (window.navigator && window.navigator.maxTouchPoints === 5 && window.navigator.platform === 'MacIntel');\r\n    }\r\n    /**\r\n     * Check if we are running in an iframe\r\n     */\r\n    get isIframe() {\r\n        return this._isIframe;\r\n    }\r\n    /**\r\n     * Check if we are running in an instagram browser\r\n     */\r\n    get isInstagram() {\r\n        return this._parser.getBrowser().name === \"Instagram\";\r\n    }\r\n    /**\r\n     * Check if we are on a Mac OS device\r\n     */\r\n    get isMacOS() {\r\n        const osName = this._parser.getOS().name;\r\n        return osName === 'Mac OS';\r\n    }\r\n    /**\r\n     * Check if we are on a mobile device\r\n     */\r\n    get isMobile() {\r\n        const type = this._parser.getDevice().type;\r\n        return type === 'mobile' || type === 'tablet';\r\n    }\r\n    /**\r\n     * Check if we are running in Safari\r\n     */\r\n    get isSafari() {\r\n        const browserName = this._parser.getBrowser().name;\r\n        return !!(browserName && browserName.includes('Safari'));\r\n    }\r\n    /**\r\n     * Get guessed origin of embedding website\r\n     */\r\n    get origin() {\r\n        return this._origin + '';\r\n    }\r\n}\r\nexports.SystemInfo = SystemInfo;\r\n"},"sourceMaps":{"js":{"version":3,"file":"SystemInfo.js","sourceRoot":"","sources":["../../src/system-info/SystemInfo.ts"],"names":[],"mappings":"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","sourcesContent":["import UAParser from 'ua-parser-js';\r\n\r\nexport class SystemInfo {\r\n    // #region Properties (5)\r\n\r\n    private readonly _isBrowser: boolean;\r\n    private readonly _isIframe: boolean;\r\n    private readonly _origin: string;\r\n    private readonly _parser: UAParser;\r\n\r\n    private static _instance: SystemInfo;\r\n\r\n    // #endregion Properties (5)\r\n\r\n    // #region Constructors (1)\r\n\r\n    private constructor() {\r\n        this._parser = new UAParser();\r\n        const isInternetExplorer = typeof window !== 'undefined' && window.navigator && window.navigator.userAgent.indexOf('Trident') > -1;\r\n        this._isBrowser = isInternetExplorer ||\r\n            (typeof document !== 'undefined'\r\n                && typeof document.getElementById === 'function'\r\n                && window\r\n                && typeof window.Event === 'function'\r\n            );\r\n        this._isIframe = false;\r\n        if (this._isBrowser) {\r\n            // in case we are running in an iframe, parent and window are different, in\r\n            // that case we use the referrer\r\n            this._isIframe = parent !== window;\r\n            this._origin = this._isIframe ? document.referrer : window.location.origin;\r\n        } else {\r\n            this._origin = 'direct';\r\n        }\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Static Accessors (1)\r\n\r\n    public static get instance() {\r\n        return this._instance || (this._instance = new this());\r\n    }\r\n\r\n    // #endregion Public Static Accessors (1)\r\n\r\n    // #region Public Accessors (11)\r\n\r\n    /**\r\n     * Check if we are on an Android device\r\n     */\r\n    public get isAndroid(): boolean {\r\n        const osName = this._parser.getOS().name;\r\n        return osName === 'Android';\r\n    }\r\n\r\n    /**\r\n     * Check if we are running in a browser\r\n     */\r\n    public get isBrowser(): boolean {\r\n        return this._isBrowser;\r\n    }\r\n\r\n    /**\r\n     * Check if we are running in Safari\r\n     */\r\n    public get isChrome(): boolean {\r\n        const browserName = this._parser.getBrowser().name;\r\n        return !!(browserName && browserName.includes('Chrome'));\r\n    }\r\n\r\n    /**\r\n     * Check if we are running in Firefox\r\n     */\r\n    public get isFirefox(): boolean {\r\n        const browserName = this._parser.getBrowser().name;\r\n        return !!(browserName && browserName.includes('Firefox'));\r\n    }\r\n\r\n    /**\r\n     * Check if we are running in internet explorer (arrrggghhhh!!!!)\r\n     */\r\n    public get isIE(): boolean {\r\n        const browserName = this._parser.getBrowser().name;\r\n        return !!(browserName && browserName.includes('IE'));\r\n    }\r\n\r\n    /**\r\n     * Check if we are on an IOS device\r\n     */\r\n    public get isIOS(): boolean {\r\n        const osName = this._parser.getOS().name;\r\n        return osName === 'iOS' || \r\n        (window.navigator && window.navigator.maxTouchPoints === 5 && window.navigator.platform === 'MacIntel');\r\n    }\r\n\r\n    /**\r\n     * Check if we are running in an iframe\r\n     */\r\n    public get isIframe(): boolean {\r\n        return this._isIframe;\r\n    }\r\n\r\n    /**\r\n     * Check if we are running in an instagram browser\r\n     */\r\n    public get isInstagram(): boolean {\r\n        return this._parser.getBrowser().name === \"Instagram\";\r\n    }\r\n\r\n    /**\r\n     * Check if we are on a Mac OS device\r\n     */\r\n    public get isMacOS(): boolean {\r\n        const osName = this._parser.getOS().name;\r\n        return osName === 'Mac OS';\r\n    }\r\n\r\n    /**\r\n     * Check if we are on a mobile device\r\n     */\r\n    public get isMobile(): boolean {\r\n        const type = this._parser.getDevice().type;\r\n        return type === 'mobile' || type === 'tablet';\r\n    }\r\n\r\n    /**\r\n     * Check if we are running in Safari\r\n     */\r\n    public get isSafari(): boolean {\r\n        const browserName = this._parser.getBrowser().name;\r\n        return !!(browserName && browserName.includes('Safari'));\r\n    }\r\n\r\n    /**\r\n     * Get guessed origin of embedding website\r\n     */\r\n    public get origin(): string {\r\n        return this._origin + '';\r\n    }\r\n\r\n    // #endregion Public Accessors (11)\r\n}"]}},"error":null,"hash":"76dc57861ad9142dbc729af7f935e656","cacheData":{"env":{}}}