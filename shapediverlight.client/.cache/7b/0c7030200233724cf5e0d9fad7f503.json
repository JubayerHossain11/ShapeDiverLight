{"id":"node_modules/@shapediver/viewer.session-engine.session-engine/dist/implementation/dto/Output.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.session-engine.session-engine\\dist\\implementation\\dto\\Output.js.map","includedInParent":true,"mtime":1706527152548},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.session-engine.session-engine\\src\\implementation\\dto\\Output.ts","includedInParent":true,"mtime":1706527153161},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.session-engine.session-engine\\package.json","includedInParent":true,"mtime":1706527152247},{"name":"@shapediver/viewer.shared.services","loc":{"line":25,"column":41,"index":2347},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.session-engine.session-engine\\dist\\implementation\\dto\\Output.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.services\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _Output_id, _Output_inputValidator, _Output_logger, _Output_name, _Output_sessionEngine, _Output_uuidGenerator, _Output_bbmax, _Output_bbmin, _Output_chunks, _Output_content, _Output_delay, _Output_dependency, _Output_displayname, _Output_hidden, _Output_material, _Output_msg, _Output_order, _Output_status_collect, _Output_status_computation, _Output_tooltip, _Output_uid, _Output_updateCallback, _Output_version;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Output = void 0;\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nclass Output {\r\n    // #endregion Properties (23)\r\n    // #region Constructors (1)\r\n    constructor(outputDef, sessionEngine) {\r\n        // #region Properties (23)\r\n        _Output_id.set(this, void 0);\r\n        _Output_inputValidator.set(this, viewer_shared_services_1.InputValidator.instance);\r\n        _Output_logger.set(this, viewer_shared_services_1.Logger.instance);\r\n        _Output_name.set(this, void 0);\r\n        _Output_sessionEngine.set(this, void 0);\r\n        _Output_uuidGenerator.set(this, viewer_shared_services_1.UuidGenerator.instance);\r\n        _Output_bbmax.set(this, void 0);\r\n        _Output_bbmin.set(this, void 0);\r\n        _Output_chunks.set(this, void 0);\r\n        _Output_content.set(this, void 0);\r\n        _Output_delay.set(this, void 0);\r\n        _Output_dependency.set(this, void 0);\r\n        _Output_displayname.set(this, void 0);\r\n        _Output_hidden.set(this, false);\r\n        _Output_material.set(this, void 0);\r\n        _Output_msg.set(this, void 0);\r\n        _Output_order.set(this, void 0);\r\n        _Output_status_collect.set(this, void 0);\r\n        _Output_status_computation.set(this, void 0);\r\n        _Output_tooltip.set(this, void 0);\r\n        _Output_uid.set(this, void 0);\r\n        _Output_updateCallback.set(this, null);\r\n        _Output_version.set(this, void 0);\r\n        __classPrivateFieldSet(this, _Output_sessionEngine, sessionEngine, \"f\");\r\n        __classPrivateFieldSet(this, _Output_id, outputDef.id, \"f\");\r\n        __classPrivateFieldSet(this, _Output_name, outputDef.name, \"f\");\r\n        __classPrivateFieldSet(this, _Output_version, outputDef.version, \"f\");\r\n        this.updateOutputDefinition(outputDef);\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (28)\r\n    get bbmax() {\r\n        return __classPrivateFieldGet(this, _Output_bbmax, \"f\");\r\n    }\r\n    get bbmin() {\r\n        return __classPrivateFieldGet(this, _Output_bbmin, \"f\");\r\n    }\r\n    get chunks() {\r\n        return __classPrivateFieldGet(this, _Output_chunks, \"f\");\r\n    }\r\n    get content() {\r\n        return __classPrivateFieldGet(this, _Output_content, \"f\");\r\n    }\r\n    set content(value) {\r\n        __classPrivateFieldSet(this, _Output_content, value, \"f\");\r\n    }\r\n    get delay() {\r\n        return __classPrivateFieldGet(this, _Output_delay, \"f\");\r\n    }\r\n    get dependency() {\r\n        return __classPrivateFieldGet(this, _Output_dependency, \"f\");\r\n    }\r\n    get displayname() {\r\n        return __classPrivateFieldGet(this, _Output_displayname, \"f\");\r\n    }\r\n    set displayname(value) {\r\n        __classPrivateFieldSet(this, _Output_displayname, value, \"f\");\r\n    }\r\n    get format() {\r\n        return __classPrivateFieldGet(this, _Output_content, \"f\") ? __classPrivateFieldGet(this, _Output_content, \"f\").map(c => c.format) : [];\r\n    }\r\n    get freeze() {\r\n        return __classPrivateFieldGet(this, _Output_sessionEngine, \"f\").outputsFreeze[__classPrivateFieldGet(this, _Output_id, \"f\")];\r\n    }\r\n    set freeze(value) {\r\n        __classPrivateFieldGet(this, _Output_sessionEngine, \"f\").outputsFreeze[__classPrivateFieldGet(this, _Output_id, \"f\")] = value;\r\n    }\r\n    get hidden() {\r\n        return __classPrivateFieldGet(this, _Output_hidden, \"f\");\r\n    }\r\n    set hidden(value) {\r\n        __classPrivateFieldSet(this, _Output_hidden, value, \"f\");\r\n    }\r\n    get id() {\r\n        return __classPrivateFieldGet(this, _Output_id, \"f\");\r\n    }\r\n    get material() {\r\n        return __classPrivateFieldGet(this, _Output_material, \"f\");\r\n    }\r\n    get msg() {\r\n        return __classPrivateFieldGet(this, _Output_msg, \"f\");\r\n    }\r\n    get name() {\r\n        return __classPrivateFieldGet(this, _Output_name, \"f\");\r\n    }\r\n    get node() {\r\n        return __classPrivateFieldGet(this, _Output_sessionEngine, \"f\").node.children.find(c => c.name === this.id);\r\n    }\r\n    get order() {\r\n        return __classPrivateFieldGet(this, _Output_order, \"f\");\r\n    }\r\n    set order(value) {\r\n        __classPrivateFieldSet(this, _Output_order, value, \"f\");\r\n    }\r\n    get status_collect() {\r\n        return __classPrivateFieldGet(this, _Output_status_collect, \"f\");\r\n    }\r\n    get status_computation() {\r\n        return __classPrivateFieldGet(this, _Output_status_computation, \"f\");\r\n    }\r\n    get tooltip() {\r\n        return __classPrivateFieldGet(this, _Output_tooltip, \"f\");\r\n    }\r\n    set tooltip(value) {\r\n        __classPrivateFieldSet(this, _Output_tooltip, value, \"f\");\r\n    }\r\n    get uid() {\r\n        return __classPrivateFieldGet(this, _Output_uid, \"f\");\r\n    }\r\n    get updateCallback() {\r\n        return __classPrivateFieldGet(this, _Output_updateCallback, \"f\");\r\n    }\r\n    set updateCallback(value) {\r\n        __classPrivateFieldSet(this, _Output_updateCallback, value, \"f\");\r\n    }\r\n    get version() {\r\n        return __classPrivateFieldGet(this, _Output_version, \"f\");\r\n    }\r\n    set version(value) {\r\n        __classPrivateFieldSet(this, _Output_version, value, \"f\");\r\n    }\r\n    // #endregion Public Accessors (28)\r\n    // #region Public Methods (3)\r\n    updateOutput(newNode, oldNode) {\r\n        const outputDef = __classPrivateFieldGet(this, _Output_sessionEngine, \"f\").outputs[this.id];\r\n        this.updateOutputDefinition(outputDef);\r\n        // add chunk nodes\r\n        if (this.chunks && newNode) {\r\n            for (let i = 0; i < newNode.children.length; i++) {\r\n                for (let j = 0; j < this.chunks.length; j++) {\r\n                    this.chunks[j].node = newNode.children[i].children.find(child => child.name === this.chunks[j].id);\r\n                }\r\n            }\r\n        }\r\n        if (__classPrivateFieldGet(this, _Output_updateCallback, \"f\"))\r\n            __classPrivateFieldGet(this, _Output_updateCallback, \"f\").call(this, newNode, oldNode);\r\n    }\r\n    updateOutputContent(outputContent, preventUpdate = false) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            __classPrivateFieldGet(this, _Output_sessionEngine, \"f\").outputs[this.id].content = outputContent;\r\n            __classPrivateFieldGet(this, _Output_sessionEngine, \"f\").outputs[this.id].version = __classPrivateFieldGet(this, _Output_uuidGenerator, \"f\").create();\r\n            if (!preventUpdate)\r\n                yield __classPrivateFieldGet(this, _Output_sessionEngine, \"f\").updateOutputs();\r\n            return this.node;\r\n        });\r\n    }\r\n    updateOutputDefinition(outputDef) {\r\n        __classPrivateFieldSet(this, _Output_dependency, outputDef.dependency, \"f\");\r\n        __classPrivateFieldSet(this, _Output_uid, outputDef.uid, \"f\");\r\n        __classPrivateFieldSet(this, _Output_material, outputDef.material, \"f\");\r\n        __classPrivateFieldSet(this, _Output_chunks, outputDef.chunks, \"f\");\r\n        __classPrivateFieldSet(this, _Output_msg, outputDef.msg, \"f\");\r\n        if (__classPrivateFieldGet(this, _Output_msg, \"f\") !== undefined)\r\n            __classPrivateFieldGet(this, _Output_logger, \"f\").warn(`Output(${this.id}): ${__classPrivateFieldGet(this, _Output_msg, \"f\")}`);\r\n        __classPrivateFieldSet(this, _Output_bbmin, outputDef.bbmin, \"f\");\r\n        __classPrivateFieldSet(this, _Output_bbmax, outputDef.bbmax, \"f\");\r\n        __classPrivateFieldSet(this, _Output_status_computation, outputDef.status_computation, \"f\");\r\n        __classPrivateFieldSet(this, _Output_status_collect, outputDef.status_collect, \"f\");\r\n        __classPrivateFieldSet(this, _Output_content, outputDef.content, \"f\");\r\n        __classPrivateFieldSet(this, _Output_delay, outputDef.delay, \"f\");\r\n        __classPrivateFieldSet(this, _Output_version, outputDef.version, \"f\");\r\n        __classPrivateFieldSet(this, _Output_displayname, outputDef.displayname, \"f\");\r\n        __classPrivateFieldSet(this, _Output_order, outputDef.order, \"f\");\r\n        __classPrivateFieldSet(this, _Output_hidden, outputDef.hidden, \"f\");\r\n    }\r\n}\r\nexports.Output = Output;\r\n_Output_id = new WeakMap(), _Output_inputValidator = new WeakMap(), _Output_logger = new WeakMap(), _Output_name = new WeakMap(), _Output_sessionEngine = new WeakMap(), _Output_uuidGenerator = new WeakMap(), _Output_bbmax = new WeakMap(), _Output_bbmin = new WeakMap(), _Output_chunks = new WeakMap(), _Output_content = new WeakMap(), _Output_delay = new WeakMap(), _Output_dependency = new WeakMap(), _Output_displayname = new WeakMap(), _Output_hidden = new WeakMap(), _Output_material = new WeakMap(), _Output_msg = new WeakMap(), _Output_order = new WeakMap(), _Output_status_collect = new WeakMap(), _Output_status_computation = new WeakMap(), _Output_tooltip = new WeakMap(), _Output_uid = new WeakMap(), _Output_updateCallback = new WeakMap(), _Output_version = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"Output.js","sourceRoot":"","sources":["../../../src/implementation/dto/Output.ts"],"names":[],"mappings":"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","sourcesContent":["import { ShapeDiverResponseModelComputationStatus, ShapeDiverResponseOutput } from \"@shapediver/sdk.geometry-api-sdk-v2\";\r\nimport { ITreeNode, TreeNode } from \"@shapediver/viewer.shared.node-tree\";\r\nimport { InputValidator, UuidGenerator, Logger } from \"@shapediver/viewer.shared.services\";\r\nimport { IOutput, ShapeDiverResponseOutputContent, ShapeDiverResponseOutputChunk } from \"../../interfaces/dto/IOutput\";\r\nimport { SessionEngine } from \"../SessionEngine\";\r\n\r\nexport class Output implements IOutput {\r\n  // #region Properties (23)\r\n\r\n  readonly #id: string;\r\n  readonly #inputValidator: InputValidator = InputValidator.instance;\r\n  readonly #logger: Logger = Logger.instance;\r\n  readonly #name: string;\r\n  readonly #sessionEngine: SessionEngine;\r\n  readonly #uuidGenerator: UuidGenerator = UuidGenerator.instance;\r\n\r\n  #bbmax?: number[];\r\n  #bbmin?: number[];\r\n  #chunks?: ShapeDiverResponseOutputChunk[];\r\n  #content?: ShapeDiverResponseOutputContent[];\r\n  #delay?: number;\r\n  #dependency!: string[];\r\n  #displayname?: string;\r\n  #hidden: boolean = false;\r\n  #material?: string;\r\n  #msg?: string;\r\n  #order?: number;\r\n  #status_collect?: ShapeDiverResponseModelComputationStatus;\r\n  #status_computation?: ShapeDiverResponseModelComputationStatus;\r\n  #tooltip?: string;\r\n  #uid?: string;\r\n  #updateCallback: ((newNode?: ITreeNode, oldNode?: ITreeNode) => void) | null = null;\r\n  #version: string;\r\n\r\n  // #endregion Properties (23)\r\n\r\n  // #region Constructors (1)\r\n\r\n  constructor(outputDef: ShapeDiverResponseOutput, sessionEngine: SessionEngine) {\r\n    this.#sessionEngine = sessionEngine;\r\n\r\n    this.#id = outputDef.id;\r\n    this.#name = outputDef.name;\r\n    this.#version = outputDef.version;\r\n    this.updateOutputDefinition(outputDef);\r\n  }\r\n\r\n  // #endregion Constructors (1)\r\n\r\n  // #region Public Accessors (28)\r\n\r\n  public get bbmax(): number[] | undefined {\r\n    return this.#bbmax;\r\n  }\r\n\r\n  public get bbmin(): number[] | undefined {\r\n    return this.#bbmin;\r\n  }\r\n\r\n  public get chunks(): ShapeDiverResponseOutputChunk[] | undefined {\r\n    return this.#chunks;\r\n  }\r\n\r\n  public get content(): ShapeDiverResponseOutputContent[] | undefined {\r\n    return this.#content;\r\n  }\r\n\r\n  public set content(value: ShapeDiverResponseOutputContent[] | undefined) {\r\n    this.#content = value;\r\n  }\r\n\r\n  public get delay(): number | undefined {\r\n    return this.#delay;\r\n  }\r\n\r\n  public get dependency(): string[] {\r\n    return this.#dependency;\r\n  }\r\n\r\n  public get displayname(): string | undefined {\r\n    return this.#displayname;\r\n  }\r\n\r\n  public set displayname(value: string | undefined) {\r\n    this.#displayname = value;\r\n  }\r\n\r\n  public get format(): string[] {\r\n    return this.#content ? this.#content.map(c => c.format) : [];\r\n  }\r\n\r\n  public get freeze(): boolean {\r\n    return this.#sessionEngine.outputsFreeze[this.#id];\r\n  }\r\n\r\n  public set freeze(value: boolean) {\r\n    this.#sessionEngine.outputsFreeze[this.#id] = value;\r\n  }\r\n\r\n  public get hidden(): boolean {\r\n    return this.#hidden;\r\n  }\r\n\r\n  public set hidden(value: boolean) {\r\n    this.#hidden = value;\r\n  }\r\n\r\n  public get id(): string {\r\n    return this.#id;\r\n  }\r\n\r\n  public get material(): string | undefined {\r\n    return this.#material;\r\n  }\r\n\r\n  public get msg(): string | undefined {\r\n    return this.#msg;\r\n  }\r\n\r\n  public get name(): string {\r\n    return this.#name;\r\n  }\r\n\r\n  public get node(): ITreeNode {\r\n    return this.#sessionEngine.node.children.find(c => c.name === this.id)!;\r\n  }\r\n\r\n  public get order(): number | undefined {\r\n    return this.#order;\r\n  }\r\n\r\n  public set order(value: number | undefined) {\r\n    this.#order = value;\r\n  }\r\n\r\n  public get status_collect(): ShapeDiverResponseModelComputationStatus | undefined {\r\n    return this.#status_collect;\r\n  }\r\n\r\n  public get status_computation(): ShapeDiverResponseModelComputationStatus | undefined {\r\n    return this.#status_computation;\r\n  }\r\n\r\n  public get tooltip(): string | undefined {\r\n    return this.#tooltip;\r\n  }\r\n\r\n  public set tooltip(value: string | undefined) {\r\n    this.#tooltip = value;\r\n  }\r\n\r\n  public get uid(): string | undefined {\r\n    return this.#uid;\r\n  }\r\n\r\n  public get updateCallback(): ((newNode?: ITreeNode, oldNode?: ITreeNode) => void) | null {\r\n    return this.#updateCallback;\r\n  }\r\n\r\n  public set updateCallback(value: ((newNode?: ITreeNode, oldNode?: ITreeNode) => void) | null) {\r\n    this.#updateCallback = value;\r\n  }\r\n\r\n  public get version(): string {\r\n    return this.#version;\r\n  }\r\n\r\n  public set version(value: string) {\r\n    this.#version = value;\r\n  }\r\n\r\n  // #endregion Public Accessors (28)\r\n\r\n  // #region Public Methods (3)\r\n\r\n  public updateOutput(newNode?: TreeNode, oldNode?: TreeNode) {\r\n    const outputDef = this.#sessionEngine.outputs[this.id];\r\n    this.updateOutputDefinition(outputDef);\r\n\r\n    // add chunk nodes\r\n    if (this.chunks && newNode) {\r\n      for (let i = 0; i < newNode.children.length; i++) {\r\n        for (let j = 0; j < this.chunks.length; j++) {\r\n          this.chunks[j].node = newNode.children[i].children.find(child => child.name === this.chunks![j].id);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.#updateCallback) this.#updateCallback(newNode, oldNode);\r\n  }\r\n\r\n  public async updateOutputContent(outputContent: ShapeDiverResponseOutputContent[], preventUpdate: boolean = false): Promise<ITreeNode | undefined> {\r\n    this.#sessionEngine.outputs[this.id].content = outputContent;\r\n    this.#sessionEngine.outputs[this.id].version = this.#uuidGenerator.create();\r\n    if (!preventUpdate) await this.#sessionEngine.updateOutputs();\r\n    return this.node;\r\n  }\r\n\r\n  public updateOutputDefinition(outputDef: ShapeDiverResponseOutput) {\r\n    this.#dependency = outputDef.dependency;\r\n    this.#uid = outputDef.uid;\r\n    this.#material = outputDef.material;\r\n    this.#chunks = outputDef.chunks;\r\n    this.#msg = outputDef.msg;\r\n    if (this.#msg !== undefined)\r\n      this.#logger.warn(`Output(${this.id}): ${this.#msg}`);\r\n    this.#bbmin = outputDef.bbmin;\r\n    this.#bbmax = outputDef.bbmax;\r\n    this.#status_computation = outputDef.status_computation;\r\n    this.#status_collect = outputDef.status_collect;\r\n    this.#content = outputDef.content;\r\n    this.#delay = outputDef.delay;\r\n    this.#version = outputDef.version;\r\n    this.#displayname = outputDef.displayname;\r\n    this.#order = outputDef.order;\r\n    this.#hidden = outputDef.hidden;\r\n  }\r\n\r\n  // #endregion Public Methods (3)\r\n}"]}},"error":null,"hash":"c7626c9426b9009bb595cfb6ac3d6dbd","cacheData":{"env":{}}}