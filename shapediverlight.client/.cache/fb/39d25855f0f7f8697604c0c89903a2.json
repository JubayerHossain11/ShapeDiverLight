{"id":"node_modules/@shapediver/viewer.shared.node-tree/dist/implementation/three/TreeNodeThreejs.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.node-tree\\dist\\implementation\\three\\TreeNodeThreejs.js.map","includedInParent":true,"mtime":1706542086148},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.node-tree\\src\\implementation\\three\\TreeNodeThreejs.ts","includedInParent":true,"mtime":1706542086578},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.node-tree\\package.json","includedInParent":true,"mtime":1706542085155},{"name":"../AbstractTreeNode","loc":{"line":16,"column":35,"index":1322},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.node-tree\\dist\\implementation\\three\\TreeNodeThreejs.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.node-tree\\dist\\implementation\\AbstractTreeNode.js"}],"generated":{"js":"\"use strict\";\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _TreeNodeThreeJs_threeJsObject, _TreeNodeThreeJs_updateCallbackThreeJsObject;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TreeNodeThreeJs = void 0;\r\nconst AbstractTreeNode_1 = require(\"../AbstractTreeNode\");\r\nclass TreeNodeThreeJs extends AbstractTreeNode_1.AbstractTreeNode {\r\n    constructor() {\r\n        super(...arguments);\r\n        _TreeNodeThreeJs_threeJsObject.set(this, {});\r\n        _TreeNodeThreeJs_updateCallbackThreeJsObject.set(this, null);\r\n    }\r\n    get threeJsObject() {\r\n        return __classPrivateFieldGet(this, _TreeNodeThreeJs_threeJsObject, \"f\");\r\n    }\r\n    get updateCallbackThreeJsObject() {\r\n        return __classPrivateFieldGet(this, _TreeNodeThreeJs_updateCallbackThreeJsObject, \"f\");\r\n    }\r\n    set updateCallbackThreeJsObject(value) {\r\n        __classPrivateFieldSet(this, _TreeNodeThreeJs_updateCallbackThreeJsObject, value, \"f\");\r\n    }\r\n}\r\nexports.TreeNodeThreeJs = TreeNodeThreeJs;\r\n_TreeNodeThreeJs_threeJsObject = new WeakMap(), _TreeNodeThreeJs_updateCallbackThreeJsObject = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"TreeNodeThreejs.js","sourceRoot":"","sources":["../../../src/implementation/three/TreeNodeThreejs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA,0DAAuD;AAGvD,MAAa,eAAgB,SAAQ,mCAAwD;IAA7F;;QACI,yCAAoD,EAAE,EAAC;QACvD,uDAAoH,IAAI,EAAC;IAa7H,CAAC;IAXG,IAAW,aAAa;QACpB,OAAO,uBAAA,IAAI,sCAAe,CAAC;IAC/B,CAAC;IAED,IAAW,2BAA2B;QAClC,OAAO,uBAAA,IAAI,oDAA6B,CAAC;IAC7C,CAAC;IAED,IAAW,2BAA2B,CAAC,KAA0F;QAC7H,uBAAA,IAAI,gDAAgC,KAAK,MAAA,CAAC;IAC9C,CAAC;CACJ;AAfD,0CAeC","sourcesContent":["import { ITreeNodeDataThreeJs } from \"../../interfaces/three/ITreeNodeDataThreeJs\";\r\nimport { ITreeNodeThreeJs } from \"../../interfaces/three/ITreeNodeThreeJs\";\r\nimport { AbstractTreeNode } from \"../AbstractTreeNode\";\r\nimport * as THREE from \"three\";\r\n\r\nexport class TreeNodeThreeJs extends AbstractTreeNode<ITreeNodeThreeJs, ITreeNodeDataThreeJs> implements ITreeNodeThreeJs {\r\n    #threeJsObject: { [key: string]: THREE.Object3D } = {};\r\n    #updateCallbackThreeJsObject: ((newObj: THREE.Object3D, oldObj: THREE.Object3D, viewport: string) => void) | null = null;\r\n\r\n    public get threeJsObject(): { [key: string]: THREE.Object3D } {\r\n        return this.#threeJsObject;\r\n    }\r\n\r\n    public get updateCallbackThreeJsObject(): ((newObj: THREE.Object3D, oldObj: THREE.Object3D, viewport: string) => void) | null {\r\n        return this.#updateCallbackThreeJsObject;\r\n    }\r\n\r\n    public set updateCallbackThreeJsObject(value: ((newObj: THREE.Object3D, oldObj: THREE.Object3D, viewport: string) => void) | null) {\r\n        this.#updateCallbackThreeJsObject = value;\r\n    }\r\n}"]}},"error":null,"hash":"9709696fef071e71f98fde4f78cb313f","cacheData":{"env":{}}}