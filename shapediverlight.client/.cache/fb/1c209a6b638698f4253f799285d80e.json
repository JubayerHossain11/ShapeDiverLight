{"id":"node_modules/@shapediver/sdk.sdtf-core/dist/structure/SdtfShapeDiverTypeHints.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-core\\dist\\structure\\SdtfShapeDiverTypeHints.js.map","includedInParent":true,"mtime":1706527149968},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-core\\package.json","includedInParent":true,"mtime":1706527149149}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SdtfTypeHintName = exports.SdtfRhinoTypeHintName = exports.SdtfGrasshopperTypeHintName = exports.SdtfGeometryTypeHintName = exports.SdtfPrimitiveTypeHintName = void 0;\nvar SdtfPrimitiveTypeHintName;\n(function (SdtfPrimitiveTypeHintName) {\n    SdtfPrimitiveTypeHintName[\"BOOLEAN\"] = \"boolean\";\n    SdtfPrimitiveTypeHintName[\"CHAR\"] = \"char\";\n    SdtfPrimitiveTypeHintName[\"COLOR\"] = \"color\";\n    SdtfPrimitiveTypeHintName[\"DATA\"] = \"data\";\n    SdtfPrimitiveTypeHintName[\"DECIMAL\"] = \"decimal\";\n    SdtfPrimitiveTypeHintName[\"DOUBLE\"] = \"double\";\n    SdtfPrimitiveTypeHintName[\"GUID\"] = \"guid\";\n    SdtfPrimitiveTypeHintName[\"IMAGE\"] = \"image\";\n    SdtfPrimitiveTypeHintName[\"INT8\"] = \"int8\";\n    SdtfPrimitiveTypeHintName[\"INT16\"] = \"int16\";\n    SdtfPrimitiveTypeHintName[\"INT32\"] = \"int32\";\n    SdtfPrimitiveTypeHintName[\"INT64\"] = \"int64\";\n    SdtfPrimitiveTypeHintName[\"JSON\"] = \"json\";\n    SdtfPrimitiveTypeHintName[\"SINGLE\"] = \"single\";\n    SdtfPrimitiveTypeHintName[\"STRING\"] = \"string\";\n    SdtfPrimitiveTypeHintName[\"UINT8\"] = \"uint8\";\n    SdtfPrimitiveTypeHintName[\"UINT16\"] = \"uint16\";\n    SdtfPrimitiveTypeHintName[\"UINT32\"] = \"uint32\";\n    SdtfPrimitiveTypeHintName[\"UINT64\"] = \"uint64\";\n})(SdtfPrimitiveTypeHintName = exports.SdtfPrimitiveTypeHintName || (exports.SdtfPrimitiveTypeHintName = {}));\nvar SdtfGeometryTypeHintName;\n(function (SdtfGeometryTypeHintName) {\n    SdtfGeometryTypeHintName[\"GEOMETRY_ARC\"] = \"geometry.arc\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_BOUNDING_BOX\"] = \"geometry.boundingbox\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_BOX\"] = \"geometry.box\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_CIRCLE\"] = \"geometry.circle\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_COMPLEX\"] = \"geometry.complex\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_CONE\"] = \"geometry.cone\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_CYLINDER\"] = \"geometry.cylinder\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_ELLIPSE\"] = \"geometry.ellipse\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_INTERVAL\"] = \"geometry.interval\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_INTERVAL2\"] = \"geometry.interval2\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_LINE\"] = \"geometry.line\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_MATRIX\"] = \"geometry.matrix\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_PLANE\"] = \"geometry.plane\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_POINT\"] = \"geometry.point\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_POINT2D\"] = \"geometry.point2d\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_POINT3D\"] = \"geometry.point3d\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_POINT4D\"] = \"geometry.point4d\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_POLYLINE\"] = \"geometry.polyline\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_RAY\"] = \"geometry.ray\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_RECTANGLE\"] = \"geometry.rectangle\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_SPHERE\"] = \"geometry.sphere\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_TORUS\"] = \"geometry.torus\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_TRANSFORM\"] = \"geometry.transform\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_TRANSFORM_LIST\"] = \"geometry.transformlist\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_VECTOR\"] = \"geometry.vector\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_VECTOR2D\"] = \"geometry.vector2d\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_VECTOR3D\"] = \"geometry.vector3d\";\n    SdtfGeometryTypeHintName[\"GEOMETRY_VECTOR4D\"] = \"geometry.vector4d\";\n})(SdtfGeometryTypeHintName = exports.SdtfGeometryTypeHintName || (exports.SdtfGeometryTypeHintName = {}));\nvar SdtfGrasshopperTypeHintName;\n(function (SdtfGrasshopperTypeHintName) {\n    SdtfGrasshopperTypeHintName[\"GRASSHOPPER_PATH\"] = \"grasshopper.path\";\n})(SdtfGrasshopperTypeHintName = exports.SdtfGrasshopperTypeHintName || (exports.SdtfGrasshopperTypeHintName = {}));\nvar SdtfRhinoTypeHintName;\n(function (SdtfRhinoTypeHintName) {\n    SdtfRhinoTypeHintName[\"RHINO_ARC_CURVE\"] = \"rhino.arccurve\";\n    SdtfRhinoTypeHintName[\"RHINO_BREP\"] = \"rhino.brep\";\n    SdtfRhinoTypeHintName[\"RHINO_CURVE\"] = \"rhino.curve\";\n    SdtfRhinoTypeHintName[\"RHINO_EXTRUSION\"] = \"rhino.extrusion\";\n    SdtfRhinoTypeHintName[\"RHINO_LINE_CURVE\"] = \"rhino.linecurve\";\n    SdtfRhinoTypeHintName[\"RHINO_MESH\"] = \"rhino.mesh\";\n    SdtfRhinoTypeHintName[\"RHINO_NURBS_CURVE\"] = \"rhino.nurbscurve\";\n    SdtfRhinoTypeHintName[\"RHINO_NURBS_SURFACE\"] = \"rhino.nurbssurface\";\n    SdtfRhinoTypeHintName[\"RHINO_PLANE_SURFACE\"] = \"rhino.planesurface\";\n    SdtfRhinoTypeHintName[\"RHINO_POINT\"] = \"rhino.point\";\n    SdtfRhinoTypeHintName[\"RHINO_POLY_CURVE\"] = \"rhino.polycurve\";\n    SdtfRhinoTypeHintName[\"RHINO_POLYLINE_CURVE\"] = \"rhino.polylinecurve\";\n    SdtfRhinoTypeHintName[\"RHINO_REV_SURFACE\"] = \"rhino.revsurface\";\n    SdtfRhinoTypeHintName[\"RHINO_SUBD\"] = \"rhino.subd\";\n    SdtfRhinoTypeHintName[\"RHINO_SURFACE\"] = \"rhino.surface\";\n})(SdtfRhinoTypeHintName = exports.SdtfRhinoTypeHintName || (exports.SdtfRhinoTypeHintName = {}));\n/** Holds all supported type hints. */\nexports.SdtfTypeHintName = Object.assign(Object.assign(Object.assign(Object.assign({}, SdtfPrimitiveTypeHintName), SdtfGeometryTypeHintName), SdtfGrasshopperTypeHintName), SdtfRhinoTypeHintName);\n"},"sourceMaps":{"js":{"version":3,"file":"SdtfShapeDiverTypeHints.js","sourceRoot":"","sources":["../../src/structure/SdtfShapeDiverTypeHints.ts"],"names":[],"mappings":";;;AAAA,IAAY,yBAoBX;AApBD,WAAY,yBAAyB;IACjC,gDAAmB,CAAA;IACnB,0CAAa,CAAA;IACb,4CAAe,CAAA;IACf,0CAAa,CAAA;IACb,gDAAmB,CAAA;IACnB,8CAAiB,CAAA;IACjB,0CAAa,CAAA;IACb,4CAAe,CAAA;IACf,0CAAa,CAAA;IACb,4CAAe,CAAA;IACf,4CAAe,CAAA;IACf,4CAAe,CAAA;IACf,0CAAa,CAAA;IACb,8CAAiB,CAAA;IACjB,8CAAiB,CAAA;IACjB,4CAAe,CAAA;IACf,8CAAiB,CAAA;IACjB,8CAAiB,CAAA;IACjB,8CAAiB,CAAA;AACrB,CAAC,EApBW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAoBpC;AAED,IAAY,wBA6BX;AA7BD,WAAY,wBAAwB;IAChC,yDAA6B,CAAA;IAC7B,0EAA8C,CAAA;IAC9C,yDAA6B,CAAA;IAC7B,+DAAmC,CAAA;IACnC,iEAAqC,CAAA;IACrC,2DAA+B,CAAA;IAC/B,mEAAuC,CAAA;IACvC,iEAAqC,CAAA;IACrC,mEAAuC,CAAA;IACvC,qEAAyC,CAAA;IACzC,2DAA+B,CAAA;IAC/B,+DAAmC,CAAA;IACnC,6DAAiC,CAAA;IACjC,6DAAiC,CAAA;IACjC,iEAAqC,CAAA;IACrC,iEAAqC,CAAA;IACrC,iEAAqC,CAAA;IACrC,mEAAuC,CAAA;IACvC,yDAA6B,CAAA;IAC7B,qEAAyC,CAAA;IACzC,+DAAmC,CAAA;IACnC,6DAAiC,CAAA;IACjC,qEAAyC,CAAA;IACzC,8EAAkD,CAAA;IAClD,+DAAmC,CAAA;IACnC,mEAAuC,CAAA;IACvC,mEAAuC,CAAA;IACvC,mEAAuC,CAAA;AAC3C,CAAC,EA7BW,wBAAwB,GAAxB,gCAAwB,KAAxB,gCAAwB,QA6BnC;AAED,IAAY,2BAEX;AAFD,WAAY,2BAA2B;IACnC,oEAAqC,CAAA;AACzC,CAAC,EAFW,2BAA2B,GAA3B,mCAA2B,KAA3B,mCAA2B,QAEtC;AAED,IAAY,qBAgBX;AAhBD,WAAY,qBAAqB;IAC7B,2DAAkC,CAAA;IAClC,kDAAyB,CAAA;IACzB,oDAA2B,CAAA;IAC3B,4DAAmC,CAAA;IACnC,6DAAoC,CAAA;IACpC,kDAAyB,CAAA;IACzB,+DAAsC,CAAA;IACtC,mEAA0C,CAAA;IAC1C,mEAA0C,CAAA;IAC1C,oDAA2B,CAAA;IAC3B,6DAAoC,CAAA;IACpC,qEAA4C,CAAA;IAC5C,+DAAsC,CAAA;IACtC,kDAAyB,CAAA;IACzB,wDAA+B,CAAA;AACnC,CAAC,EAhBW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAgBhC;AAED,sCAAsC;AACzB,QAAA,gBAAgB,+DACtB,yBAAyB,GACzB,wBAAwB,GACxB,2BAA2B,GAC3B,qBAAqB,EAC3B","sourcesContent":[null]}},"error":null,"hash":"e4b4c710f59bbfc5a5fbcc1f7ba263a4","cacheData":{"env":{}}}