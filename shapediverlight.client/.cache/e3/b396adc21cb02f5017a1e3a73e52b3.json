{"id":"node_modules/@shapediver/viewer.shared.types/dist/implementation/material/MapData.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\material\\MapData.js.map","includedInParent":true,"mtime":1706527152218},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.types\\src\\implementation\\material\\MapData.ts","includedInParent":true,"mtime":1706527153339},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.types\\package.json","includedInParent":true,"mtime":1706527150980},{"name":"gl-matrix","loc":{"line":16,"column":28,"index":1419},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\material\\MapData.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\gl-matrix\\esm\\index.js"},{"name":"@shapediver/viewer.shared.node-tree","loc":{"line":17,"column":42,"index":1476},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\material\\MapData.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.node-tree\\dist\\index.js"},{"name":"../../interfaces/data/material/IMapData","loc":{"line":18,"column":27,"index":1544},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\material\\MapData.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.types\\dist\\interfaces\\data\\material\\IMapData.js"}],"generated":{"js":"\"use strict\";\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _MapData_center, _MapData_color, _MapData_flipY, _MapData_image, _MapData_magFilter, _MapData_minFilter, _MapData_offset, _MapData_repeat, _MapData_rotation, _MapData_wrapS, _MapData_wrapT;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MapData = void 0;\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nconst viewer_shared_node_tree_1 = require(\"@shapediver/viewer.shared.node-tree\");\r\nconst IMapData_1 = require(\"../../interfaces/data/material/IMapData\");\r\nclass MapData extends viewer_shared_node_tree_1.AbstractTreeNodeData {\r\n    // #endregion Properties (11)\r\n    // #region Constructors (1)\r\n    constructor(image, wrapS = IMapData_1.TEXTURE_WRAPPING.REPEAT, wrapT = IMapData_1.TEXTURE_WRAPPING.REPEAT, minFilter = IMapData_1.TEXTURE_FILTERING.NONE, magFilter = IMapData_1.TEXTURE_FILTERING.NONE, center = gl_matrix_1.vec2.fromValues(0, 0), color, offset = gl_matrix_1.vec2.fromValues(0, 0), repeat = gl_matrix_1.vec2.fromValues(1, 1), rotation = 0, flipY = true, id, version) {\r\n        super(id, version);\r\n        // #region Properties (11)\r\n        _MapData_center.set(this, gl_matrix_1.vec2.fromValues(0, 0));\r\n        _MapData_color.set(this, void 0);\r\n        _MapData_flipY.set(this, true);\r\n        _MapData_image.set(this, void 0);\r\n        _MapData_magFilter.set(this, IMapData_1.TEXTURE_FILTERING.NONE);\r\n        _MapData_minFilter.set(this, IMapData_1.TEXTURE_FILTERING.NONE);\r\n        _MapData_offset.set(this, gl_matrix_1.vec2.fromValues(0, 0));\r\n        _MapData_repeat.set(this, gl_matrix_1.vec2.fromValues(1, 1));\r\n        _MapData_rotation.set(this, 0);\r\n        _MapData_wrapS.set(this, IMapData_1.TEXTURE_WRAPPING.REPEAT);\r\n        _MapData_wrapT.set(this, IMapData_1.TEXTURE_WRAPPING.REPEAT);\r\n        __classPrivateFieldSet(this, _MapData_image, image, \"f\");\r\n        __classPrivateFieldSet(this, _MapData_wrapS, wrapS, \"f\");\r\n        __classPrivateFieldSet(this, _MapData_wrapT, wrapT, \"f\");\r\n        __classPrivateFieldSet(this, _MapData_minFilter, minFilter, \"f\");\r\n        __classPrivateFieldSet(this, _MapData_magFilter, magFilter, \"f\");\r\n        __classPrivateFieldSet(this, _MapData_center, center, \"f\");\r\n        __classPrivateFieldSet(this, _MapData_color, color, \"f\");\r\n        __classPrivateFieldSet(this, _MapData_offset, offset, \"f\");\r\n        __classPrivateFieldSet(this, _MapData_repeat, repeat, \"f\");\r\n        __classPrivateFieldSet(this, _MapData_rotation, rotation, \"f\");\r\n        __classPrivateFieldSet(this, _MapData_flipY, flipY, \"f\");\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (11)\r\n    get center() {\r\n        return __classPrivateFieldGet(this, _MapData_center, \"f\");\r\n    }\r\n    set center(value) {\r\n        __classPrivateFieldSet(this, _MapData_center, value, \"f\");\r\n    }\r\n    get color() {\r\n        return __classPrivateFieldGet(this, _MapData_color, \"f\");\r\n    }\r\n    set color(value) {\r\n        __classPrivateFieldSet(this, _MapData_color, value, \"f\");\r\n    }\r\n    get flipY() {\r\n        return __classPrivateFieldGet(this, _MapData_flipY, \"f\");\r\n    }\r\n    set flipY(value) {\r\n        __classPrivateFieldSet(this, _MapData_flipY, value, \"f\");\r\n    }\r\n    get image() {\r\n        return __classPrivateFieldGet(this, _MapData_image, \"f\");\r\n    }\r\n    set image(value) {\r\n        __classPrivateFieldSet(this, _MapData_image, value, \"f\");\r\n    }\r\n    get magFilter() {\r\n        return __classPrivateFieldGet(this, _MapData_magFilter, \"f\");\r\n    }\r\n    set magFilter(value) {\r\n        __classPrivateFieldSet(this, _MapData_magFilter, value, \"f\");\r\n    }\r\n    get minFilter() {\r\n        return __classPrivateFieldGet(this, _MapData_minFilter, \"f\");\r\n    }\r\n    set minFilter(value) {\r\n        __classPrivateFieldSet(this, _MapData_minFilter, value, \"f\");\r\n    }\r\n    get offset() {\r\n        return __classPrivateFieldGet(this, _MapData_offset, \"f\");\r\n    }\r\n    set offset(value) {\r\n        __classPrivateFieldSet(this, _MapData_offset, value, \"f\");\r\n    }\r\n    get repeat() {\r\n        return __classPrivateFieldGet(this, _MapData_repeat, \"f\");\r\n    }\r\n    set repeat(value) {\r\n        __classPrivateFieldSet(this, _MapData_repeat, value, \"f\");\r\n    }\r\n    get rotation() {\r\n        return __classPrivateFieldGet(this, _MapData_rotation, \"f\");\r\n    }\r\n    set rotation(value) {\r\n        __classPrivateFieldSet(this, _MapData_rotation, value, \"f\");\r\n    }\r\n    get wrapS() {\r\n        return __classPrivateFieldGet(this, _MapData_wrapS, \"f\");\r\n    }\r\n    set wrapS(value) {\r\n        __classPrivateFieldSet(this, _MapData_wrapS, value, \"f\");\r\n    }\r\n    get wrapT() {\r\n        return __classPrivateFieldGet(this, _MapData_wrapT, \"f\");\r\n    }\r\n    set wrapT(value) {\r\n        __classPrivateFieldSet(this, _MapData_wrapT, value, \"f\");\r\n    }\r\n    // #endregion Public Accessors (11)\r\n    // #region Public Methods (1)\r\n    clone() {\r\n        return new MapData(this.image, this.wrapS, this.wrapT, this.minFilter, this.magFilter, this.center, this.color, this.offset, this.repeat, this.rotation, this.flipY, this.id, this.version);\r\n    }\r\n}\r\nexports.MapData = MapData;\r\n_MapData_center = new WeakMap(), _MapData_color = new WeakMap(), _MapData_flipY = new WeakMap(), _MapData_image = new WeakMap(), _MapData_magFilter = new WeakMap(), _MapData_minFilter = new WeakMap(), _MapData_offset = new WeakMap(), _MapData_repeat = new WeakMap(), _MapData_rotation = new WeakMap(), _MapData_wrapS = new WeakMap(), _MapData_wrapT = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"MapData.js","sourceRoot":"","sources":["../../../src/implementation/material/MapData.ts"],"names":[],"mappings":"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","sourcesContent":["import { vec2 } from \"gl-matrix\";\r\nimport { AbstractTreeNodeData } from \"@shapediver/viewer.shared.node-tree\";\r\nimport { IMapData, TEXTURE_FILTERING, TEXTURE_WRAPPING } from \"../../interfaces/data/material/IMapData\";\r\nimport { Color } from \"../../types\";\r\n\r\nexport class MapData extends AbstractTreeNodeData implements IMapData {\r\n    // #region Properties (11)\r\n\r\n    #center: vec2 = vec2.fromValues(0, 0);\r\n    #color?: Color;\r\n    #flipY: boolean = true;\r\n    #image: HTMLImageElement;\r\n    #magFilter: TEXTURE_FILTERING = TEXTURE_FILTERING.NONE;\r\n    #minFilter: TEXTURE_FILTERING = TEXTURE_FILTERING.NONE;\r\n    #offset: vec2 = vec2.fromValues(0, 0);\r\n    #repeat: vec2 = vec2.fromValues(1, 1);\r\n    #rotation: number = 0;\r\n    #wrapS: TEXTURE_WRAPPING = TEXTURE_WRAPPING.REPEAT;\r\n    #wrapT: TEXTURE_WRAPPING = TEXTURE_WRAPPING.REPEAT;\r\n\r\n    // #endregion Properties (11)\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(\r\n      image: HTMLImageElement,\r\n      wrapS: TEXTURE_WRAPPING = TEXTURE_WRAPPING.REPEAT,\r\n      wrapT: TEXTURE_WRAPPING = TEXTURE_WRAPPING.REPEAT,\r\n      minFilter: TEXTURE_FILTERING = TEXTURE_FILTERING.NONE,\r\n      magFilter: TEXTURE_FILTERING = TEXTURE_FILTERING.NONE,\r\n      center: vec2 = vec2.fromValues(0, 0),\r\n      color?: Color,\r\n      offset: vec2 = vec2.fromValues(0, 0),\r\n      repeat: vec2 = vec2.fromValues(1, 1),\r\n      rotation: number = 0,\r\n      flipY: boolean = true,\r\n      id?: string,\r\n      version?: string\r\n    ) {\r\n      super(id, version);\r\n      this.#image = image;\r\n      this.#wrapS = wrapS;\r\n      this.#wrapT = wrapT;\r\n      this.#minFilter = minFilter;\r\n      this.#magFilter = magFilter;\r\n      this.#center = center;\r\n      this.#color = color;\r\n      this.#offset = offset;\r\n      this.#repeat = repeat;\r\n      this.#rotation = rotation;\r\n      this.#flipY = flipY;\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Accessors (11)\r\n\r\n    public get center(): vec2 {\r\n      return this.#center;\r\n    }\r\n\r\n    public set center(value: vec2) {\r\n      this.#center = value;\r\n    }\r\n\r\n    public get color(): Color | undefined {\r\n      return this.#color;\r\n    }\r\n\r\n    public set color(value: Color | undefined) {\r\n      this.#color = value;\r\n    }\r\n\r\n    public get flipY(): boolean {\r\n      return this.#flipY;\r\n    }\r\n\r\n    public set flipY(value: boolean) {\r\n      this.#flipY = value;\r\n    }\r\n\r\n    public get image(): HTMLImageElement {\r\n      return this.#image;\r\n    }\r\n\r\n    public set image(value: HTMLImageElement) {\r\n      this.#image = value;\r\n    }\r\n\r\n    public get magFilter(): TEXTURE_FILTERING {\r\n      return this.#magFilter;\r\n    }\r\n\r\n    public set magFilter(value: TEXTURE_FILTERING) {\r\n      this.#magFilter = value;\r\n    }\r\n\r\n    public get minFilter(): TEXTURE_FILTERING {\r\n      return this.#minFilter;\r\n    }\r\n\r\n    public set minFilter(value: TEXTURE_FILTERING) {\r\n      this.#minFilter = value;\r\n    }\r\n\r\n    public get offset(): vec2 {\r\n      return this.#offset;\r\n    }\r\n\r\n    public set offset(value: vec2) {\r\n      this.#offset = value;\r\n    }\r\n\r\n    public get repeat(): vec2 {\r\n      return this.#repeat;\r\n    }\r\n\r\n    public set repeat(value: vec2) {\r\n      this.#repeat = value;\r\n    }\r\n\r\n    public get rotation(): number {\r\n      return this.#rotation;\r\n    }\r\n\r\n    public set rotation(value: number) {\r\n      this.#rotation = value;\r\n    }\r\n\r\n    public get wrapS(): TEXTURE_WRAPPING {\r\n      return this.#wrapS;\r\n    }\r\n\r\n    public set wrapS(value: TEXTURE_WRAPPING) {\r\n      this.#wrapS = value;\r\n    }\r\n\r\n    public get wrapT(): TEXTURE_WRAPPING {\r\n      return this.#wrapT;\r\n    }\r\n\r\n    public set wrapT(value: TEXTURE_WRAPPING) {\r\n      this.#wrapT = value;\r\n    }\r\n\r\n    // #endregion Public Accessors (11)\r\n\r\n    // #region Public Methods (1)\r\n\r\n    public clone(): IMapData {\r\n      return new MapData(<HTMLImageElement>this.image, this.wrapS, this.wrapT, this.minFilter, this.magFilter, this.center, this.color, this.offset, this.repeat, this.rotation, this.flipY, this.id, this.version);\r\n    }\r\n\r\n    // #endregion Public Methods (1)\r\n}"]}},"error":null,"hash":"6ad36ea6147f240a943eab9044afd1a4","cacheData":{"env":{}}}