{"id":"node_modules/@shapediver/viewer.rendering-engine-threejs.standard/dist/three/postprocessing/Pass.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\three\\postprocessing\\Pass.js.map","includedInParent":true,"mtime":1706527153542},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\src\\three\\postprocessing\\Pass.js","includedInParent":true,"mtime":1706527152542},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\package.json","includedInParent":true,"mtime":1706527152875},{"name":"three","loc":{"line":4,"column":24,"index":152},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\three\\postprocessing\\Pass.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\three\\build\\three.module.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FullScreenQuad = exports.Pass = void 0;\r\nconst three_1 = require(\"three\");\r\nclass Pass {\r\n    constructor() {\r\n        // if set to true, the pass is processed by the composer\r\n        this.enabled = true;\r\n        // if set to true, the pass indicates to swap read and write buffer after rendering\r\n        this.needsSwap = true;\r\n        // if set to true, the pass clears its buffer before rendering\r\n        this.clear = false;\r\n        // if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\r\n        this.renderToScreen = false;\r\n    }\r\n    setSize( /* width, height */) { }\r\n    render( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */) {\r\n        console.error('THREE.Pass: .render() must be implemented in derived pass.');\r\n    }\r\n}\r\nexports.Pass = Pass;\r\n// Helper for passes that need to fill the viewport with a single quad.\r\nconst _camera = new three_1.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n// https://github.com/mrdoob/three.js/pull/21358\r\nconst _geometry = new three_1.BufferGeometry();\r\n_geometry.setAttribute('position', new three_1.Float32BufferAttribute([-1, 3, 0, -1, -1, 0, 3, -1, 0], 3));\r\n_geometry.setAttribute('uv', new three_1.Float32BufferAttribute([0, 2, 0, 0, 2, 0], 2));\r\nclass FullScreenQuad {\r\n    constructor(material) {\r\n        this._mesh = new three_1.Mesh(_geometry, material);\r\n    }\r\n    dispose() {\r\n        this._mesh.geometry.dispose();\r\n    }\r\n    render(renderer) {\r\n        renderer.render(this._mesh, _camera);\r\n    }\r\n    get material() {\r\n        return this._mesh.material;\r\n    }\r\n    set material(value) {\r\n        this._mesh.material = value;\r\n    }\r\n}\r\nexports.FullScreenQuad = FullScreenQuad;\r\n"},"sourceMaps":{"js":{"version":3,"file":"Pass.js","sourceRoot":"","sources":["../../../src/three/postprocessing/Pass.js"],"names":[],"mappings":";;;AAAA,iCAKe;AAEf,MAAM,IAAI;IAET;QAEC,wDAAwD;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,mFAAmF;QACnF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,8DAA8D;QAC9D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,6GAA6G;QAC7G,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAE7B,CAAC;IAED,OAAO,EAAE,mBAAmB,IAAI,CAAC;IAEjC,MAAM,EAAE,8DAA8D;QAErE,OAAO,CAAC,KAAK,CAAE,4DAA4D,CAAE,CAAC;IAE/E,CAAC;CAED;AA8CQ,oBAAI;AA5Cb,uEAAuE;AAEvE,MAAM,OAAO,GAAG,IAAI,0BAAkB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;AAE/D,gDAAgD;AAEhD,MAAM,SAAS,GAAG,IAAI,sBAAc,EAAE,CAAC;AACvC,SAAS,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,8BAAsB,CAAE,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAC,CAAE,CAAE,CAAC;AAC7G,SAAS,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,8BAAsB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAC,CAAE,CAAE,CAAC;AAEtF,MAAM,cAAc;IAEnB,YAAa,QAAQ;QAEpB,IAAI,CAAC,KAAK,GAAG,IAAI,YAAI,CAAE,SAAS,EAAE,QAAQ,CAAE,CAAC;IAE9C,CAAC;IAED,OAAO;QAEN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAE/B,CAAC;IAED,MAAM,CAAE,QAAQ;QAEf,QAAQ,CAAC,MAAM,CAAE,IAAI,CAAC,KAAK,EAAE,OAAO,CAAE,CAAC;IAExC,CAAC;IAED,IAAI,QAAQ;QAEX,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAE5B,CAAC;IAED,IAAI,QAAQ,CAAE,KAAK;QAElB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;IAE7B,CAAC;CAED;AAEc,wCAAc","sourcesContent":["import {\r\n\tBufferGeometry,\r\n\tFloat32BufferAttribute,\r\n\tOrthographicCamera,\r\n\tMesh\r\n} from 'three';\r\n\r\nclass Pass {\r\n\r\n\tconstructor() {\r\n\r\n\t\t// if set to true, the pass is processed by the composer\r\n\t\tthis.enabled = true;\r\n\r\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\r\n\t\tthis.needsSwap = true;\r\n\r\n\t\t// if set to true, the pass clears its buffer before rendering\r\n\t\tthis.clear = false;\r\n\r\n\t\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\r\n\t\tthis.renderToScreen = false;\r\n\r\n\t}\r\n\r\n\tsetSize( /* width, height */ ) {}\r\n\r\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\r\n\r\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Helper for passes that need to fill the viewport with a single quad.\r\n\r\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\r\n// https://github.com/mrdoob/three.js/pull/21358\r\n\r\nconst _geometry = new BufferGeometry();\r\n_geometry.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\r\n_geometry.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\r\n\r\nclass FullScreenQuad {\r\n\r\n\tconstructor( material ) {\r\n\r\n\t\tthis._mesh = new Mesh( _geometry, material );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis._mesh.geometry.dispose();\r\n\r\n\t}\r\n\r\n\trender( renderer ) {\r\n\r\n\t\trenderer.render( this._mesh, _camera );\r\n\r\n\t}\r\n\r\n\tget material() {\r\n\r\n\t\treturn this._mesh.material;\r\n\r\n\t}\r\n\r\n\tset material( value ) {\r\n\r\n\t\tthis._mesh.material = value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Pass, FullScreenQuad };\r\n"]}},"error":null,"hash":"4f3486fd34658578d67451ccaf13670d","cacheData":{"env":{}}}