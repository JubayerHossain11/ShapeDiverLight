{"id":"node_modules/@shapediver/sdk.sdtf-v1/dist/buffer_cache/SdtfBinaryBufferCache.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\buffer_cache\\SdtfBinaryBufferCache.js.map","includedInParent":true,"mtime":1706542086953},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\package.json","includedInParent":true,"mtime":1706542086604},{"name":"@shapediver/sdk.sdtf-core","loc":{"line":13,"column":32,"index":830},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\buffer_cache\\SdtfBinaryBufferCache.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.sdtf-core\\dist\\index.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SdtfBinaryBufferCache = void 0;\nconst sdk_sdtf_core_1 = require(\"@shapediver/sdk.sdtf-core\");\nclass SdtfBinaryBufferCache {\n    constructor() {\n        this.cacheIdFullBuffer = \"full\";\n        this.cache = {};\n    }\n    /**\n     * Calculates the cache key by hashing the given buffer URI.\n     * Simple, __insecure__ hashing function that's short, fast, and has no dependencies.\n     * @protected\n     */\n    calcCacheKey(uri = \"\") {\n        let hash = 0;\n        for (let i = 0; i < uri.length; i++) {\n            const char = uri.charCodeAt(i);\n            hash = (hash << 5) - hash + char;\n            hash &= hash; // Convert to 32bit integer\n        }\n        return new Uint32Array([hash])[0].toString(36);\n    }\n    /**\n     * Calculates the cache ID based on the given buffer range.\n     * @protected\n     */\n    calcCacheId(offset, length) {\n        return `${offset};${length}`;\n    }\n    /**\n     * Returns the buffer with the given key and range from cache.\n     * @protected\n     */\n    loadFromCache(key, offset, length) {\n        const item = this.cache[key];\n        if (!item) {\n            // Buffer not found in cache\n            return undefined;\n        }\n        const id = this.calcCacheId(offset, length);\n        if (item[id]) {\n            // Buffer found in cache for this range\n            return item[id];\n        }\n        if (item[this.cacheIdFullBuffer]) {\n            // Entire buffer object stored for this key - return range.\n            const buffer = item[this.cacheIdFullBuffer];\n            // However, the internally stored buffer might already contain a byte offset - take this into account!\n            return new DataView(buffer.buffer, buffer.byteOffset + offset, length);\n        }\n    }\n    /**\n     * Stores the buffer with the given key and range in cache.\n     * @protected\n     */\n    storeInCache(key, id, buffer) {\n        var _a;\n        const item = (_a = this.cache[key]) !== null && _a !== void 0 ? _a : {};\n        item[id] = buffer;\n        this.cache[key] = item;\n    }\n    setBinaryBody(binaryBody) {\n        if (!binaryBody)\n            return;\n        this.cache[this.calcCacheKey()] = {\n            [this.cacheIdFullBuffer]: binaryBody,\n        };\n    }\n    getBuffer(uri, offset, length) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const cacheKey = this.calcCacheKey(uri);\n            return (_a = this.loadFromCache(cacheKey, offset, length)) !== null && _a !== void 0 ? _a : yield this.acquireBuffer(uri, length, offset);\n        });\n    }\n    /**\n     * Resolves and loads external buffer files - this is not supported in this mode!\n     * However, this can be overwritten by other buffer cache implementations.\n     * @protected\n     */\n    acquireBuffer(uri, offset, length) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new sdk_sdtf_core_1.SdtfError(\"Resolution of external buffers is not supported in this mode. \" +\n                \"Please use 'ISdtfParser.readFromFile()' or 'ISdtfParser.readFromUrl()' to instantiate the sdTF asset and to enable this functionality.\");\n        });\n    }\n}\nexports.SdtfBinaryBufferCache = SdtfBinaryBufferCache;\n"},"sourceMaps":{"js":{"version":3,"file":"SdtfBinaryBufferCache.js","sourceRoot":"","sources":["../../src/buffer_cache/SdtfBinaryBufferCache.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6DAAqD;AAGrD,MAAa,qBAAqB;IAY9B;QAVS,sBAAiB,GAAG,MAAM,CAAA;QAW/B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;IACnB,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAE,MAAc,EAAE;QAC1B,IAAI,IAAI,GAAG,CAAC,CAAA;QACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjC,MAAM,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;YAC9B,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAA;YAChC,IAAI,IAAI,IAAI,CAAA,CAAC,2BAA2B;SAC3C;QACD,OAAO,IAAI,WAAW,CAAC,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;IACpD,CAAC;IAED;;;OAGG;IACH,WAAW,CAAE,MAAc,EAAE,MAAc;QACvC,OAAO,GAAI,MAAO,IAAK,MAAO,EAAE,CAAA;IACpC,CAAC;IAED;;;OAGG;IACH,aAAa,CAAE,GAAW,EAAE,MAAc,EAAE,MAAc;QACtD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAC5B,IAAI,CAAC,IAAI,EAAE;YACP,4BAA4B;YAC5B,OAAO,SAAS,CAAA;SACnB;QAED,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAC3C,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE;YACV,uCAAuC;YACvC,OAAO,IAAI,CAAC,EAAE,CAAC,CAAA;SAClB;QAED,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;YAC9B,2DAA2D;YAC3D,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA;YAE3C,sGAAsG;YACtG,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,GAAG,MAAM,EAAE,MAAM,CAAC,CAAA;SACzE;IACL,CAAC;IAED;;;OAGG;IACH,YAAY,CAAE,GAAW,EAAE,EAAU,EAAE,MAAgB;;QACnD,MAAM,IAAI,GAAG,MAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,mCAAI,EAAE,CAAA;QAClC,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,CAAA;QACjB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAA;IAC1B,CAAC;IAED,aAAa,CAAE,UAAqB;QAChC,IAAI,CAAC,UAAU;YAAE,OAAM;QAEvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,GAAG;YAC9B,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,UAAU;SACvC,CAAA;IACL,CAAC;IAEK,SAAS,CAAE,GAAuB,EAAE,MAAc,EAAE,MAAc;;;YACpE,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAA;YAEvC,OAAO,MAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,mCAC/C,MAAM,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;;KACpD;IAED;;;;OAIG;IACG,aAAa,CAAE,GAAuB,EAAE,MAAc,EAAE,MAAc;;YACxE,MAAM,IAAI,yBAAS,CAAC,gEAAgE;gBAChF,wIAAwI,CAAC,CAAA;QACjJ,CAAC;KAAA;CAEJ;AApGD,sDAoGC","sourcesContent":[null]}},"error":null,"hash":"4abcb8f149cbd9a9183e4bd788790673","cacheData":{"env":{}}}