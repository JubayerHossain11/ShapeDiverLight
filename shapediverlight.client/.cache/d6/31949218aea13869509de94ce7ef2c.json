{"id":"Ehjh","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\three\\shaders\\GammaCorrectionShader.js.map","includedInParent":true,"mtime":1706476151935},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\src\\three\\shaders\\GammaCorrectionShader.js","includedInParent":true,"mtime":1706476150853},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706476652643},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\package.json","includedInParent":true,"mtime":1706476151754}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.GammaCorrectionShader=void 0;const t={uniforms:{tDiffuse:{value:null}},vertexShader:\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvUv = uv;\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t\\t}\",fragmentShader:\"\\n\\n\\t\\tuniform sampler2D tDiffuse;\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvec4 tex = texture2D( tDiffuse, vUv );\\n\\n\\t\\t\\tgl_FragColor = LinearTosRGB( tex );\\n\\n\\t\\t}\"};exports.GammaCorrectionShader=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":105}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":6,"column":6},"generated":{"line":1,"column":111}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":6,"column":30},"generated":{"line":1,"column":113}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":8,"column":1},"generated":{"line":1,"column":114}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":8,"column":11},"generated":{"line":1,"column":123}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":10,"column":2},"generated":{"line":1,"column":124}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":10,"column":14},"generated":{"line":1,"column":133}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":10,"column":16},"generated":{"line":1,"column":134}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":10,"column":23},"generated":{"line":1,"column":140}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":14,"column":1},"generated":{"line":1,"column":147}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":14,"column":25},"generated":{"line":1,"column":160}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":25,"column":1},"generated":{"line":1,"column":318}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":25,"column":27},"generated":{"line":1,"column":333}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":41,"column":9},"generated":{"line":1,"column":520}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":41,"column":9},"generated":{"line":1,"column":528}},{"source":"../../../src/three/shaders/GammaCorrectionShader.js","name":null,"original":{"line":41,"column":9},"generated":{"line":1,"column":550}}],"sources":{"../../../src/three/shaders/GammaCorrectionShader.js":"/**\r\n * Gamma Correction Shader\r\n * http://en.wikipedia.org/wiki/gamma_correction\r\n */\r\n\r\nconst GammaCorrectionShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t'tDiffuse': { value: null }\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = uv;\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\tuniform sampler2D tDiffuse;\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvec4 tex = texture2D( tDiffuse, vUv );\r\n\r\n\t\t\tgl_FragColor = LinearTosRGB( tex );\r\n\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { GammaCorrectionShader };\r\n"},"lineCount":null}},"error":null,"hash":"96a884202244c1583b9a55de806a2805","cacheData":{"env":{}}}