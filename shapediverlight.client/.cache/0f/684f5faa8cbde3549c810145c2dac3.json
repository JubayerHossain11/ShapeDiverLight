{"id":"node_modules/@shapediver/viewer.rendering-engine-threejs.standard/dist/three/postprocessing/ShaderPass.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\three\\postprocessing\\ShaderPass.js.map","includedInParent":true,"mtime":1706527153742},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\src\\three\\postprocessing\\ShaderPass.js","includedInParent":true,"mtime":1706527152788},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\package.json","includedInParent":true,"mtime":1706527152875},{"name":"three","loc":{"line":4,"column":24,"index":133},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\three\\postprocessing\\ShaderPass.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\three\\build\\three.module.js"},{"name":"./Pass.js","loc":{"line":5,"column":26,"index":170},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\three\\postprocessing\\ShaderPass.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\three\\postprocessing\\Pass.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ShaderPass = void 0;\r\nconst three_1 = require(\"three\");\r\nconst Pass_js_1 = require(\"./Pass.js\");\r\nclass ShaderPass extends Pass_js_1.Pass {\r\n    constructor(shader, textureID) {\r\n        super();\r\n        this.textureID = (textureID !== undefined) ? textureID : 'tDiffuse';\r\n        if (shader instanceof three_1.ShaderMaterial) {\r\n            this.uniforms = shader.uniforms;\r\n            this.material = shader;\r\n        }\r\n        else if (shader) {\r\n            this.uniforms = three_1.UniformsUtils.clone(shader.uniforms);\r\n            this.material = new three_1.ShaderMaterial({\r\n                defines: Object.assign({}, shader.defines),\r\n                uniforms: this.uniforms,\r\n                vertexShader: shader.vertexShader,\r\n                fragmentShader: shader.fragmentShader\r\n            });\r\n        }\r\n        this.fsQuad = new Pass_js_1.FullScreenQuad(this.material);\r\n    }\r\n    render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\r\n        if (this.uniforms[this.textureID]) {\r\n            this.uniforms[this.textureID].value = readBuffer.texture;\r\n        }\r\n        this.fsQuad.material = this.material;\r\n        if (this.renderToScreen) {\r\n            renderer.setRenderTarget(null);\r\n            this.fsQuad.render(renderer);\r\n        }\r\n        else {\r\n            renderer.setRenderTarget(writeBuffer);\r\n            // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n            if (this.clear)\r\n                renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\r\n            this.fsQuad.render(renderer);\r\n        }\r\n    }\r\n}\r\nexports.ShaderPass = ShaderPass;\r\n"},"sourceMaps":{"js":{"version":3,"file":"ShaderPass.js","sourceRoot":"","sources":["../../../src/three/postprocessing/ShaderPass.js"],"names":[],"mappings":";;;AAAA,iCAGe;AACf,uCAAiD;AAEjD,MAAM,UAAW,SAAQ,cAAI;IAE5B,YAAa,MAAM,EAAE,SAAS;QAE7B,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,SAAS,GAAG,CAAE,SAAS,KAAK,SAAS,CAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;QAEtE,IAAK,MAAM,YAAY,sBAAc,EAAG;YAEvC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAEhC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;SAEvB;aAAM,IAAK,MAAM,EAAG;YAEpB,IAAI,CAAC,QAAQ,GAAG,qBAAa,CAAC,KAAK,CAAE,MAAM,CAAC,QAAQ,CAAE,CAAC;YAEvD,IAAI,CAAC,QAAQ,GAAG,IAAI,sBAAc,CAAE;gBAEnC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,MAAM,CAAC,OAAO,CAAE;gBAC5C,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,YAAY,EAAE,MAAM,CAAC,YAAY;gBACjC,cAAc,EAAE,MAAM,CAAC,cAAc;aAErC,CAAE,CAAC;SAEJ;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,wBAAc,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;IAEnD,CAAC;IAED,MAAM,CAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,4BAA4B;QAErE,IAAK,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAC,SAAS,CAAE,EAAG;YAEtC,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC;SAE3D;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAErC,IAAK,IAAI,CAAC,cAAc,EAAG;YAE1B,QAAQ,CAAC,eAAe,CAAE,IAAI,CAAE,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;SAE/B;aAAM;YAEN,QAAQ,CAAC,eAAe,CAAE,WAAW,CAAE,CAAC;YACxC,mHAAmH;YACnH,IAAK,IAAI,CAAC,KAAK;gBAAG,QAAQ,CAAC,KAAK,CAAE,QAAQ,CAAC,cAAc,EAAE,QAAQ,CAAC,cAAc,EAAE,QAAQ,CAAC,gBAAgB,CAAE,CAAC;YAChH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;SAE/B;IAEF,CAAC;CAED;AAEQ,gCAAU","sourcesContent":["import {\r\n\tShaderMaterial,\r\n\tUniformsUtils\r\n} from 'three';\r\nimport { Pass, FullScreenQuad } from './Pass.js';\r\n\r\nclass ShaderPass extends Pass {\r\n\r\n\tconstructor( shader, textureID ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : 'tDiffuse';\r\n\r\n\t\tif ( shader instanceof ShaderMaterial ) {\r\n\r\n\t\t\tthis.uniforms = shader.uniforms;\r\n\r\n\t\t\tthis.material = shader;\r\n\r\n\t\t} else if ( shader ) {\r\n\r\n\t\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\t\tthis.material = new ShaderMaterial( {\r\n\r\n\t\t\t\tdefines: Object.assign( {}, shader.defines ),\r\n\t\t\t\tuniforms: this.uniforms,\r\n\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\tfragmentShader: shader.fragmentShader\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tif ( this.uniforms[ this.textureID ] ) {\r\n\r\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\r\n\r\n\t\t}\r\n\r\n\t\tthis.fsQuad.material = this.material;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ShaderPass };\r\n"]}},"error":null,"hash":"32fd7b021a08c47185286d5c007fb162","cacheData":{"env":{}}}