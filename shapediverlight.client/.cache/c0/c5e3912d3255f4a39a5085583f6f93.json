{"id":"node_modules/@shapediver/viewer/dist/implementation/viewport/lights/types/DirectionalLightApi.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\lights\\types\\DirectionalLightApi.js.map","includedInParent":true,"mtime":1706542086579},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer\\src\\implementation\\viewport\\lights\\types\\DirectionalLightApi.ts","includedInParent":true,"mtime":1706542087190},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer\\package.json","includedInParent":true,"mtime":1706542086478},{"name":"../AbstractLightApi","loc":{"line":16,"column":35,"index":1376},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\lights\\types\\DirectionalLightApi.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\lights\\AbstractLightApi.js"},{"name":"@shapediver/viewer.shared.services","loc":{"line":17,"column":41,"index":1442},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer\\dist\\implementation\\viewport\\lights\\types\\DirectionalLightApi.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _DirectionalLightApi_inputValidator, _DirectionalLightApi_light, _DirectionalLightApi_logger, _DirectionalLightApi_viewportApi;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DirectionalLightApi = void 0;\r\nconst AbstractLightApi_1 = require(\"../AbstractLightApi\");\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nclass DirectionalLightApi extends AbstractLightApi_1.AbstractLightApi {\r\n    // #endregion Properties (4)\r\n    // #region Constructors (1)\r\n    constructor(viewportApi, light) {\r\n        super(viewportApi, light);\r\n        // #region Properties (4)\r\n        _DirectionalLightApi_inputValidator.set(this, viewer_shared_services_1.InputValidator.instance);\r\n        _DirectionalLightApi_light.set(this, void 0);\r\n        _DirectionalLightApi_logger.set(this, viewer_shared_services_1.Logger.instance);\r\n        _DirectionalLightApi_viewportApi.set(this, void 0);\r\n        __classPrivateFieldSet(this, _DirectionalLightApi_viewportApi, viewportApi, \"f\");\r\n        __classPrivateFieldSet(this, _DirectionalLightApi_light, light, \"f\");\r\n        this.scope = 'DirectionalLightApi';\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (8)\r\n    get castShadow() {\r\n        return __classPrivateFieldGet(this, _DirectionalLightApi_light, \"f\").castShadow;\r\n    }\r\n    set castShadow(value) {\r\n        const scope = 'castShadow';\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'boolean');\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_light, \"f\").castShadow = value;\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_viewportApi, \"f\").update();\r\n    }\r\n    get direction() {\r\n        return __classPrivateFieldGet(this, _DirectionalLightApi_light, \"f\").direction;\r\n    }\r\n    set direction(value) {\r\n        const scope = 'direction';\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'vec3');\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_light, \"f\").direction = value;\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_viewportApi, \"f\").update();\r\n    }\r\n    get shadowMapBias() {\r\n        return __classPrivateFieldGet(this, _DirectionalLightApi_light, \"f\").shadowMapBias;\r\n    }\r\n    set shadowMapBias(value) {\r\n        const scope = 'shadowMapBias';\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_light, \"f\").shadowMapBias = value;\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_viewportApi, \"f\").update();\r\n    }\r\n    get shadowMapResolution() {\r\n        return __classPrivateFieldGet(this, _DirectionalLightApi_light, \"f\").shadowMapResolution;\r\n    }\r\n    set shadowMapResolution(value) {\r\n        const scope = 'shadowMapResolution';\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_inputValidator, \"f\").validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_light, \"f\").shadowMapResolution = value;\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_logger, \"f\").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        __classPrivateFieldGet(this, _DirectionalLightApi_viewportApi, \"f\").update();\r\n    }\r\n}\r\nexports.DirectionalLightApi = DirectionalLightApi;\r\n_DirectionalLightApi_inputValidator = new WeakMap(), _DirectionalLightApi_light = new WeakMap(), _DirectionalLightApi_logger = new WeakMap(), _DirectionalLightApi_viewportApi = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"DirectionalLightApi.js","sourceRoot":"","sources":["../../../../../src/implementation/viewport/lights/types/DirectionalLightApi.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAGA,0DAAuD;AACvD,+EAA4E;AAG5E,MAAa,mBAAoB,SAAQ,mCAAgB;IAQrD,4BAA4B;IAE5B,2BAA2B;IAE3B,YAAY,WAAyB,EAAE,KAAwB;QAC3D,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;QAZ7B,yBAAyB;QAEzB,8CAA2C,uCAAc,CAAC,QAAQ,EAAC;QACnE,6CAAmC;QACnC,sCAA2B,+BAAM,CAAC,QAAQ,EAAC;QAC3C,mDAAoC;QAQhC,uBAAA,IAAI,oCAAgB,WAAW,MAAA,CAAC;QAChC,uBAAA,IAAI,8BAAU,KAAK,MAAA,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC;IACvC,CAAC;IAED,8BAA8B;IAE9B,+BAA+B;IAE/B,IAAW,UAAU;QACjB,OAAO,uBAAA,IAAI,kCAAO,CAAC,UAAU,CAAC;IAClC,CAAC;IAED,IAAW,UAAU,CAAC,KAAc;QAChC,MAAM,KAAK,GAAG,YAAY,CAAC;QAC3B,uBAAA,IAAI,2CAAgB,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;QAClF,uBAAA,IAAI,kCAAO,CAAC,UAAU,GAAG,KAAK,CAAC;QAC/B,uBAAA,IAAI,mCAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,KAAK,gBAAgB,KAAK,EAAE,CAAC,CAAC;QAC5E,uBAAA,IAAI,wCAAa,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;IAED,IAAW,SAAS;QAChB,OAAO,uBAAA,IAAI,kCAAO,CAAC,SAAS,CAAC;IACjC,CAAC;IAED,IAAW,SAAS,CAAC,KAAW;QAC5B,MAAM,KAAK,GAAG,WAAW,CAAC;QAC1B,uBAAA,IAAI,2CAAgB,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAC/E,uBAAA,IAAI,kCAAO,CAAC,SAAS,GAAG,KAAK,CAAC;QAC9B,uBAAA,IAAI,mCAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,KAAK,gBAAgB,KAAK,EAAE,CAAC,CAAC;QAC5E,uBAAA,IAAI,wCAAa,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,uBAAA,IAAI,kCAAO,CAAC,aAAa,CAAC;IACrC,CAAC;IAED,IAAW,aAAa,CAAC,KAAa;QAClC,MAAM,KAAK,GAAG,eAAe,CAAC;QAC9B,uBAAA,IAAI,2CAAgB,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACjF,uBAAA,IAAI,kCAAO,CAAC,aAAa,GAAG,KAAK,CAAC;QAClC,uBAAA,IAAI,mCAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,KAAK,gBAAgB,KAAK,EAAE,CAAC,CAAC;QAC5E,uBAAA,IAAI,wCAAa,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;IAED,IAAW,mBAAmB;QAC1B,OAAO,uBAAA,IAAI,kCAAO,CAAC,mBAAmB,CAAC;IAC3C,CAAC;IAED,IAAW,mBAAmB,CAAC,KAAa;QACxC,MAAM,KAAK,GAAG,qBAAqB,CAAC;QACpC,uBAAA,IAAI,2CAAgB,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACjF,uBAAA,IAAI,kCAAO,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACxC,uBAAA,IAAI,mCAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,KAAK,gBAAgB,KAAK,EAAE,CAAC,CAAC;QAC5E,uBAAA,IAAI,wCAAa,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;CAGJ;AAxED,kDAwEC","sourcesContent":["import { vec3 } from \"gl-matrix\";\r\nimport { IDirectionalLight } from \"@shapediver/viewer.rendering-engine.light-engine\";\r\nimport { IDirectionalLightApi } from \"../../../../interfaces/viewport/lights/types/IDirectionalLightApi\";\r\nimport { AbstractLightApi } from \"../AbstractLightApi\";\r\nimport { InputValidator, Logger } from \"@shapediver/viewer.shared.services\";\r\nimport { IViewportApi } from \"../../../../interfaces/viewport/IViewportApi\";\r\n\r\nexport class DirectionalLightApi extends AbstractLightApi implements IDirectionalLightApi {\r\n    // #region Properties (4)\r\n\r\n    readonly #inputValidator: InputValidator = InputValidator.instance;\r\n    readonly #light: IDirectionalLight;\r\n    readonly #logger: Logger = Logger.instance;\r\n    readonly #viewportApi: IViewportApi;\r\n\r\n    // #endregion Properties (4)\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(viewportApi: IViewportApi, light: IDirectionalLight) {\r\n        super(viewportApi, light)\r\n        this.#viewportApi = viewportApi;\r\n        this.#light = light;\r\n        this.scope = 'DirectionalLightApi';\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Accessors (8)\r\n\r\n    public get castShadow(): boolean {\r\n        return this.#light.castShadow;\r\n    }\r\n\r\n    public set castShadow(value: boolean) {\r\n        const scope = 'castShadow';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'boolean');\r\n        this.#light.castShadow = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get direction(): vec3 {\r\n        return this.#light.direction;\r\n    }\r\n\r\n    public set direction(value: vec3) {\r\n        const scope = 'direction';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'vec3');\r\n        this.#light.direction = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get shadowMapBias(): number {\r\n        return this.#light.shadowMapBias;\r\n    }\r\n\r\n    public set shadowMapBias(value: number) {\r\n        const scope = 'shadowMapBias';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#light.shadowMapBias = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    public get shadowMapResolution(): number {\r\n        return this.#light.shadowMapResolution;\r\n    }\r\n\r\n    public set shadowMapResolution(value: number) {\r\n        const scope = 'shadowMapResolution';\r\n        this.#inputValidator.validateAndError(`${this.scope}.${scope}`, value, 'number');\r\n        this.#light.shadowMapResolution = value;\r\n        this.#logger.debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);\r\n        this.#viewportApi.update();\r\n    }\r\n\r\n    // #endregion Public Accessors (8)\r\n}"]}},"error":null,"hash":"4fb70bd9fc6a390e4bf8244a614cfd57","cacheData":{"env":{}}}