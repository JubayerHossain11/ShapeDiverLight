{"id":"node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/interpolation/interpolationMethods/CameraCylindricalInterpolation.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\interpolation\\interpolationMethods\\CameraCylindricalInterpolation.js.map","includedInParent":true,"mtime":1706527151683},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\src\\implementation\\interpolation\\interpolationMethods\\CameraCylindricalInterpolation.ts","includedInParent":true,"mtime":1706527152897},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\package.json","includedInParent":true,"mtime":1706527151358},{"name":"gl-matrix","loc":{"line":4,"column":28,"index":157},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\interpolation\\interpolationMethods\\CameraCylindricalInterpolation.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\gl-matrix\\esm\\index.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CameraCylindricalInterpolation = void 0;\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nclass CameraCylindricalInterpolation {\r\n    // #endregion Properties (10)\r\n    // #region Constructors (1)\r\n    constructor(_camera, _cameraControls, _from, _to) {\r\n        this._camera = _camera;\r\n        this._cameraControls = _cameraControls;\r\n        this._from = _from;\r\n        this._to = _to;\r\n        this._h_from = this._from.position[2] - this._from.target[2];\r\n        this._from_position_heightAdjusted = gl_matrix_1.vec3.fromValues(this._from.position[0], this._from.position[1], this._from.target[2]);\r\n        this._r_from = gl_matrix_1.vec3.distance(this._from_position_heightAdjusted, this._from.target);\r\n        this._dir_from = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), this._from_position_heightAdjusted, this._from.target));\r\n        this._h_to = this._to.position[2] - this._to.target[2];\r\n        this._to_position_heightAdjusted = gl_matrix_1.vec3.fromValues(this._to.position[0], this._to.position[1], this._to.target[2]);\r\n        this._r_to = gl_matrix_1.vec3.distance(this._to_position_heightAdjusted, this._to.target);\r\n        this._dir_to = gl_matrix_1.vec3.normalize(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), this._to_position_heightAdjusted, this._to.target));\r\n        if (this._dir_from[0] === 0 && this._dir_from[1] === 0 && this._dir_from[2] === 0)\r\n            this._dir_from = gl_matrix_1.vec3.fromValues(1, 0, 0);\r\n        if (this._dir_to[0] === 0 && this._dir_to[1] === 0 && this._dir_to[2] === 0)\r\n            this._dir_to = gl_matrix_1.vec3.fromValues(1, 0, 0);\r\n        this._lorr = gl_matrix_1.vec3.cross(gl_matrix_1.vec3.create(), this._dir_to, this._dir_from);\r\n        // This is why people hate JavaScript. The dot product of two normalized vector is larger than 1 on occasion due to precision errors...\r\n        let dot1 = Math.min(1, Math.max(-1, gl_matrix_1.vec3.dot(this._dir_to, this._dir_from)));\r\n        let dot2 = Math.min(1, Math.max(-1, gl_matrix_1.vec3.dot(this._lorr, gl_matrix_1.vec3.fromValues(0, 0, 1))));\r\n        this._shortest_angle = dot2 > 0 ? -Math.acos(dot1) : Math.acos(dot1);\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Methods (3)\r\n    onComplete(value) {\r\n        let positionOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.fromValues(this._to.position[0], this._to.position[1], this._to.position[2]), this._cameraControls.getPositionWithUpdates());\r\n        this._cameraControls.applyPositionVector(positionOffset);\r\n        let targetOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.fromValues(this._to.target[0], this._to.target[1], this._to.target[2]), this._cameraControls.getTargetWithUpdates());\r\n        this._cameraControls.applyTargetVector(targetOffset);\r\n    }\r\n    onStop(value) {\r\n    }\r\n    onUpdate(value) {\r\n        let t = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), this._from.target, gl_matrix_1.vec3.fromValues(1 - value.delta, 1 - value.delta, 1 - value.delta)), gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), this._to.target, gl_matrix_1.vec3.fromValues(value.delta, value.delta, value.delta)));\r\n        let targetOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), t, this._cameraControls.getTargetWithUpdates());\r\n        this._cameraControls.applyTargetVector(targetOffset);\r\n        let angle = this._shortest_angle * value.delta;\r\n        let dir = gl_matrix_1.vec3.transformQuat(gl_matrix_1.vec3.create(), this._dir_from, gl_matrix_1.quat.setAxisAngle(gl_matrix_1.quat.create(), gl_matrix_1.vec3.fromValues(0, 0, 1), angle));\r\n        let scalar = this._r_from * (1 - value.delta) + this._r_to * value.delta;\r\n        let p = gl_matrix_1.vec3.add(gl_matrix_1.vec3.create(), t, gl_matrix_1.vec3.multiply(gl_matrix_1.vec3.create(), dir, gl_matrix_1.vec3.fromValues(scalar, scalar, scalar)));\r\n        gl_matrix_1.vec3.add(p, p, gl_matrix_1.vec3.fromValues(0, 0, (this._h_from * (1 - value.delta) + this._h_to * value.delta)));\r\n        let positionOffset = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), p, this._cameraControls.getPositionWithUpdates());\r\n        this._cameraControls.applyPositionVector(positionOffset);\r\n    }\r\n}\r\nexports.CameraCylindricalInterpolation = CameraCylindricalInterpolation;\r\n"},"sourceMaps":{"js":{"version":3,"file":"CameraCylindricalInterpolation.js","sourceRoot":"","sources":["../../../../src/implementation/interpolation/interpolationMethods/CameraCylindricalInterpolation.ts"],"names":[],"mappings":"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","sourcesContent":["import { mat4, quat, vec3 } from 'gl-matrix'\r\n\r\nimport { ICamera } from '../../../interfaces/camera/ICamera'\r\nimport { ICameraControlsUsage } from '../../../interfaces/controls/ICameraControlsUsage'\r\nimport { ICameraInterpolation } from '../../../interfaces/interpolation/ICameraInterpolation'\r\n\r\nexport class CameraCylindricalInterpolation implements ICameraInterpolation {\r\n    // #region Properties (10)\r\n\r\n    private _dir_from: vec3;\r\n    private _dir_to: vec3;\r\n    private _from_position_heightAdjusted: vec3;\r\n    private _h_from: number;\r\n    private _h_to: number;\r\n    private _lorr: vec3;\r\n    private _r_from: number;\r\n    private _r_to: number;\r\n    private _shortest_angle: number;\r\n    private _to_position_heightAdjusted: vec3;\r\n\r\n    // #endregion Properties (10)\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(\r\n        private readonly _camera: ICamera,\r\n        private readonly _cameraControls: ICameraControlsUsage,\r\n        private readonly _from: { position: vec3, target: vec3 },\r\n        private readonly _to: { position: vec3, target: vec3 }) \r\n    {\r\n        this._h_from = this._from.position[2] - this._from.target[2];\r\n        this._from_position_heightAdjusted = vec3.fromValues(this._from.position[0], this._from.position[1], this._from.target[2]);\r\n        this._r_from = vec3.distance(this._from_position_heightAdjusted, this._from.target);\r\n        this._dir_from = vec3.normalize(vec3.create(), vec3.subtract(vec3.create(), this._from_position_heightAdjusted, this._from.target));\r\n\r\n        this._h_to = this._to.position[2] - this._to.target[2];\r\n        this._to_position_heightAdjusted = vec3.fromValues(this._to.position[0], this._to.position[1], this._to.target[2]);\r\n        this._r_to = vec3.distance(this._to_position_heightAdjusted, this._to.target);\r\n        this._dir_to = vec3.normalize(vec3.create(), vec3.subtract(vec3.create(), this._to_position_heightAdjusted, this._to.target));\r\n\r\n        if (this._dir_from[0] === 0 && this._dir_from[1] === 0 && this._dir_from[2] === 0)\r\n            this._dir_from = vec3.fromValues(1,0,0);\r\n\r\n        if (this._dir_to[0] === 0 && this._dir_to[1] === 0 && this._dir_to[2] === 0)\r\n            this._dir_to = vec3.fromValues(1,0,0);\r\n\r\n        this._lorr = vec3.cross(vec3.create(), this._dir_to, this._dir_from);\r\n        // This is why people hate JavaScript. The dot product of two normalized vector is larger than 1 on occasion due to precision errors...\r\n        let dot1 = Math.min(1, Math.max(-1, vec3.dot(this._dir_to, this._dir_from))); \r\n        let dot2 = Math.min(1, Math.max(-1, vec3.dot(this._lorr, vec3.fromValues(0, 0, 1)))); \r\n        this._shortest_angle = dot2 > 0 ? -Math.acos(dot1) : Math.acos(dot1);\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Methods (3)\r\n\r\n    public onComplete(value: { delta: number }): void {\r\n        let positionOffset = vec3.subtract(vec3.create(), vec3.fromValues(this._to.position[0], this._to.position[1], this._to.position[2]), this._cameraControls.getPositionWithUpdates());\r\n        this._cameraControls.applyPositionVector(positionOffset);\r\n        let targetOffset = vec3.subtract(vec3.create(), vec3.fromValues(this._to.target[0], this._to.target[1], this._to.target[2]), this._cameraControls.getTargetWithUpdates());\r\n        this._cameraControls.applyTargetVector(targetOffset);\r\n    }\r\n\r\n    public onStop(value: { delta: number }): void {\r\n    }\r\n\r\n    public onUpdate(value: { delta: number }): void {\r\n        let t = vec3.add(vec3.create(), vec3.multiply(vec3.create(), this._from.target, vec3.fromValues(1 - value.delta, 1 - value.delta, 1 - value.delta)), vec3.multiply(vec3.create(), this._to.target, vec3.fromValues(value.delta, value.delta, value.delta)));\r\n        let targetOffset = vec3.subtract(vec3.create(), t, this._cameraControls.getTargetWithUpdates());\r\n        this._cameraControls.applyTargetVector(targetOffset);\r\n\r\n        let angle = this._shortest_angle * value.delta;\r\n        let dir = vec3.transformQuat(vec3.create(), this._dir_from, quat.setAxisAngle(quat.create(), vec3.fromValues(0, 0, 1), angle));\r\n        \r\n\r\n        let scalar = this._r_from * (1 - value.delta) + this._r_to * value.delta;\r\n        let p = vec3.add(vec3.create(), t, vec3.multiply(vec3.create(), dir, vec3.fromValues(scalar, scalar, scalar)));\r\n        vec3.add(p, p, vec3.fromValues(0, 0, (this._h_from * (1 - value.delta) + this._h_to * value.delta)));\r\n\r\n        let positionOffset = vec3.subtract(vec3.create(), p, this._cameraControls.getPositionWithUpdates());\r\n        this._cameraControls.applyPositionVector(positionOffset);\r\n    }\r\n\r\n    // #endregion Public Methods (3)\r\n}"]}},"error":null,"hash":"3c150b0e5a1cf253ed6ae4524cc3e931","cacheData":{"env":{}}}