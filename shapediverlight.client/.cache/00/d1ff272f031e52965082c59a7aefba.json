{"id":"node_modules/@shapediver/sdk.geometry-api-sdk-v2/dist/resources/ShapeDiverAssetApi.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\dist\\resources\\ShapeDiverAssetApi.js.map","includedInParent":true,"mtime":1706542085555},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\package.json","includedInParent":true,"mtime":1706542085132},{"name":"@shapediver/sdk.geometry-api-sdk-core","loc":{"line":13,"column":44,"index":839},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\dist\\resources\\ShapeDiverAssetApi.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.geometry-api-sdk-core\\dist\\index.js"},{"name":"../utils/utils","loc":{"line":14,"column":24,"index":905},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\dist\\resources\\ShapeDiverAssetApi.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\dist\\utils\\utils.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShapeDiverAssetApi = void 0;\nconst sdk_geometry_api_sdk_core_1 = require(\"@shapediver/sdk.geometry-api-sdk-core\");\nconst utils_1 = require(\"../utils/utils\");\nconst apiAssetExportUri = /.+\\/session\\/.+\\/export\\/.+/;\nconst apiAssetOutputUri = /.+\\/session\\/.+\\/output\\/.+/;\nconst apiAssetTextureUri = /.+\\/session\\/.+\\/texture\\/.+/;\nconst cdnAssetUri = /.+\\/cdn-asset-(exports|outputs|textures)\\/.+/;\nconst cdnAssetExportUri = /.+\\/cdn-asset-exports\\/.+/;\nconst cdnAssetOutputUri = /.+\\/cdn-asset-outputs\\/.+/;\nconst cdnAssetTextureUri = /.+\\/cdn-asset-textures\\/.+/;\nclass ShapeDiverAssetApi extends sdk_geometry_api_sdk_core_1.BaseResourceApi {\n    constructor(api) {\n        super(api);\n    }\n    /**\n     * Download an export.\n     *\n     * @param sessionId\n     * @param assetData\n     */\n    getExport(sessionId, assetData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                const [header, data] = yield this.api.get(`${this.buildSessionUri(sessionId)}/export/${assetData}`, { responseType: sdk_geometry_api_sdk_core_1.ShapeDiverSdkApiResponseType.DATA });\n                const contentType = (_a = header[\"Content-Type\"]) !== null && _a !== void 0 ? _a : header[\"content-type\"];\n                return [data, contentType];\n            }));\n        });\n    }\n    /**\n     * Download an output.\n     *\n     * @param sessionId\n     * @param assetData\n     */\n    getOutput(sessionId, assetData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                const [header, data] = yield this.api.get(`${this.buildSessionUri(sessionId)}/output/${assetData}`, { responseType: sdk_geometry_api_sdk_core_1.ShapeDiverSdkApiResponseType.DATA });\n                const contentType = (_a = header[\"Content-Type\"]) !== null && _a !== void 0 ? _a : header[\"content-type\"];\n                return [data, contentType];\n            }));\n        });\n    }\n    /**\n     * Downloads the JSON content part of a sdTF output.\n     *\n     * @param sessionId\n     * @param assetData\n     */\n    getSdtfJsonContent(sessionId, assetData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                return (yield this.api.get(`${this.buildSessionUri(sessionId)}/output/${assetData}`, {\n                    responseType: sdk_geometry_api_sdk_core_1.ShapeDiverSdkApiResponseType.JSON,\n                    accept: \"model/vnd.sdtf+json\",\n                }))[1];\n            }));\n        });\n    }\n    /**\n     * Download a texture file.\n     *\n     * @param sessionId\n     * @param assetData\n     */\n    getTexture(sessionId, assetData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                const [header, data] = yield this.api.get(`${this.buildSessionUri(sessionId)}/texture/${assetData}`, { responseType: sdk_geometry_api_sdk_core_1.ShapeDiverSdkApiResponseType.DATA });\n                const contentType = (_a = header[\"Content-Type\"]) !== null && _a !== void 0 ? _a : header[\"content-type\"];\n                return [data, contentType];\n            }));\n        });\n    }\n    /**\n     * Download a glTF file.\n     *\n     * @param sessionId\n     * @param assetData\n     */\n    getGltf(sessionId, assetData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                return (yield this.api.get(`${this.buildSessionUri(sessionId)}/gltf/${assetData}`, { responseType: sdk_geometry_api_sdk_core_1.ShapeDiverSdkApiResponseType.DATA }))[1];\n            }));\n        });\n    }\n    /**\n     * Download a USDZ file.\n     *\n     * @param sessionId\n     * @param assetData\n     */\n    getUsdz(sessionId, assetData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                return (yield this.api.get(`${this.buildSessionUri(sessionId)}/usdz/${assetData}`, { responseType: sdk_geometry_api_sdk_core_1.ShapeDiverSdkApiResponseType.DATA }))[1];\n            }));\n        });\n    }\n    /**\n     * Download an image.\n     *\n     * @param sessionId\n     * @param url - The URL of the image that should be downloaded.\n     * @returns Array of size 2: [0] = content data, [1] = content type.\n     */\n    downloadImage(sessionId, url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let targetUrl;\n            if (apiAssetTextureUri.test(url) || cdnAssetTextureUri.test(url)) {\n                // Call ShapeDiver texture-asset URLs directly\n                targetUrl = url;\n            }\n            else {\n                // All other source URLs are called via the download-image endpoint\n                targetUrl = `${this.buildSessionUri(sessionId)}/image?url=${(0, utils_1.encodeBase64)(url)}`;\n            }\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                const [header, data] = yield this.api.get(targetUrl, {\n                    responseType: sdk_geometry_api_sdk_core_1.ShapeDiverSdkApiResponseType.DATA,\n                    disableAuthorization: cdnAssetUri.test(url), // disable for CDN URLs\n                });\n                const contentType = (_a = header[\"Content-Type\"]) !== null && _a !== void 0 ? _a : header[\"content-type\"];\n                return [data, contentType];\n            }));\n        });\n    }\n    /**\n     * Fetches a ShapeDiver asset of the following types:\n     *  * Output\n     *  * Export\n     *  * Texture\n     *\n     * This function works similar to {@link getOutput}, {@link getExport} and {@link getTexture}, but does not require\n     * extracted _session ID_ and _asset data_ parameters.\n     *\n     * @param url - The URL of the asset that should be fetched.\n     * @returns Array of size 3: [0] = content data, [1] = content type, [2] = asset type.\n     * @throws {@link ShapeDiverError} when the given URL is not a valid ShapeDiver asset URL.\n     */\n    getAsset(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let type;\n            // Check if the given URL is a valid API or CDN asset URL\n            if (apiAssetExportUri.test(url) || cdnAssetExportUri.test(url))\n                type = \"export\";\n            else if (apiAssetOutputUri.test(url) || cdnAssetOutputUri.test(url))\n                type = \"output\";\n            else if (apiAssetTextureUri.test(url) || cdnAssetTextureUri.test(url))\n                type = \"texture\";\n            else\n                throw new sdk_geometry_api_sdk_core_1.ShapeDiverError(\"Cannot fetch asset: Invalid URL (only ShapeDiver asset URLs are allowed).\");\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                const [header, data] = yield this.api.get(url, {\n                    responseType: sdk_geometry_api_sdk_core_1.ShapeDiverSdkApiResponseType.DATA,\n                    disableAuthorization: cdnAssetUri.test(url), // disable for CDN URLs\n                });\n                const contentType = (_a = header[\"Content-Type\"]) !== null && _a !== void 0 ? _a : header[\"content-type\"];\n                return [data, contentType, type];\n            }));\n        });\n    }\n}\nexports.ShapeDiverAssetApi = ShapeDiverAssetApi;\n"},"sourceMaps":{"js":{"version":3,"file":"ShapeDiverAssetApi.js","sourceRoot":"","sources":["../../src/resources/ShapeDiverAssetApi.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qFAK8C;AAC9C,0CAA0D;AAE1D,MAAM,iBAAiB,GAAG,6BAA6B,CAAA;AACvD,MAAM,iBAAiB,GAAG,6BAA6B,CAAA;AACvD,MAAM,kBAAkB,GAAG,8BAA8B,CAAA;AAEzD,MAAM,WAAW,GAAG,8CAA8C,CAAA;AAClE,MAAM,iBAAiB,GAAG,2BAA2B,CAAA;AACrD,MAAM,iBAAiB,GAAG,2BAA2B,CAAA;AACrD,MAAM,kBAAkB,GAAG,4BAA4B,CAAA;AAEvD,MAAa,kBAAmB,SAAQ,2CAAe;IAEnD,YAAa,GAAqB;QAC9B,KAAK,CAAC,GAAG,CAAC,CAAA;IACd,CAAC;IAED;;;;;OAKG;IACG,SAAS,CAAE,SAAiB,EAAE,SAAiB;;YACjD,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAS,EAAE;;gBAChC,MAAM,CAAE,MAAM,EAAE,IAAI,CAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CACvC,GAAI,IAAI,CAAC,eAAe,CAAC,SAAS,CAAE,WAAY,SAAU,EAAE,EAC5D,EAAE,YAAY,EAAE,wDAA4B,CAAC,IAAI,EAAE,CACtD,CAAA;gBACD,MAAM,WAAW,GAAG,MAAA,MAAM,CAAC,cAAc,CAAC,mCAAI,MAAM,CAAC,cAAc,CAAC,CAAA;gBACpE,OAAO,CAAE,IAAI,EAAE,WAAW,CAAE,CAAA;YAChC,CAAC,CAAA,CAAC,CAAA;QACN,CAAC;KAAA;IAED;;;;;OAKG;IACG,SAAS,CAAE,SAAiB,EAAE,SAAiB;;YACjD,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAS,EAAE;;gBAChC,MAAM,CAAE,MAAM,EAAE,IAAI,CAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CACvC,GAAI,IAAI,CAAC,eAAe,CAAC,SAAS,CAAE,WAAY,SAAU,EAAE,EAC5D,EAAE,YAAY,EAAE,wDAA4B,CAAC,IAAI,EAAE,CACtD,CAAA;gBACD,MAAM,WAAW,GAAG,MAAA,MAAM,CAAC,cAAc,CAAC,mCAAI,MAAM,CAAC,cAAc,CAAC,CAAA;gBACpE,OAAO,CAAE,IAAI,EAAE,WAAW,CAAE,CAAA;YAChC,CAAC,CAAA,CAAC,CAAA;QACN,CAAC;KAAA;IAED;;;;;OAKG;IACG,kBAAkB,CAAE,SAAiB,EAAE,SAAiB;;YAC1D,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAS,EAAE;gBAChC,OAAA,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CACf,GAAI,IAAI,CAAC,eAAe,CAAC,SAAS,CAAE,WAAY,SAAU,EAAE,EAC5D;oBACI,YAAY,EAAE,wDAA4B,CAAC,IAAI;oBAC/C,MAAM,EAAE,qBAAqB;iBAChC,CACJ,CAAC,CAAC,CAAC,CAAC,CAAA;cAAA,CACR,CAAA;QACL,CAAC;KAAA;IAED;;;;;OAKG;IACG,UAAU,CAAE,SAAiB,EAAE,SAAiB;;YAClD,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAS,EAAE;;gBAChC,MAAM,CAAE,MAAM,EAAE,IAAI,CAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CACvC,GAAI,IAAI,CAAC,eAAe,CAAC,SAAS,CAAE,YAAa,SAAU,EAAE,EAC7D,EAAE,YAAY,EAAE,wDAA4B,CAAC,IAAI,EAAE,CACtD,CAAA;gBACD,MAAM,WAAW,GAAG,MAAA,MAAM,CAAC,cAAc,CAAC,mCAAI,MAAM,CAAC,cAAc,CAAC,CAAA;gBACpE,OAAO,CAAE,IAAI,EAAE,WAAW,CAAE,CAAA;YAChC,CAAC,CAAA,CAAC,CAAA;QACN,CAAC;KAAA;IAED;;;;;OAKG;IACG,OAAO,CAAE,SAAiB,EAAE,SAAiB;;YAC/C,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAS,EAAE;gBAChC,OAAA,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CACf,GAAI,IAAI,CAAC,eAAe,CAAC,SAAS,CAAE,SAAU,SAAU,EAAE,EAC1D,EAAE,YAAY,EAAE,wDAA4B,CAAC,IAAI,EAAE,CACtD,CAAC,CAAC,CAAC,CAAC,CAAA;cAAA,CACR,CAAA;QACL,CAAC;KAAA;IAED;;;;;OAKG;IACG,OAAO,CAAE,SAAiB,EAAE,SAAiB;;YAC/C,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAS,EAAE;gBAChC,OAAA,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CACf,GAAI,IAAI,CAAC,eAAe,CAAC,SAAS,CAAE,SAAU,SAAU,EAAE,EAC1D,EAAE,YAAY,EAAE,wDAA4B,CAAC,IAAI,EAAE,CACtD,CAAC,CAAC,CAAC,CAAC,CAAA;cAAA,CACR,CAAA;QACL,CAAC;KAAA;IAED;;;;;;OAMG;IACG,aAAa,CAAE,SAAiB,EAAE,GAAW;;YAC/C,IAAI,SAAiB,CAAA;YAErB,IAAI,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAC9D,8CAA8C;gBAC9C,SAAS,GAAG,GAAG,CAAA;aAClB;iBAAM;gBACH,mEAAmE;gBACnE,SAAS,GAAG,GAAI,IAAI,CAAC,eAAe,CAAC,SAAS,CAAE,cAAe,IAAA,oBAAY,EAAC,GAAG,CAAE,EAAE,CAAA;aACtF;YAED,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAS,EAAE;;gBAChC,MAAM,CAAE,MAAM,EAAE,IAAI,CAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CACvC,SAAS,EACT;oBACI,YAAY,EAAE,wDAA4B,CAAC,IAAI;oBAC/C,oBAAoB,EAAE,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAK,uBAAuB;iBAC1E,CACJ,CAAA;gBACD,MAAM,WAAW,GAAG,MAAA,MAAM,CAAC,cAAc,CAAC,mCAAI,MAAM,CAAC,cAAc,CAAC,CAAA;gBACpE,OAAO,CAAE,IAAI,EAAE,WAAW,CAAE,CAAA;YAChC,CAAC,CAAA,CAAC,CAAA;QACN,CAAC;KAAA;IAED;;;;;;;;;;;;OAYG;IACG,QAAQ,CAAE,GAAW;;YACvB,IAAI,IAAqC,CAAA;YAEzC,yDAAyD;YACzD,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC;gBAAE,IAAI,GAAG,QAAQ,CAAA;iBAC1E,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC;gBAAE,IAAI,GAAG,QAAQ,CAAA;iBAC/E,IAAI,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC;gBAAE,IAAI,GAAG,SAAS,CAAA;;gBAClF,MAAM,IAAI,2CAAe,CAAC,2EAA2E,CAAC,CAAA;YAE3G,OAAO,MAAM,IAAA,mBAAW,EAAC,GAAS,EAAE;;gBAChC,MAAM,CAAE,MAAM,EAAE,IAAI,CAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CACvC,GAAG,EACH;oBACI,YAAY,EAAE,wDAA4B,CAAC,IAAI;oBAC/C,oBAAoB,EAAE,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAK,uBAAuB;iBAC1E,CACJ,CAAA;gBACD,MAAM,WAAW,GAAG,MAAA,MAAM,CAAC,cAAc,CAAC,mCAAI,MAAM,CAAC,cAAc,CAAC,CAAA;gBACpE,OAAO,CAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAE,CAAA;YACtC,CAAC,CAAA,CAAC,CAAA;QACN,CAAC;KAAA;CAEJ;AA3KD,gDA2KC","sourcesContent":[null]}},"error":null,"hash":"acace342bed37473fa3c0e6cbb9e119d","cacheData":{"env":{}}}