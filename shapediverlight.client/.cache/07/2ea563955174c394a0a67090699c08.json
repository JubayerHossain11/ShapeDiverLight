{"id":"node_modules/@shapediver/viewer.shared.types/dist/implementation/data/BoneData.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\data\\BoneData.js.map","includedInParent":true,"mtime":1706542086475},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\src\\implementation\\data\\BoneData.ts","includedInParent":true,"mtime":1706542087114},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\package.json","includedInParent":true,"mtime":1706542086386},{"name":"@shapediver/viewer.shared.node-tree","loc":{"line":4,"column":42,"index":149},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\data\\BoneData.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.node-tree\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BoneData = void 0;\r\nconst viewer_shared_node_tree_1 = require(\"@shapediver/viewer.shared.node-tree\");\r\nclass BoneData extends viewer_shared_node_tree_1.AbstractTreeNodeData {\r\n    // #region Constructors (1)\r\n    /**\r\n     * Creates a Bone data node.\r\n     *\r\n     * @param id the id\r\n     */\r\n    constructor(id, version) {\r\n        super(id, version);\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Methods (1)\r\n    /**\r\n     * Clones the scene graph data.\r\n     */\r\n    clone() {\r\n        return new BoneData(this.id, this.version);\r\n    }\r\n}\r\nexports.BoneData = BoneData;\r\n"},"sourceMaps":{"js":{"version":3,"file":"BoneData.js","sourceRoot":"","sources":["../../../src/implementation/data/BoneData.ts"],"names":[],"mappings":";;;AAAA,iFAAyF;AAGzF,MAAa,QAAS,SAAQ,8CAAoB;IAE9C,2BAA2B;IAE3B;;;;OAIG;IACH,YACI,EAAW,EACX,OAAgB;QAEhB,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IACvB,CAAC;IAED,8BAA8B;IAE9B,6BAA6B;IAE7B;;OAEG;IACI,KAAK;QACR,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC;CAGJ;AA5BD,4BA4BC","sourcesContent":["import { AbstractTreeNodeData, ITreeNodeData } from '@shapediver/viewer.shared.node-tree'\r\nimport { IBoneData } from '../../interfaces/data/IBoneData';\r\n\r\nexport class BoneData extends AbstractTreeNodeData implements IBoneData {\r\n\r\n    // #region Constructors (1)\r\n\r\n    /**\r\n     * Creates a Bone data node.\r\n     * \r\n     * @param id the id\r\n     */\r\n    constructor(\r\n        id?: string,\r\n        version?: string\r\n    ) {\r\n        super(id, version);\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Methods (1)\r\n\r\n    /**\r\n     * Clones the scene graph data.\r\n     */\r\n    public clone(): IBoneData {\r\n        return new BoneData(this.id, this.version);\r\n    }\r\n\r\n    // #endregion Public Methods (1)\r\n}\r\n"]}},"error":null,"hash":"8f5dc16d64120a8a45caa9f90e11f740","cacheData":{"env":{}}}