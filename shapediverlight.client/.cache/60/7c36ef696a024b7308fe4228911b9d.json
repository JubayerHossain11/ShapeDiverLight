{"id":"node_modules/@shapediver/viewer.shared.types/dist/implementation/material/MaterialGemData.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\material\\MaterialGemData.js.map","includedInParent":true,"mtime":1706542086957},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\src\\implementation\\material\\MaterialGemData.ts","includedInParent":true,"mtime":1706542087444},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\package.json","includedInParent":true,"mtime":1706542086386},{"name":"./AbstractMaterialData","loc":{"line":16,"column":39,"index":1701},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\material\\MaterialGemData.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\material\\AbstractMaterialData.js"},{"name":"../../interfaces/data/material/IMaterialAbstractData","loc":{"line":17,"column":40,"index":1769},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\material\\MaterialGemData.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\dist\\interfaces\\data\\material\\IMaterialAbstractData.js"},{"name":"gl-matrix","loc":{"line":18,"column":28,"index":1855},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\material\\MaterialGemData.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\gl-matrix\\esm\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _MaterialGemData_refractionIndex, _MaterialGemData_impurityMap, _MaterialGemData_impurityScale, _MaterialGemData_colorTransferBegin, _MaterialGemData_colorTransferEnd, _MaterialGemData_center, _MaterialGemData_radius, _MaterialGemData_sphericalNormalMap, _MaterialGemData_gamma, _MaterialGemData_contrast, _MaterialGemData_brightness, _MaterialGemData_dispersion, _MaterialGemData_tracingDepth, _MaterialGemData_tracingOpacity, _MaterialGemData_envMap;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MaterialGemData = void 0;\r\nconst AbstractMaterialData_1 = require(\"./AbstractMaterialData\");\r\nconst IMaterialAbstractData_1 = require(\"../../interfaces/data/material/IMaterialAbstractData\");\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nclass MaterialGemData extends AbstractMaterialData_1.AbstractMaterialData {\r\n    // #endregion Properties (5)\r\n    // #region Constructors (1)\r\n    /**\r\n     * Creates a material data object.\r\n     *\r\n     * @param _attributes the attributes of the material\r\n     * @param id the id\r\n     */\r\n    constructor(properties, id, version) {\r\n        super(properties, id, version);\r\n        // #region Properties (5)\r\n        _MaterialGemData_refractionIndex.set(this, 2.4);\r\n        _MaterialGemData_impurityMap.set(this, void 0);\r\n        _MaterialGemData_impurityScale.set(this, 1.0);\r\n        _MaterialGemData_colorTransferBegin.set(this, '#ffffff');\r\n        _MaterialGemData_colorTransferEnd.set(this, '#ffffff');\r\n        _MaterialGemData_center.set(this, gl_matrix_1.vec3.create());\r\n        _MaterialGemData_radius.set(this, 1);\r\n        _MaterialGemData_sphericalNormalMap.set(this, void 0);\r\n        _MaterialGemData_gamma.set(this, 1);\r\n        _MaterialGemData_contrast.set(this, 1);\r\n        _MaterialGemData_brightness.set(this, 0);\r\n        _MaterialGemData_dispersion.set(this, 0);\r\n        _MaterialGemData_tracingDepth.set(this, 5);\r\n        _MaterialGemData_tracingOpacity.set(this, 0);\r\n        _MaterialGemData_envMap.set(this, void 0);\r\n        if (!properties)\r\n            return;\r\n        if (properties.refractionIndex !== undefined)\r\n            this.refractionIndex = properties.refractionIndex;\r\n        if (properties.impurityMap !== undefined)\r\n            this.impurityMap = properties.impurityMap;\r\n        if (properties.impurityScale !== undefined)\r\n            this.impurityScale = properties.impurityScale;\r\n        if (properties.colorTransferBegin !== undefined)\r\n            this.colorTransferBegin = properties.colorTransferBegin;\r\n        if (properties.colorTransferEnd !== undefined)\r\n            this.colorTransferEnd = properties.colorTransferEnd;\r\n        if (properties.center !== undefined)\r\n            this.center = properties.center;\r\n        if (properties.tracingDepth !== undefined)\r\n            this.tracingDepth = properties.tracingDepth;\r\n        if (properties.radius !== undefined)\r\n            this.radius = properties.radius;\r\n        if (properties.sphericalNormalMap !== undefined)\r\n            this.sphericalNormalMap = properties.sphericalNormalMap;\r\n        if (properties.gamma !== undefined)\r\n            this.gamma = properties.gamma;\r\n        if (properties.contrast !== undefined)\r\n            this.contrast = properties.contrast;\r\n        if (properties.brightness !== undefined)\r\n            this.brightness = properties.brightness;\r\n        if (properties.dispersion !== undefined)\r\n            this.dispersion = properties.dispersion;\r\n        if (properties.tracingOpacity !== undefined)\r\n            this.tracingOpacity = properties.tracingOpacity;\r\n        if (properties.envMap !== undefined)\r\n            this.envMap = properties.envMap;\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (10)\r\n    get refractionIndex() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_refractionIndex, \"f\");\r\n    }\r\n    set refractionIndex(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_refractionIndex, value, \"f\");\r\n    }\r\n    get impurityMap() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_impurityMap, \"f\");\r\n    }\r\n    set impurityMap(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_impurityMap, value, \"f\");\r\n    }\r\n    get impurityScale() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_impurityScale, \"f\");\r\n    }\r\n    set impurityScale(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_impurityScale, value, \"f\");\r\n    }\r\n    get colorTransferBegin() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_colorTransferBegin, \"f\");\r\n    }\r\n    set colorTransferBegin(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_colorTransferBegin, value, \"f\");\r\n    }\r\n    get colorTransferEnd() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_colorTransferEnd, \"f\");\r\n    }\r\n    set colorTransferEnd(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_colorTransferEnd, value, \"f\");\r\n    }\r\n    get center() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_center, \"f\");\r\n    }\r\n    set center(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_center, value, \"f\");\r\n    }\r\n    get tracingDepth() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_tracingDepth, \"f\");\r\n    }\r\n    set tracingDepth(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_tracingDepth, value, \"f\");\r\n    }\r\n    get radius() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_radius, \"f\");\r\n    }\r\n    set radius(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_radius, value, \"f\");\r\n    }\r\n    get sphericalNormalMap() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_sphericalNormalMap, \"f\");\r\n    }\r\n    set sphericalNormalMap(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_sphericalNormalMap, value, \"f\");\r\n    }\r\n    get gamma() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_gamma, \"f\");\r\n    }\r\n    set gamma(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_gamma, value, \"f\");\r\n    }\r\n    get contrast() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_contrast, \"f\");\r\n    }\r\n    set contrast(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_contrast, value, \"f\");\r\n    }\r\n    get brightness() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_brightness, \"f\");\r\n    }\r\n    set brightness(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_brightness, value, \"f\");\r\n    }\r\n    get dispersion() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_dispersion, \"f\");\r\n    }\r\n    set dispersion(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_dispersion, value, \"f\");\r\n    }\r\n    get tracingOpacity() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_tracingOpacity, \"f\");\r\n    }\r\n    set tracingOpacity(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_tracingOpacity, value, \"f\");\r\n    }\r\n    get envMap() {\r\n        return __classPrivateFieldGet(this, _MaterialGemData_envMap, \"f\");\r\n    }\r\n    set envMap(value) {\r\n        __classPrivateFieldSet(this, _MaterialGemData_envMap, value, \"f\");\r\n    }\r\n    // #endregion Public Accessors (10)\r\n    // #region Public Methods (3)\r\n    clone() {\r\n        return new MaterialGemData({\r\n            alphaMap: this.alphaMap,\r\n            alphaCutoff: this.alphaCutoff,\r\n            alphaMode: this.alphaMode,\r\n            aoMap: this.aoMap,\r\n            aoMapIntensity: this.aoMapIntensity,\r\n            bumpMap: this.bumpMap,\r\n            bumpScale: this.bumpScale,\r\n            color: this.color,\r\n            emissiveMap: this.emissiveMap,\r\n            emissiveness: this.emissiveness,\r\n            shading: this.shading,\r\n            map: this.map,\r\n            name: this.name,\r\n            normalMap: this.normalMap,\r\n            normalScale: this.normalScale,\r\n            opacity: this.opacity,\r\n            side: this.side,\r\n            refractionIndex: this.refractionIndex,\r\n            impurityMap: this.impurityMap,\r\n            impurityScale: this.impurityScale,\r\n            colorTransferBegin: this.colorTransferBegin,\r\n            colorTransferEnd: this.colorTransferEnd,\r\n            center: this.center,\r\n            tracingDepth: this.tracingDepth,\r\n            radius: this.radius,\r\n            sphericalNormalMap: this.sphericalNormalMap,\r\n            gamma: this.gamma,\r\n            contrast: this.contrast,\r\n            brightness: this.brightness,\r\n            dispersion: this.dispersion,\r\n            tracingOpacity: this.tracingOpacity,\r\n            envMap: this.envMap,\r\n        }, this.id, this.version);\r\n    }\r\n    copy(source) {\r\n        this.alphaCutoff = source.alphaCutoff;\r\n        this.alphaMap = source.alphaMap;\r\n        this.alphaMode = source.alphaMode;\r\n        this.aoMap = source.aoMap;\r\n        this.aoMapIntensity = source.aoMapIntensity;\r\n        this.bumpMap = source.bumpMap;\r\n        this.bumpScale = source.bumpScale;\r\n        this.color = source.color;\r\n        this.emissiveMap = source.emissiveMap;\r\n        this.emissiveness = source.emissiveness;\r\n        this.materialOutput = source.materialOutput;\r\n        this.map = source.map;\r\n        this.normalMap = source.normalMap;\r\n        this.normalScale = source.normalScale;\r\n        this.opacity = source.opacity;\r\n        this.shading = source.shading;\r\n        this.side = source.side;\r\n        this.refractionIndex = this.refractionIndex;\r\n        this.impurityMap = this.impurityMap;\r\n        this.impurityScale = this.impurityScale;\r\n        this.colorTransferBegin = this.colorTransferBegin;\r\n        this.colorTransferEnd = this.colorTransferEnd;\r\n        this.center = this.center;\r\n        this.tracingDepth = this.tracingDepth;\r\n        this.radius = this.radius;\r\n        this.sphericalNormalMap = this.sphericalNormalMap;\r\n        this.gamma = this.gamma;\r\n        this.contrast = this.contrast;\r\n        this.brightness = this.brightness;\r\n        this.dispersion = this.dispersion;\r\n        this.tracingOpacity = this.tracingOpacity;\r\n        this.envMap = source.envMap;\r\n    }\r\n    reset() {\r\n        this.alphaCutoff = 0;\r\n        this.alphaMap = undefined;\r\n        this.alphaMode = IMaterialAbstractData_1.MATERIAL_ALPHA.OPAQUE;\r\n        this.aoMap = undefined;\r\n        this.aoMapIntensity = 1.0;\r\n        this.bumpMap = undefined;\r\n        this.bumpScale = 1.0;\r\n        this.color = '#ffffff';\r\n        this.emissiveMap = undefined;\r\n        this.emissiveness = '#000000';\r\n        this.materialOutput = false;\r\n        this.map = undefined;\r\n        this.normalMap = undefined;\r\n        this.normalScale = 1.0;\r\n        this.opacity = 1.0;\r\n        this.shading = IMaterialAbstractData_1.MATERIAL_SHADING.SMOOTH;\r\n        this.side = IMaterialAbstractData_1.MATERIAL_SIDE.DOUBLE;\r\n        this.refractionIndex = 2.4;\r\n        this.impurityMap = undefined;\r\n        this.impurityScale = 1.0;\r\n        this.colorTransferBegin = '#ffffff';\r\n        this.colorTransferEnd = '#ffffff';\r\n        this.center = gl_matrix_1.vec3.create();\r\n        this.radius = 1;\r\n        this.sphericalNormalMap = undefined;\r\n        this.gamma = 1;\r\n        this.contrast = 1;\r\n        this.brightness = 0;\r\n        this.dispersion = 0;\r\n        this.tracingDepth = 5;\r\n        this.tracingOpacity = 0;\r\n        this.envMap = undefined;\r\n    }\r\n}\r\nexports.MaterialGemData = MaterialGemData;\r\n_MaterialGemData_refractionIndex = new WeakMap(), _MaterialGemData_impurityMap = new WeakMap(), _MaterialGemData_impurityScale = new WeakMap(), _MaterialGemData_colorTransferBegin = new WeakMap(), _MaterialGemData_colorTransferEnd = new WeakMap(), _MaterialGemData_center = new WeakMap(), _MaterialGemData_radius = new WeakMap(), _MaterialGemData_sphericalNormalMap = new WeakMap(), _MaterialGemData_gamma = new WeakMap(), _MaterialGemData_contrast = new WeakMap(), _MaterialGemData_brightness = new WeakMap(), _MaterialGemData_dispersion = new WeakMap(), _MaterialGemData_tracingDepth = new WeakMap(), _MaterialGemData_tracingOpacity = new WeakMap(), _MaterialGemData_envMap = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"MaterialGemData.js","sourceRoot":"","sources":["../../../src/implementation/material/MaterialGemData.ts"],"names":[],"mappings":"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","sourcesContent":["import { AbstractMaterialData } from './AbstractMaterialData';\r\nimport { IMaterialGemData, IMaterialGemDataProperties } from '../../interfaces/data/material/IMaterialGemDataProperties';\r\nimport { MATERIAL_ALPHA, MATERIAL_SHADING, MATERIAL_SIDE } from '../../interfaces/data/material/IMaterialAbstractData';\r\nimport { IMapData } from '../../interfaces/data/material/IMapData';\r\nimport { mat3, mat4, vec3 } from 'gl-matrix';\r\nimport { Color } from '../../types';\r\n\r\nexport class MaterialGemData extends AbstractMaterialData implements IMaterialGemData {\r\n    // #region Properties (5)\r\n\r\n\r\n    #refractionIndex: number = 2.4;\r\n    #impurityMap?: IMapData;\r\n    #impurityScale: number = 1.0;\r\n    #colorTransferBegin: Color = '#ffffff';\r\n    #colorTransferEnd: Color = '#ffffff';\r\n    #center: vec3 = vec3.create();\r\n    #radius: number = 1;\r\n    #sphericalNormalMap?: IMapData;\r\n    #gamma: number = 1;\r\n    #contrast: number = 1;\r\n    #brightness: number = 0;\r\n    #dispersion: number = 0;\r\n    #tracingDepth: number = 5;\r\n    #tracingOpacity: number = 0;\r\n    #envMap?: string | string[];\r\n\r\n    // #endregion Properties (5)\r\n\r\n    // #region Constructors (1)\r\n\r\n    /**\r\n     * Creates a material data object.\r\n     * \r\n     * @param _attributes the attributes of the material\r\n     * @param id the id\r\n     */\r\n    constructor(\r\n        properties?: IMaterialGemDataProperties,\r\n        id?: string,\r\n        version?: string\r\n    ) {\r\n        super(properties, id, version);\r\n        if (!properties) return;\r\n\r\n        if (properties.refractionIndex !== undefined) this.refractionIndex = properties.refractionIndex;\r\n        if (properties.impurityMap !== undefined) this.impurityMap = properties.impurityMap;\r\n        if (properties.impurityScale !== undefined) this.impurityScale = properties.impurityScale;\r\n        if (properties.colorTransferBegin !== undefined) this.colorTransferBegin = properties.colorTransferBegin;\r\n        if (properties.colorTransferEnd !== undefined) this.colorTransferEnd = properties.colorTransferEnd;\r\n        if (properties.center !== undefined) this.center = properties.center;\r\n        if (properties.tracingDepth !== undefined) this.tracingDepth = properties.tracingDepth;\r\n        if (properties.radius !== undefined) this.radius = properties.radius;\r\n        if (properties.sphericalNormalMap !== undefined) this.sphericalNormalMap = properties.sphericalNormalMap;\r\n        if (properties.gamma !== undefined) this.gamma = properties.gamma;\r\n        if (properties.contrast !== undefined) this.contrast = properties.contrast;\r\n        if (properties.brightness !== undefined) this.brightness = properties.brightness;\r\n        if (properties.dispersion !== undefined) this.dispersion = properties.dispersion;\r\n        if (properties.tracingOpacity !== undefined) this.tracingOpacity = properties.tracingOpacity;\r\n        if (properties.envMap !== undefined) this.envMap = properties.envMap;\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Accessors (10)\r\n\r\n    public get refractionIndex(): number {\r\n        return this.#refractionIndex;\r\n    }\r\n\r\n    public set refractionIndex(value: number) {\r\n        this.#refractionIndex = value;\r\n    }\r\n\r\n    public get impurityMap(): IMapData | undefined {\r\n        return this.#impurityMap;\r\n    }\r\n\r\n    public set impurityMap(value: IMapData | undefined) {\r\n        this.#impurityMap = value;\r\n    }\r\n\r\n    public get impurityScale(): number {\r\n        return this.#impurityScale;\r\n    }\r\n\r\n    public set impurityScale(value: number) {\r\n        this.#impurityScale = value;\r\n    }\r\n\r\n    public get colorTransferBegin(): Color {\r\n        return this.#colorTransferBegin;\r\n    }\r\n\r\n    public set colorTransferBegin(value: Color) {\r\n        this.#colorTransferBegin = value;\r\n    }\r\n\r\n    public get colorTransferEnd(): Color {\r\n        return this.#colorTransferEnd;\r\n    }\r\n\r\n    public set colorTransferEnd(value: Color) {\r\n        this.#colorTransferEnd = value;\r\n    }\r\n\r\n    public get center(): vec3 {\r\n        return this.#center;\r\n    }\r\n\r\n    public set center(value: vec3) {\r\n        this.#center = value;\r\n    }\r\n\r\n    public get tracingDepth(): number {\r\n        return this.#tracingDepth;\r\n    }\r\n\r\n    public set tracingDepth(value: number) {\r\n        this.#tracingDepth = value;\r\n    }\r\n\r\n    public get radius(): number {\r\n        return this.#radius;\r\n    }\r\n\r\n    public set radius(value: number) {\r\n        this.#radius = value;\r\n    }\r\n\r\n    public get sphericalNormalMap(): IMapData | undefined {\r\n        return this.#sphericalNormalMap;\r\n    }\r\n\r\n    public set sphericalNormalMap(value: IMapData | undefined) {\r\n        this.#sphericalNormalMap = value;\r\n    }\r\n\r\n    public get gamma(): number {\r\n        return this.#gamma;\r\n    }\r\n\r\n    public set gamma(value: number) {\r\n        this.#gamma = value;\r\n    }\r\n\r\n    public get contrast(): number {\r\n        return this.#contrast;\r\n    }\r\n\r\n    public set contrast(value: number) {\r\n        this.#contrast = value;\r\n    }\r\n\r\n    public get brightness(): number {\r\n        return this.#brightness;\r\n    }\r\n\r\n    public set brightness(value: number) {\r\n        this.#brightness = value;\r\n    }\r\n\r\n    public get dispersion(): number {\r\n        return this.#dispersion;\r\n    }\r\n\r\n    public set dispersion(value: number) {\r\n        this.#dispersion = value;\r\n    }\r\n\r\n    public get tracingOpacity(): number {\r\n        return this.#tracingOpacity;\r\n    }\r\n\r\n    public set tracingOpacity(value: number) {\r\n        this.#tracingOpacity = value;\r\n    }\r\n  \r\n    public get envMap(): string | string[] | undefined {\r\n      return this.#envMap;\r\n    }\r\n  \r\n    public set envMap(value: string | string[] | undefined) {\r\n      this.#envMap = value;\r\n    }\r\n\r\n    // #endregion Public Accessors (10)\r\n\r\n    // #region Public Methods (3)\r\n\r\n    public clone(): IMaterialGemData {\r\n        return new MaterialGemData({\r\n            alphaMap: this.alphaMap,\r\n            alphaCutoff: this.alphaCutoff,\r\n            alphaMode: this.alphaMode,\r\n            aoMap: this.aoMap,\r\n            aoMapIntensity: this.aoMapIntensity,\r\n            bumpMap: this.bumpMap,\r\n            bumpScale: this.bumpScale,\r\n            color: this.color,\r\n            emissiveMap: this.emissiveMap,\r\n            emissiveness: this.emissiveness,\r\n            shading: this.shading,\r\n            map: this.map,\r\n            name: this.name,\r\n            normalMap: this.normalMap,\r\n            normalScale: this.normalScale,\r\n            opacity: this.opacity,\r\n            side: this.side,\r\n            refractionIndex: this.refractionIndex,\r\n            impurityMap: this.impurityMap,\r\n            impurityScale: this.impurityScale,\r\n            colorTransferBegin: this.colorTransferBegin,\r\n            colorTransferEnd: this.colorTransferEnd,\r\n            center: this.center,\r\n            tracingDepth: this.tracingDepth,\r\n            radius: this.radius,\r\n            sphericalNormalMap: this.sphericalNormalMap,\r\n            gamma: this.gamma,\r\n            contrast: this.contrast,\r\n            brightness: this.brightness,\r\n            dispersion: this.dispersion,\r\n            tracingOpacity: this.tracingOpacity,\r\n            envMap: this.envMap,\r\n        }, this.id, this.version);\r\n    }\r\n\r\n    public copy(source: MaterialGemData): void {\r\n        this.alphaCutoff = source.alphaCutoff;\r\n        this.alphaMap = source.alphaMap;\r\n        this.alphaMode = source.alphaMode;\r\n        this.aoMap = source.aoMap;\r\n        this.aoMapIntensity = source.aoMapIntensity;\r\n        this.bumpMap = source.bumpMap;\r\n        this.bumpScale = source.bumpScale;\r\n        this.color = source.color;\r\n        this.emissiveMap = source.emissiveMap;\r\n        this.emissiveness = source.emissiveness;\r\n        this.materialOutput = source.materialOutput;\r\n        this.map = source.map;\r\n        this.normalMap = source.normalMap;\r\n        this.normalScale = source.normalScale;\r\n        this.opacity = source.opacity;\r\n        this.shading = source.shading;\r\n        this.side = source.side;\r\n        \r\n        this.refractionIndex = this.refractionIndex;\r\n        this.impurityMap = this.impurityMap;\r\n        this.impurityScale = this.impurityScale;\r\n        this.colorTransferBegin = this.colorTransferBegin;\r\n        this.colorTransferEnd = this.colorTransferEnd;\r\n        this.center = this.center;\r\n        this.tracingDepth = this.tracingDepth;\r\n        this.radius = this.radius;\r\n        this.sphericalNormalMap = this.sphericalNormalMap;\r\n        this.gamma = this.gamma;\r\n        this.contrast = this.contrast;\r\n        this.brightness = this.brightness;\r\n        this.dispersion = this.dispersion;\r\n        this.tracingOpacity = this.tracingOpacity;\r\n        this.envMap = source.envMap;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.alphaCutoff = 0;\r\n        this.alphaMap = undefined;\r\n        this.alphaMode = MATERIAL_ALPHA.OPAQUE;\r\n        this.aoMap = undefined;\r\n        this.aoMapIntensity = 1.0;\r\n        this.bumpMap = undefined;\r\n        this.bumpScale = 1.0;\r\n        this.color = '#ffffff';\r\n        this.emissiveMap = undefined;\r\n        this.emissiveness = '#000000';\r\n        this.materialOutput = false;\r\n        this.map = undefined;\r\n        this.normalMap = undefined;\r\n        this.normalScale = 1.0;\r\n        this.opacity = 1.0;\r\n        this.shading = MATERIAL_SHADING.SMOOTH;\r\n        this.side = MATERIAL_SIDE.DOUBLE;\r\n\r\n        this.refractionIndex = 2.4;\r\n        this.impurityMap = undefined;\r\n        this.impurityScale = 1.0;\r\n        this.colorTransferBegin = '#ffffff';\r\n        this.colorTransferEnd = '#ffffff';\r\n        this.center = vec3.create();\r\n        this.radius = 1;\r\n        this.sphericalNormalMap = undefined;\r\n        this.gamma = 1;\r\n        this.contrast = 1;\r\n        this.brightness = 0;\r\n        this.dispersion = 0;\r\n        this.tracingDepth = 5;\r\n        this.tracingOpacity = 0;\r\n        this.envMap = undefined;\r\n    }\r\n\r\n    // #endregion Public Methods (3)\r\n}"]}},"error":null,"hash":"1061846929c4b0d2fb5be7cc4a34e593","cacheData":{"env":{}}}