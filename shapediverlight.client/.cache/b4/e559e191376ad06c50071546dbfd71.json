{"id":"jD4n","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\objects\\SDColor.js.map","includedInParent":true,"mtime":1706476152392},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\src\\objects\\SDColor.ts","includedInParent":true,"mtime":1706476153020},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706476652643},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\package.json","includedInParent":true,"mtime":1706476151754},{"name":"three","loc":{"line":4,"column":24,"index":130},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.rendering-engine-threejs.standard\\dist\\objects\\SDColor.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\three\\build\\three.module.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.SDColor=void 0;const r=require(\"three\");class o extends r.Color{constructor(r,o){super(r),this._colorSpace=\"srgb-linear\",this._originalColorSpace=\"srgb-linear\",\"number\"==typeof o||Array.isArray(o)&&(3==o.length||4==o.length)?(this._colorSpace=\"srgb-linear\",this._originalColorSpace=\"srgb-linear\"):(this._colorSpace=\"srgb\",this._originalColorSpace=\"srgb\")}colorCorrection(r){\"srgb\"===this._colorSpace&&!0===r?(this.convertSRGBToLinear(),this._colorSpace=\"srgb-linear\"):\"srgb-linear\"===this._colorSpace&&!1===r&&\"srgb-linear\"!==this._originalColorSpace&&(this.convertLinearToSRGB(),this._colorSpace=\"srgb\")}}exports.SDColor=o;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":91}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":97}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":99}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":107}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":116}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":1,"column":122}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":5,"column":29},"generated":{"line":1,"column":132}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":5,"column":29},"generated":{"line":1,"column":134}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":1,"column":140}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":15,"column":16},"generated":{"line":1,"column":152}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":15,"column":34},"generated":{"line":1,"column":154}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":16,"column":8},"generated":{"line":1,"column":157}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":16,"column":14},"generated":{"line":1,"column":163}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":1,"column":166}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":1,"column":171}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":8,"column":50},"generated":{"line":1,"column":183}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":9,"column":12},"generated":{"line":1,"column":197}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":9,"column":12},"generated":{"line":1,"column":202}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":9,"column":58},"generated":{"line":1,"column":222}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":17,"column":36},"generated":{"line":1,"column":236}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":17,"column":18},"generated":{"line":1,"column":253}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":17,"column":48},"generated":{"line":1,"column":256}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":17,"column":54},"generated":{"line":1,"column":262}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":17,"column":62},"generated":{"line":1,"column":270}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":17,"column":105},"generated":{"line":1,"column":275}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":17,"column":81},"generated":{"line":1,"column":278}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":17,"column":95},"generated":{"line":1,"column":280}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":17,"column":134},"generated":{"line":1,"column":288}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":17,"column":110},"generated":{"line":1,"column":291}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":17,"column":124},"generated":{"line":1,"column":293}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":18,"column":12},"generated":{"line":1,"column":302}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":18,"column":17},"generated":{"line":1,"column":307}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":18,"column":31},"generated":{"line":1,"column":319}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":19,"column":12},"generated":{"line":1,"column":333}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":19,"column":17},"generated":{"line":1,"column":338}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":19,"column":39},"generated":{"line":1,"column":358}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":21,"column":12},"generated":{"line":1,"column":374}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":21,"column":17},"generated":{"line":1,"column":379}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":391}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":1,"column":398}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":22,"column":17},"generated":{"line":1,"column":403}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":22,"column":39},"generated":{"line":1,"column":423}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":38,"column":11},"generated":{"line":1,"column":431}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":38,"column":27},"generated":{"line":1,"column":447}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":39,"column":32},"generated":{"line":1,"column":450}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":39,"column":11},"generated":{"line":1,"column":459}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":39,"column":16},"generated":{"line":1,"column":464}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":39,"column":53},"generated":{"line":1,"column":478}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":39,"column":42},"generated":{"line":1,"column":482}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":42,"column":12},"generated":{"line":1,"column":485}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":42,"column":17},"generated":{"line":1,"column":490}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":43,"column":12},"generated":{"line":1,"column":512}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":43,"column":17},"generated":{"line":1,"column":517}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":43,"column":31},"generated":{"line":1,"column":529}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":44,"column":39},"generated":{"line":1,"column":544}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":44,"column":18},"generated":{"line":1,"column":560}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":44,"column":23},"generated":{"line":1,"column":565}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":44,"column":67},"generated":{"line":1,"column":579}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":44,"column":56},"generated":{"line":1,"column":583}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":44,"column":105},"generated":{"line":1,"column":586}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":44,"column":76},"generated":{"line":1,"column":602}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":44,"column":81},"generated":{"line":1,"column":607}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":48,"column":12},"generated":{"line":1,"column":629}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":48,"column":17},"generated":{"line":1,"column":634}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":1,"column":656}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":1,"column":661}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":49,"column":31},"generated":{"line":1,"column":673}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":682}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":690}},{"source":"../../src/objects/SDColor.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":698}}],"sources":{"../../src/objects/SDColor.ts":"import * as THREE from 'three'\r\nimport { Color as ThreeColor } from 'three'\r\nimport { Color } from '@shapediver/viewer.shared.types';\r\n\r\nexport class SDColor extends ThreeColor {\r\n    // #region Properties (3)\r\n\r\n    private _colorSpace: 'srgb' | 'srgb-linear' = 'srgb-linear';\r\n    private _originalColorSpace: 'srgb' | 'srgb-linear' = 'srgb-linear';\r\n\r\n    // #endregion Properties (3)\r\n\r\n    // #region Constructors (1)\r\n\r\n    constructor(hexColor: string, originalColor: Color) {\r\n        super(hexColor);\r\n        if(typeof originalColor === 'number' || Array.isArray(originalColor) && (originalColor.length == 3 || originalColor.length == 4)) {\r\n            this._colorSpace = 'srgb-linear';\r\n            this._originalColorSpace = 'srgb-linear';\r\n        } else {\r\n            this._colorSpace = 'srgb';\r\n            this._originalColorSpace = 'srgb';\r\n        }\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Methods (1)\r\n\r\n    /**\r\n     * Depending on the current state and provided value, this function converts the color to a different color space.\r\n     * \r\n     * If the color is in 'srgb' space and active is set to true, it will be converted to 'srgb-linear' space.\r\n     * If the color is in 'srgb-linear' space, the color is not originally in 'srgb-linear' and active is set to false, it will be converted to 'srgb' space.\r\n     * \r\n     * @param active \r\n     */\r\n    public colorCorrection(active: boolean) {\r\n        if(this._colorSpace === 'srgb' && active === true) {\r\n            // we assume all colors provided are in 'srgb' color space\r\n            // therefore we need to correct those colors to 'srgb-linear' if the color conversion is active\r\n            this.convertSRGBToLinear();\r\n            this._colorSpace = 'srgb-linear';\r\n        } else if(this._colorSpace === 'srgb-linear' && active === false && this._originalColorSpace !== 'srgb-linear') {\r\n            // if the color space is already 'srgb-linear', the color was already converted\r\n            // therefore we need to convert it back if the color conversion was deactivted\r\n            // if it was not originally in 'srgb-linear'\r\n            this.convertLinearToSRGB();\r\n            this._colorSpace = 'srgb';\r\n        }\r\n    }\r\n\r\n    // #endregion Public Methods (1)\r\n}"},"lineCount":null}},"error":null,"hash":"f317447d37c40876c16eca2952449fd5","cacheData":{"env":{}}}