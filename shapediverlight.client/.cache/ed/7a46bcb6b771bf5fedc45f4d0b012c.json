{"id":"node_modules/@shapediver/viewer.shared.types/dist/implementation/data/CustomData.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\data\\CustomData.js.map","includedInParent":true,"mtime":1706542086499},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\src\\implementation\\data\\CustomData.ts","includedInParent":true,"mtime":1706542087128},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\package.json","includedInParent":true,"mtime":1706542086386},{"name":"@shapediver/viewer.shared.node-tree","loc":{"line":16,"column":42,"index":1264},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.types\\dist\\implementation\\data\\CustomData.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.node-tree\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _CustomData_data;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CustomData = void 0;\r\nconst viewer_shared_node_tree_1 = require(\"@shapediver/viewer.shared.node-tree\");\r\nclass CustomData extends viewer_shared_node_tree_1.AbstractTreeNodeData {\r\n    // #endregion Properties (1)\r\n    // #region Constructors (1)\r\n    /**\r\n     * Creates a custom data node.\r\n     *\r\n     * @param _data the data as key- value pairs\r\n     * @param id the id\r\n     */\r\n    constructor(data, id, version) {\r\n        super(id, version);\r\n        // #region Properties (1)\r\n        _CustomData_data.set(this, void 0);\r\n        __classPrivateFieldSet(this, _CustomData_data, data, \"f\");\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (2)\r\n    get data() {\r\n        return __classPrivateFieldGet(this, _CustomData_data, \"f\");\r\n    }\r\n    set data(value) {\r\n        __classPrivateFieldSet(this, _CustomData_data, value, \"f\");\r\n    }\r\n    // #endregion Public Accessors (2)\r\n    // #region Public Methods (1)\r\n    /**\r\n     * Clones the scene graph data.\r\n     */\r\n    clone() {\r\n        return new CustomData(Object.assign({}, this.data), this.id, this.version);\r\n    }\r\n}\r\nexports.CustomData = CustomData;\r\n_CustomData_data = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"CustomData.js","sourceRoot":"","sources":["../../../src/implementation/data/CustomData.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,iFAAyF;AAGzF,MAAa,UAAW,SAAQ,8CAAoB;IAKhD,4BAA4B;IAE5B,2BAA2B;IAE3B;;;;;OAKG;IACH,YACI,IAA4B,EAC5B,EAAW,EACX,OAAgB;QAEhB,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QAnBvB,yBAAyB;QAEzB,mCAA8B;QAkB1B,uBAAA,IAAI,oBAAS,IAAI,MAAA,CAAC;IACtB,CAAC;IAED,8BAA8B;IAE9B,+BAA+B;IAE/B,IAAW,IAAI;QACX,OAAO,uBAAA,IAAI,wBAAM,CAAC;IACtB,CAAC;IAED,IAAW,IAAI,CAAC,KAA6B;QACzC,uBAAA,IAAI,oBAAS,KAAK,MAAA,CAAC;IACvB,CAAC;IAED,kCAAkC;IAElC,6BAA6B;IAE7B;;OAEG;IACI,KAAK;QACR,OAAO,IAAI,UAAU,mBAAM,IAAI,CAAC,IAAI,GAAI,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACnE,CAAC;CAGJ;AAhDD,gCAgDC","sourcesContent":["import { AbstractTreeNodeData, ITreeNodeData } from '@shapediver/viewer.shared.node-tree'\r\nimport { ICustomData } from '../../interfaces/data/ICustomData';\r\n\r\nexport class CustomData extends AbstractTreeNodeData implements ICustomData {\r\n    // #region Properties (1)\r\n\r\n    #data: { [key: string]: any };\r\n\r\n    // #endregion Properties (1)\r\n\r\n    // #region Constructors (1)\r\n\r\n    /**\r\n     * Creates a custom data node.\r\n     * \r\n     * @param _data the data as key- value pairs \r\n     * @param id the id\r\n     */\r\n    constructor(\r\n        data: { [key: string]: any },\r\n        id?: string,\r\n        version?: string\r\n    ) {\r\n        super(id, version);\r\n        this.#data = data;\r\n    }\r\n\r\n    // #endregion Constructors (1)\r\n\r\n    // #region Public Accessors (2)\r\n\r\n    public get data(): { [key: string]: any } {\r\n        return this.#data;\r\n    }\r\n\r\n    public set data(value: { [key: string]: any }) {\r\n        this.#data = value;\r\n    }\r\n\r\n    // #endregion Public Accessors (2)\r\n\r\n    // #region Public Methods (1)\r\n\r\n    /**\r\n     * Clones the scene graph data.\r\n     */\r\n    public clone(): ICustomData {\r\n        return new CustomData({ ...this.data }, this.id, this.version);\r\n    }\r\n\r\n    // #endregion Public Methods (1)\r\n}\r\n"]}},"error":null,"hash":"c1caeb474016a7a9d5d4efab63a014d4","cacheData":{"env":{}}}