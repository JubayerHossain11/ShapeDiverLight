{"id":"node_modules/@shapediver/sdk.geometry-api-sdk-core/dist/config/ShapeDiverSdkConfig.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.geometry-api-sdk-core\\dist\\config\\ShapeDiverSdkConfig.js.map","includedInParent":true,"mtime":1706527148754},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.geometry-api-sdk-core\\package.json","includedInParent":true,"mtime":1706527148407},{"name":"../ShapeDiverErrors","loc":{"line":4,"column":35,"index":182},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.geometry-api-sdk-core\\dist\\config\\ShapeDiverSdkConfig.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.geometry-api-sdk-core\\dist\\ShapeDiverErrors.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SdkConfigInternal = exports.ShapeDiverSdkConfigType = void 0;\nconst ShapeDiverErrors_1 = require(\"../ShapeDiverErrors\");\n/** Supported types of the ShapeDiver configuration object */\nvar ShapeDiverSdkConfigType;\n(function (ShapeDiverSdkConfigType) {\n    ShapeDiverSdkConfigType[\"BASE_URL\"] = \"BASE_URL\";\n    ShapeDiverSdkConfigType[\"JWT_TOKEN\"] = \"JWT_TOKEN\";\n    ShapeDiverSdkConfigType[\"REQUEST_HEADERS\"] = \"REQUEST_HEADERS\";\n})(ShapeDiverSdkConfigType = exports.ShapeDiverSdkConfigType || (exports.ShapeDiverSdkConfigType = {}));\n/** Private interface of the ShapeDiver configuration object */\nclass SdkConfigInternal {\n    constructor(baseUrl) {\n        this._baseUrl = baseUrl;\n        this._headers = {};\n        this._jwt = \"\";\n    }\n    get baseUrl() {\n        return this._baseUrl;\n    }\n    get headers() {\n        return this._headers;\n    }\n    get jwt() {\n        return this._jwt;\n    }\n    toConfig() {\n        return {\n            baseUrl: this._baseUrl,\n            headers: this._headers,\n            jwt: this._jwt,\n        };\n    }\n    setConfigValue(type, value) {\n        switch (type) {\n            case ShapeDiverSdkConfigType.BASE_URL:\n                this._baseUrl = SdkConfigInternal.validateValue(type, value, \"string\");\n                break;\n            case ShapeDiverSdkConfigType.JWT_TOKEN:\n                this._jwt = SdkConfigInternal.validateValue(type, value, \"string\");\n                break;\n            case ShapeDiverSdkConfigType.REQUEST_HEADERS:\n                this._headers = SdkConfigInternal.validateValue(type, value, \"string_map\");\n                break;\n            default:\n                throw new ShapeDiverErrors_1.ShapeDiverError(`Invalid config-type ${type}`);\n        }\n    }\n    static validateValue(type, value, dataType) {\n        switch (dataType) {\n            case \"string\":\n                if (typeof value !== \"string\")\n                    throw new ShapeDiverErrors_1.ShapeDiverError(`Invalid value for config-type '${type}': Value must be a string`);\n                break;\n            case \"string_map\":\n                if (typeof value !== \"object\" || !Object.values(value).every(v => typeof v === \"string\"))\n                    throw new ShapeDiverErrors_1.ShapeDiverError(`Invalid value for config-type '${type}': Value must be a string-map`);\n                break;\n        }\n        return value;\n    }\n}\nexports.SdkConfigInternal = SdkConfigInternal;\n"},"sourceMaps":{"js":{"version":3,"file":"ShapeDiverSdkConfig.js","sourceRoot":"","sources":["../../src/config/ShapeDiverSdkConfig.ts"],"names":[],"mappings":";;;AAAA,0DAAqD;AAWrD,6DAA6D;AAC7D,IAAY,uBAIX;AAJD,WAAY,uBAAuB;IAC/B,gDAAqB,CAAA;IACrB,kDAAuB,CAAA;IACvB,8DAAmC,CAAA;AACvC,CAAC,EAJW,uBAAuB,GAAvB,+BAAuB,KAAvB,+BAAuB,QAIlC;AAID,+DAA+D;AAC/D,MAAa,iBAAiB;IAM1B,YAAa,OAAe;QACxB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;QACvB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAA;QAClB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAA;IAClB,CAAC;IAED,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,QAAQ,CAAA;IACxB,CAAC;IAED,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,QAAQ,CAAA;IACxB,CAAC;IAED,IAAI,GAAG;QACH,OAAO,IAAI,CAAC,IAAI,CAAA;IACpB,CAAC;IAEM,QAAQ;QACX,OAAO;YACH,OAAO,EAAE,IAAI,CAAC,QAAQ;YACtB,OAAO,EAAE,IAAI,CAAC,QAAQ;YACtB,GAAG,EAAE,IAAI,CAAC,IAAI;SACjB,CAAA;IACL,CAAC;IAEM,cAAc,CAAE,IAA6B,EAAE,KAAU;QAC5D,QAAQ,IAAI,EAAE;YACV,KAAK,uBAAuB,CAAC,QAAQ;gBACjC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAW,CAAA;gBAChF,MAAK;YACT,KAAK,uBAAuB,CAAC,SAAS;gBAClC,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAW,CAAA;gBAC5E,MAAK;YACT,KAAK,uBAAuB,CAAC,eAAe;gBACxC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,YAAY,CAAkB,CAAA;gBAC3F,MAAK;YACT;gBACI,MAAM,IAAI,kCAAe,CAAC,uBAAwB,IAAK,EAAE,CAAC,CAAA;SACjE;IACL,CAAC;IAEM,MAAM,CAAC,aAAa,CAAE,IAA6B,EAAE,KAAU,EAAE,QAAiC;QACrG,QAAQ,QAAQ,EAAE;YACd,KAAK,QAAQ;gBACT,IAAI,OAAO,KAAK,KAAK,QAAQ;oBACzB,MAAM,IAAI,kCAAe,CAAC,kCAAmC,IAAK,2BAA2B,CAAC,CAAA;gBAClG,MAAK;YACT,KAAK,YAAY;gBACb,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC;oBACpF,MAAM,IAAI,kCAAe,CAAC,kCAAmC,IAAK,+BAA+B,CAAC,CAAA;gBACtG,MAAK;SACZ;QAED,OAAO,KAAK,CAAA;IAChB,CAAC;CAEJ;AA/DD,8CA+DC","sourcesContent":[null]}},"error":null,"hash":"0cda6281b975aca5a122143aa2709dc7","cacheData":{"env":{}}}