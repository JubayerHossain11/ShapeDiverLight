{"id":"node_modules/@shapediver/sdk.sdtf-v1/dist/SdtfSdk.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\SdtfSdk.js.map","includedInParent":true,"mtime":1706527150452},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\package.json","includedInParent":true,"mtime":1706527149378},{"name":"@shapediver/sdk.sdtf-core","loc":{"line":13,"column":32,"index":833},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\SdtfSdk.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-core\\dist\\index.js"},{"name":"./formatter/SdtfFormatter","loc":{"line":14,"column":32,"index":895},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\SdtfSdk.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\formatter\\SdtfFormatter.js"},{"name":"./reader/SdtfParser","loc":{"line":15,"column":29,"index":954},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\SdtfSdk.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\reader\\SdtfParser.js"},{"name":"./SdtfConfig","loc":{"line":16,"column":29,"index":1007},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\SdtfSdk.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\SdtfConfig.js"},{"name":"./writer/SdtfConstructor","loc":{"line":17,"column":34,"index":1058},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\SdtfSdk.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\writer\\SdtfConstructor.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SdtfSdk = exports.create = void 0;\nconst sdk_sdtf_core_1 = require(\"@shapediver/sdk.sdtf-core\");\nconst SdtfFormatter_1 = require(\"./formatter/SdtfFormatter\");\nconst SdtfParser_1 = require(\"./reader/SdtfParser\");\nconst SdtfConfig_1 = require(\"./SdtfConfig\");\nconst SdtfConstructor_1 = require(\"./writer/SdtfConstructor\");\n/** Returns a new instance of the ShapeDiver sdTf SDK. */\nfunction create(config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const sdk = new SdtfSdk(config);\n        yield sdk.init();\n        return sdk;\n    });\n}\nexports.create = create;\nclass SdtfSdk {\n    constructor(config) {\n        this.config = new SdtfConfig_1.SdtfConfig(config);\n    }\n    /**\n     * Instantiates and returns a new sdTF parser object.\n     * The parser reads sdTF data from various sources and returns an asset object, that represents the hierarchy of\n     * the sdTF file and provides easy access functionality for embedded values and binary data.\n     */\n    createParser() {\n        return new SdtfParser_1.SdtfParser(this.config);\n    }\n    /**\n     * Instantiates and returns a new sdTF constructor object.\n     * The constructor provides functionality to create new sdTF assets.\n     */\n    createConstructor() {\n        return new SdtfConstructor_1.SdtfConstructor(this.config.integrations);\n    }\n    /** Instantiates and returns a new formatter to convert sdTF components into prettified JSON data. */\n    createFormatter() {\n        return new SdtfFormatter_1.SdtfFormatter(this.config.integrations);\n    }\n    /** Initializes all specified sdTF integrations. */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const promiseArray = [];\n            this.config.integrations.forEach(integration => promiseArray.push(integration.init()));\n            const res = yield Promise.allSettled(promiseArray);\n            res.forEach(promiseRes => {\n                if (promiseRes.status === \"rejected\") {\n                    const e = promiseRes.reason;\n                    throw new sdk_sdtf_core_1.SdtfError(`Could not initialize all integrations: ${e}`);\n                }\n            });\n        });\n    }\n}\nexports.SdtfSdk = SdtfSdk;\n"},"sourceMaps":{"js":{"version":3,"file":"SdtfSdk.js","sourceRoot":"","sources":["../src/SdtfSdk.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6DAAkE;AAElE,6DAAyD;AACzD,oDAAgD;AAChD,6CAAyC;AAEzC,8DAA0D;AAK1D,yDAAyD;AACzD,SAAsB,MAAM,CAAE,MAAoB;;QAC9C,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAA;QAC/B,MAAM,GAAG,CAAC,IAAI,EAAE,CAAA;QAChB,OAAO,GAAG,CAAA;IACd,CAAC;CAAA;AAJD,wBAIC;AAED,MAAa,OAAO;IAIhB,YAAa,MAAoB;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,uBAAU,CAAC,MAAM,CAAC,CAAA;IACxC,CAAC;IAED;;;;OAIG;IACH,YAAY;QACR,OAAO,IAAI,uBAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IACtC,CAAC;IAED;;;OAGG;IACH,iBAAiB;QACb,OAAO,IAAI,iCAAe,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAA;IACxD,CAAC;IAED,qGAAqG;IACrG,eAAe;QACX,OAAO,IAAI,6BAAa,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAA;IACtD,CAAC;IAED,mDAAmD;IAC7C,IAAI;;YACN,MAAM,YAAY,GAAoB,EAAE,CAAA;YACxC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;YACtF,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,CAAA;YAElD,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;gBACrB,IAAI,UAAU,CAAC,MAAM,KAAK,UAAU,EAAE;oBAClC,MAAM,CAAC,GAAG,UAAU,CAAC,MAAM,CAAA;oBAC3B,MAAM,IAAI,yBAAS,CAAC,0CAA2C,CAAE,EAAE,CAAC,CAAA;iBACvE;YACL,CAAC,CAAC,CAAA;QACN,CAAC;KAAA;CAEJ;AA5CD,0BA4CC","sourcesContent":[null]}},"error":null,"hash":"2ca310874e72d11ba262d4c1c1f39bf1","cacheData":{"env":{}}}