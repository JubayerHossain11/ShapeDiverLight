{"id":"node_modules/@shapediver/viewer.shared.node-tree/dist/implementation/AbstractTreeNodeData.js","dependencies":[{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.node-tree\\dist\\implementation\\AbstractTreeNodeData.js.map","includedInParent":true,"mtime":1706542085539},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.node-tree\\src\\implementation\\AbstractTreeNodeData.ts","includedInParent":true,"mtime":1706542086300},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\package.json","includedInParent":true,"mtime":1706542184022},{"name":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.node-tree\\package.json","includedInParent":true,"mtime":1706542085155},{"name":"@shapediver/viewer.shared.services","loc":{"line":16,"column":41,"index":1384},"parent":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.node-tree\\dist\\implementation\\AbstractTreeNodeData.js","resolved":"F:\\UpworkProjects\\ShapeDiverLight\\ShapeDiverLight\\shapediverlight.client\\node_modules\\@shapediver\\viewer.shared.services\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _AbstractTreeNodeData_version, _AbstractTreeNodeData_id, _AbstractTreeNodeData_uuidGenerator, _AbstractTreeNodeData_eventEngine;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AbstractTreeNodeData = void 0;\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nclass AbstractTreeNodeData {\r\n    // #endregion Properties (3)\r\n    // #region Constructors (1)\r\n    /**\r\n     * Creates a tree node data object.\r\n     *\r\n     * @param id Id of this data object\r\n     */\r\n    constructor(id, version) {\r\n        // #region Properties (3)\r\n        _AbstractTreeNodeData_version.set(this, void 0);\r\n        _AbstractTreeNodeData_id.set(this, void 0);\r\n        _AbstractTreeNodeData_uuidGenerator.set(this, viewer_shared_services_1.UuidGenerator.instance);\r\n        _AbstractTreeNodeData_eventEngine.set(this, viewer_shared_services_1.EventEngine.instance);\r\n        __classPrivateFieldSet(this, _AbstractTreeNodeData_id, id || __classPrivateFieldGet(this, _AbstractTreeNodeData_uuidGenerator, \"f\").create(), \"f\");\r\n        __classPrivateFieldSet(this, _AbstractTreeNodeData_version, version || __classPrivateFieldGet(this, _AbstractTreeNodeData_uuidGenerator, \"f\").create(), \"f\");\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (2)\r\n    get id() {\r\n        return __classPrivateFieldGet(this, _AbstractTreeNodeData_id, \"f\");\r\n    }\r\n    get version() {\r\n        return __classPrivateFieldGet(this, _AbstractTreeNodeData_version, \"f\");\r\n    }\r\n    // #endregion Public Accessors (2)\r\n    // #region Public Methods (1)\r\n    /**\r\n     * Update the version\r\n     */\r\n    updateVersion() {\r\n        __classPrivateFieldSet(this, _AbstractTreeNodeData_version, __classPrivateFieldGet(this, _AbstractTreeNodeData_uuidGenerator, \"f\").create(), \"f\");\r\n    }\r\n    // #endregion Public Methods (1)\r\n    // #region Public Abstract Methods (1)\r\n    /**\r\n     * Clones the tree node data.\r\n     */\r\n    clone() {\r\n        const clone = new this.constructor;\r\n        return clone;\r\n    }\r\n    ;\r\n}\r\nexports.AbstractTreeNodeData = AbstractTreeNodeData;\r\n_AbstractTreeNodeData_version = new WeakMap(), _AbstractTreeNodeData_id = new WeakMap(), _AbstractTreeNodeData_uuidGenerator = new WeakMap(), _AbstractTreeNodeData_eventEngine = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"AbstractTreeNodeData.js","sourceRoot":"","sources":["../../src/implementation/AbstractTreeNodeData.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,+EAA0F;AAI1F,MAAsB,oBAAoB;IASxC,4BAA4B;IAE5B,2BAA2B;IAE3B;;;;OAIG;IACH,YAAY,EAAW,EAAE,OAAgB;QAjBzC,yBAAyB;QAEzB,gDAAiB;QAEjB,2CAAqB;QACrB,8CAAyC,sCAAa,CAAC,QAAQ,EAAC;QAChE,4CAAqC,oCAAW,CAAC,QAAQ,EAAC;QAYxD,uBAAA,IAAI,4BAAO,EAAE,IAAI,uBAAA,IAAI,2CAAe,CAAC,MAAM,EAAE,MAAA,CAAC;QAC9C,uBAAA,IAAI,iCAAY,OAAO,IAAI,uBAAA,IAAI,2CAAe,CAAC,MAAM,EAAE,MAAA,CAAC;IAC1D,CAAC;IAED,8BAA8B;IAE9B,+BAA+B;IAE/B,IAAW,EAAE;QACX,OAAO,uBAAA,IAAI,gCAAI,CAAC;IAClB,CAAC;IAED,IAAW,OAAO;QAChB,OAAO,uBAAA,IAAI,qCAAS,CAAC;IACvB,CAAC;IAED,kCAAkC;IAElC,6BAA6B;IAE7B;;OAEG;IACI,aAAa;QAClB,uBAAA,IAAI,iCAAY,uBAAA,IAAI,2CAAe,CAAC,MAAM,EAAE,MAAA,CAAC;IAC/C,CAAC;IAED,gCAAgC;IAEhC,sCAAsC;IAEtC;;OAEG;IACI,KAAK;QACV,MAAM,KAAK,GAAG,IAAU,IAAI,CAAC,WAAY,CAAC;QAC1C,OAAO,KAAK,CAAC;IACf,CAAC;IAAA,CAAC;CAGH;AA3DD,oDA2DC","sourcesContent":["import { UuidGenerator, EventEngine, EVENTTYPE } from '@shapediver/viewer.shared.services'\r\n\r\nimport { ITreeNodeData } from '../interfaces/ITreeNodeData'\r\n\r\nexport abstract class AbstractTreeNodeData<T extends ITreeNodeData<any>> implements ITreeNodeData<T> {\r\n  // #region Properties (3)\r\n\r\n  #version: string;\r\n\r\n  readonly #id: string;\r\n  readonly #uuidGenerator: UuidGenerator = UuidGenerator.instance;\r\n  readonly #eventEngine: EventEngine = EventEngine.instance;\r\n\r\n  // #endregion Properties (3)\r\n\r\n  // #region Constructors (1)\r\n\r\n  /**\r\n   * Creates a tree node data object.\r\n   * \r\n   * @param id Id of this data object\r\n   */\r\n  constructor(id?: string, version?: string) {\r\n    this.#id = id || this.#uuidGenerator.create();\r\n    this.#version = version || this.#uuidGenerator.create();\r\n  }\r\n\r\n  // #endregion Constructors (1)\r\n\r\n  // #region Public Accessors (2)\r\n\r\n  public get id(): string {\r\n    return this.#id;\r\n  }\r\n\r\n  public get version(): string {\r\n    return this.#version;\r\n  }\r\n  \r\n  // #endregion Public Accessors (2)\r\n\r\n  // #region Public Methods (1)\r\n\r\n  /**\r\n   * Update the version\r\n   */\r\n  public updateVersion(): void {\r\n    this.#version = this.#uuidGenerator.create();\r\n  }\r\n\r\n  // #endregion Public Methods (1)\r\n\r\n  // #region Public Abstract Methods (1)\r\n\r\n  /**\r\n   * Clones the tree node data.\r\n   */\r\n  public clone(): T {\r\n    const clone = new (<any>this.constructor);\r\n    return clone;\r\n  };\r\n\r\n  // #endregion Public Abstract Methods (1)\r\n}"]}},"error":null,"hash":"7148ce574d44886d7abbd54b5c095e41","cacheData":{"env":{}}}