{"id":"node_modules/@shapediver/sdk.sdtf-v1/dist/writer/ISdtfWriteableComponentList.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\dist\\writer\\ISdtfWriteableComponentList.js.map","includedInParent":true,"mtime":1706527149799},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.sdtf-v1\\package.json","includedInParent":true,"mtime":1706527149378}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeableComponentListFromAsset = void 0;\n/** Extracts all referenced components from the writeable asset object and returns them as a component list. */\nfunction writeableComponentListFromAsset(asset) {\n    // Helper function to add components to list if they are not already in the list\n    const addToList = (component, array) => {\n        if (!component)\n            return;\n        if (array.findIndex((c) => c.componentId === component.componentId) === -1)\n            array.push(component);\n    };\n    const list = {\n        accessors: [],\n        asset: asset,\n        attributes: [],\n        buffers: [],\n        bufferViews: [],\n        chunks: asset.chunks,\n        items: [],\n        nodes: [],\n        typeHints: [],\n        fileInfo: asset.fileInfo,\n    };\n    // NOTE: Extraction order matters!\n    list.chunks.forEach(chunk => {\n        addToList(chunk.attributes, list.attributes);\n        chunk.items.forEach(item => addToList(item, list.items));\n        chunk.nodes.forEach(node => addToList(node, list.nodes));\n        addToList(chunk.typeHint, list.typeHints);\n    });\n    list.nodes.forEach(nodes => {\n        addToList(nodes.attributes, list.attributes);\n        nodes.items.forEach(item => addToList(item, list.items));\n        nodes.nodes.forEach(node => addToList(node, list.nodes));\n        addToList(nodes.typeHint, list.typeHints);\n    });\n    list.items.forEach(item => {\n        addToList(item.accessor, list.accessors);\n        addToList(item.attributes, list.attributes);\n        addToList(item.typeHint, list.typeHints);\n    });\n    list.attributes.forEach(attributes => {\n        Object.values(attributes.entries).forEach(attribute => {\n            addToList(attribute.accessor, list.accessors);\n            addToList(attribute.typeHint, list.typeHints);\n        });\n    });\n    list.accessors.forEach(accessor => addToList(accessor.bufferView, list.bufferViews));\n    list.bufferViews.forEach(bufferView => addToList(bufferView.buffer, list.buffers));\n    return list;\n}\nexports.writeableComponentListFromAsset = writeableComponentListFromAsset;\n"},"sourceMaps":{"js":{"version":3,"file":"ISdtfWriteableComponentList.js","sourceRoot":"","sources":["../../src/writer/ISdtfWriteableComponentList.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"8e30275947044609e52ddb72b2e405fc","cacheData":{"env":{}}}