{"id":"node_modules/@shapediver/viewer.session-engine.session-engine/dist/interfaces/ISessionEngine.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.session-engine.session-engine\\dist\\interfaces\\ISessionEngine.js.map","includedInParent":true,"mtime":1706527152460},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.session-engine.session-engine\\src\\interfaces\\ISessionEngine.ts","includedInParent":true,"mtime":1706527152897},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.session-engine.session-engine\\package.json","includedInParent":true,"mtime":1706527152247}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PARAMETER_VISUALIZATION = exports.PARAMETER_TYPE = void 0;\r\n/**\r\n * The type of the parameter.\r\n */\r\nvar PARAMETER_TYPE;\r\n(function (PARAMETER_TYPE) {\r\n    PARAMETER_TYPE[\"FLOAT\"] = \"Float\";\r\n    PARAMETER_TYPE[\"INT\"] = \"Int\";\r\n    PARAMETER_TYPE[\"EVEN\"] = \"Even\";\r\n    PARAMETER_TYPE[\"ODD\"] = \"Odd\";\r\n    PARAMETER_TYPE[\"STRING\"] = \"String\";\r\n    PARAMETER_TYPE[\"COLOR\"] = \"Color\";\r\n    PARAMETER_TYPE[\"STRINGLIST\"] = \"StringList\";\r\n    PARAMETER_TYPE[\"BOOL\"] = \"Bool\";\r\n    PARAMETER_TYPE[\"TIME\"] = \"Time\";\r\n    PARAMETER_TYPE[\"FILE\"] = \"File\";\r\n    PARAMETER_TYPE[\"SNUMBER\"] = \"sNumber\";\r\n    PARAMETER_TYPE[\"SINTEGER\"] = \"sInteger\";\r\n    PARAMETER_TYPE[\"SSTRING\"] = \"sString\";\r\n    PARAMETER_TYPE[\"SCOLOR\"] = \"sColor\";\r\n    PARAMETER_TYPE[\"SBOOL\"] = \"sBool\";\r\n    PARAMETER_TYPE[\"STIME\"] = \"sTime\";\r\n    PARAMETER_TYPE[\"SBITMAP\"] = \"sBitmap\";\r\n    PARAMETER_TYPE[\"SDOMAIN\"] = \"sDomain\";\r\n    PARAMETER_TYPE[\"SDOMAIN2D\"] = \"sDomain2D\";\r\n    PARAMETER_TYPE[\"SPOINT\"] = \"sPoint\";\r\n    PARAMETER_TYPE[\"SLINE\"] = \"sLine\";\r\n    PARAMETER_TYPE[\"SVECTOR\"] = \"sVector\";\r\n    PARAMETER_TYPE[\"SBOX\"] = \"sBox\";\r\n    PARAMETER_TYPE[\"SPLANE\"] = \"sPlane\";\r\n    PARAMETER_TYPE[\"SRECTANGLE\"] = \"sRectangle\";\r\n    PARAMETER_TYPE[\"SCURVE\"] = \"sCurve\";\r\n    PARAMETER_TYPE[\"SCIRCLE\"] = \"sCircle\";\r\n    PARAMETER_TYPE[\"SMESH\"] = \"sMesh\";\r\n    PARAMETER_TYPE[\"SSURFACE\"] = \"sSurface\";\r\n    PARAMETER_TYPE[\"SBREP\"] = \"sBrep\";\r\n    PARAMETER_TYPE[\"SSUBDIV\"] = \"sSubdiv\";\r\n})(PARAMETER_TYPE = exports.PARAMETER_TYPE || (exports.PARAMETER_TYPE = {}));\r\n/**\r\n * Type of visualization which should be used for UI elements representing the parameter.\r\n */\r\nvar PARAMETER_VISUALIZATION;\r\n(function (PARAMETER_VISUALIZATION) {\r\n    PARAMETER_VISUALIZATION[\"SLIDER\"] = \"slider\";\r\n    PARAMETER_VISUALIZATION[\"SEQUENCE\"] = \"sequence\";\r\n    PARAMETER_VISUALIZATION[\"CYCLE\"] = \"cycle\";\r\n    PARAMETER_VISUALIZATION[\"DROPDOWN\"] = \"dropdown\";\r\n    PARAMETER_VISUALIZATION[\"CHECKLIST\"] = \"checklist\";\r\n    PARAMETER_VISUALIZATION[\"CLOCK\"] = \"color\";\r\n    PARAMETER_VISUALIZATION[\"CALENDAR\"] = \"calendar\";\r\n    PARAMETER_VISUALIZATION[\"TOGGLE\"] = \"toggle\";\r\n    PARAMETER_VISUALIZATION[\"SWATCH\"] = \"swatch\";\r\n    PARAMETER_VISUALIZATION[\"BUTTON\"] = \"button\";\r\n    PARAMETER_VISUALIZATION[\"DIAL\"] = \"dial\";\r\n    PARAMETER_VISUALIZATION[\"TEXT\"] = \"text\";\r\n})(PARAMETER_VISUALIZATION = exports.PARAMETER_VISUALIZATION || (exports.PARAMETER_VISUALIZATION = {}));\r\n;\r\n"},"sourceMaps":{"js":{"version":3,"file":"ISessionEngine.js","sourceRoot":"","sources":["../../src/interfaces/ISessionEngine.ts"],"names":[],"mappings":";;;AAQA;;GAEG;AACH,IAAY,cAgCX;AAhCD,WAAY,cAAc;IACxB,iCAAe,CAAA;IACf,6BAAW,CAAA;IACX,+BAAa,CAAA;IACb,6BAAW,CAAA;IACX,mCAAiB,CAAA;IACjB,iCAAe,CAAA;IACf,2CAAyB,CAAA;IACzB,+BAAa,CAAA;IACb,+BAAa,CAAA;IACb,+BAAa,CAAA;IACb,qCAAmB,CAAA;IACnB,uCAAqB,CAAA;IACrB,qCAAmB,CAAA;IACnB,mCAAiB,CAAA;IACjB,iCAAe,CAAA;IACf,iCAAe,CAAA;IACf,qCAAmB,CAAA;IACnB,qCAAmB,CAAA;IACnB,yCAAuB,CAAA;IACvB,mCAAiB,CAAA;IACjB,iCAAe,CAAA;IACf,qCAAmB,CAAA;IACnB,+BAAa,CAAA;IACb,mCAAiB,CAAA;IACjB,2CAAyB,CAAA;IACzB,mCAAiB,CAAA;IACjB,qCAAmB,CAAA;IACnB,iCAAe,CAAA;IACf,uCAAqB,CAAA;IACrB,iCAAe,CAAA;IACf,qCAAmB,CAAA;AACrB,CAAC,EAhCW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAgCzB;AAED;;GAEG;AACH,IAAY,uBAaX;AAbD,WAAY,uBAAuB;IACjC,4CAAiB,CAAA;IACjB,gDAAqB,CAAA;IACrB,0CAAe,CAAA;IACf,gDAAqB,CAAA;IACrB,kDAAuB,CAAA;IACvB,0CAAe,CAAA;IACf,gDAAqB,CAAA;IACrB,4CAAiB,CAAA;IACjB,4CAAiB,CAAA;IACjB,4CAAiB,CAAA;IACjB,wCAAa,CAAA;IACb,wCAAa,CAAA;AACf,CAAC,EAbW,uBAAuB,GAAvB,+BAAuB,KAAvB,+BAAuB,QAalC;AAqCA,CAAC","sourcesContent":["import { ShapeDiverRequestGltfUploadQueryConversion, ShapeDiverResponseDto, ShapeDiverResponseExport, ShapeDiverResponseOutput, ShapeDiverResponseParameter } from '@shapediver/sdk.geometry-api-sdk-v2';\r\nimport { ITreeNode, TreeNode } from '@shapediver/viewer.shared.node-tree'\r\nimport { SettingsEngine } from '@shapediver/viewer.shared.services';\r\nimport { OutputLoaderTaskEventInfo } from '../implementation/OutputLoader';\r\nimport { IExport } from './dto/IExport';\r\nimport { IOutput } from './dto/IOutput';\r\nimport { IParameter } from './dto/IParameter';\r\n\r\n/**\r\n * The type of the parameter.\r\n */\r\nexport enum PARAMETER_TYPE {\r\n  FLOAT = 'Float',\r\n  INT = 'Int',\r\n  EVEN = 'Even',\r\n  ODD = 'Odd',\r\n  STRING = 'String',\r\n  COLOR = 'Color',\r\n  STRINGLIST = 'StringList',\r\n  BOOL = 'Bool',\r\n  TIME = 'Time',\r\n  FILE = 'File',\r\n  SNUMBER = 'sNumber',\r\n  SINTEGER = 'sInteger',\r\n  SSTRING = 'sString',\r\n  SCOLOR = 'sColor',\r\n  SBOOL = 'sBool',\r\n  STIME = 'sTime',\r\n  SBITMAP = 'sBitmap',\r\n  SDOMAIN = 'sDomain',\r\n  SDOMAIN2D = 'sDomain2D',\r\n  SPOINT = 'sPoint',\r\n  SLINE = 'sLine',\r\n  SVECTOR = 'sVector',\r\n  SBOX = 'sBox',\r\n  SPLANE = 'sPlane',\r\n  SRECTANGLE = 'sRectangle',\r\n  SCURVE = 'sCurve',\r\n  SCIRCLE = 'sCircle',\r\n  SMESH = 'sMesh',\r\n  SSURFACE = 'sSurface',\r\n  SBREP = 'sBrep',\r\n  SSUBDIV = 'sSubdiv'\r\n}\r\n\r\n/**\r\n * Type of visualization which should be used for UI elements representing the parameter.\r\n */\r\nexport enum PARAMETER_VISUALIZATION {\r\n  SLIDER = 'slider',\r\n  SEQUENCE = 'sequence',\r\n  CYCLE = 'cycle',\r\n  DROPDOWN = 'dropdown',\r\n  CHECKLIST = 'checklist',\r\n  CLOCK = 'color',\r\n  CALENDAR = 'calendar',\r\n  TOGGLE = 'toggle',\r\n  SWATCH = 'swatch',\r\n  BUTTON = 'button',\r\n  DIAL = 'dial',\r\n  TEXT = 'text'\r\n}\r\n\r\nexport interface ISettingsSections {\r\n  session?: {\r\n      parameter?: { \r\n          /** Option to update the displayname of the parameters (default: false) */\r\n          displayname?: boolean, \r\n          /** Option to update the order of the parameters (default: false) */\r\n          order?: boolean, \r\n          /** Option to update the hidden state of the parameters (default: false) */\r\n          hidden?: boolean, \r\n          /** Option to update the value of the parameters (default: false) */\r\n          value?: boolean \r\n      },\r\n      export?: { \r\n          /** Option to update the displayname of the exports (default: false) */\r\n          displayname?: boolean, \r\n          /** Option to update the order of the exports (default: false) */\r\n          order?: boolean, \r\n          /** Option to update the hidden state of the exports (default: false) */\r\n          hidden?: boolean \r\n      }\r\n  },\r\n  viewport?: {\r\n      /** Option to update the ar settings (default: false) */\r\n      ar?: boolean,\r\n      /** Option to update the scene settings (default: false) */\r\n      scene?: boolean,\r\n      /** Option to update the camera settings (default: false) */\r\n      camera?: boolean,\r\n      /** Option to update the light settings (default: false) */\r\n      light?: boolean,\r\n      /** Option to update the environment settings (default: false) */\r\n      environment?: boolean\r\n      /** Option to update the general settings (default: false) */\r\n      general?: boolean\r\n  }\r\n};\r\n\r\nexport interface ISessionEngine {\r\n  // #region Properties (11)\r\n\r\n  readonly jwtToken?: string;\r\n  canUploadGLTF: boolean;\r\n  exports: { [key: string]: IExport };\r\n  id: string;\r\n  initialized: boolean;\r\n  modelViewUrl: string;\r\n  outputs: { [key: string]: IOutput };\r\n  parameters: { [key: string]: IParameter<any> };\r\n  refreshJwtToken: (() => Promise<string>) | undefined;\r\n  settingsEngine: SettingsEngine;\r\n  ticket: string;\r\n  updateCallback: ((newNode: ITreeNode, oldNode: ITreeNode) => void) | null;\r\n\r\n  // #endregion Properties (11)\r\n\r\n  // #region Public Methods (18)\r\n\r\n  applySettings(response: ShapeDiverResponseDto, sections?: ISettingsSections): void;\r\n  canGoBack(): boolean;\r\n  canGoForward(): boolean;\r\n  close(): Promise<void>;\r\n  customize(force: boolean): Promise<ITreeNode>;\r\n  customizeParallel(parameterValues: { [key: string]: string }): Promise<ITreeNode>;\r\n  goBack(): Promise<ITreeNode>;\r\n  goForward(): Promise<ITreeNode>;\r\n  init(parameterValues?: { [key: string]: string; }): Promise<void>;\r\n  loadOutputs(cancelRequest: () => boolean, taskEventInfo: OutputLoaderTaskEventInfo): Promise<ITreeNode>;\r\n  loadOutputsParallel(responseDto: ShapeDiverResponseDto, cancelRequest: () => boolean, taskEventInfo: OutputLoaderTaskEventInfo): Promise<ITreeNode>;\r\n  requestExport(exportId: string, parameters: { [key: string]: string }, maxWaitTime: number): Promise<ShapeDiverResponseExport>;\r\n  resetSettings(sections?: ISettingsSections): void;\r\n  saveDefaultParameterValues(): Promise<boolean>;\r\n  saveSettings(viewportId?: string): Promise<boolean>;\r\n  saveUiProperties(): Promise<boolean>;\r\n  setJwtToken(token: string): Promise<void>;\r\n  updateOutputs(taskEventInfo?: OutputLoaderTaskEventInfo): Promise<ITreeNode>;\r\n  uploadFile(parameterId: string, data: File, type: string): Promise<string>;\r\n  uploadGLTF(blob: Blob, conversion?: ShapeDiverRequestGltfUploadQueryConversion): Promise<ShapeDiverResponseDto>;\r\n\r\n  // #endregion Public Methods (18)\r\n}"]}},"error":null,"hash":"73b0fffadfa7c632aa8fcbd3320006c5","cacheData":{"env":{}}}