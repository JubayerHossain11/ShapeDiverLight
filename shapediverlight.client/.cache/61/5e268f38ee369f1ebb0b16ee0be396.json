{"id":"node_modules/@shapediver/sdk.geometry-api-sdk-v2/dist/resources/ShapeDiverUtilsApi.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\dist\\resources\\ShapeDiverUtilsApi.js.map","includedInParent":true,"mtime":1706527151186},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\package.json","includedInParent":true,"mtime":1706527150879},{"name":"@shapediver/sdk.geometry-api-sdk-core","loc":{"line":13,"column":44,"index":839},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\dist\\resources\\ShapeDiverUtilsApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.geometry-api-sdk-core\\dist\\index.js"},{"name":"../utils/utils","loc":{"line":14,"column":24,"index":905},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\dist\\resources\\ShapeDiverUtilsApi.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\sdk.geometry-api-sdk-v2\\dist\\utils\\utils.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShapeDiverUtilsApi = void 0;\nconst sdk_geometry_api_sdk_core_1 = require(\"@shapediver/sdk.geometry-api-sdk-core\");\nconst utils_1 = require(\"../utils/utils\");\nclass ShapeDiverUtilsApi extends sdk_geometry_api_sdk_core_1.BaseResourceApi {\n    constructor(api) {\n        super(api);\n    }\n    /**\n     * Upload the given file to the specified URL.\n     *\n     * @param url - The target URL of the upload request.\n     * @param data - The data that should be uploaded.\n     * @param contentType - Indicate the original media type of the resource.\n     */\n    upload(url, data, contentType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                return this.api.put(url, data, {\n                    contentType: contentType,\n                    responseType: sdk_geometry_api_sdk_core_1.ShapeDiverSdkApiResponseType.JSON,\n                    disableAuthorization: true,\n                    disableCustomHeaders: true,\n                });\n            }));\n        });\n    }\n    /**\n     * Download from the given URL.\n     *\n     * @param url - The target URL of the download request.\n     * @param responseType - Indicates the type of data that the server should respond with if possible.\n     * @returns Array of size 2: [0] = response headers, [1] = response data\n     */\n    download(url, responseType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () {\n                return this.api.get(url, {\n                    contentType: \"application/json\",\n                    responseType: responseType,\n                    disableAuthorization: true,\n                    disableCustomHeaders: true,\n                });\n            }));\n        });\n    }\n    /**\n     * Submit a customization request and wait for the result to be finished.\n     *\n     * @param sdk\n     * @param sessionId\n     * @param body\n     * @param maxWaitMsec - Maximum duration to wait for result (in milliseconds), pass value < 0 to disable limit.\n     * @throws {@link ShapeDiverError} in case a maximum duration has been specified and is exceeded.\n     * @returns\n     */\n    submitAndWaitForCustomization(sdk, sessionId, body, maxWaitMsec = -1) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const startMsec = Date.now();\n            const dto = yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () { return sdk.output.customize(sessionId, body); }));\n            const waitMsec = Date.now() - startMsec;\n            // Reduce the total max waiting time by the amount the customization-request took\n            maxWaitMsec = (maxWaitMsec < 0) ? maxWaitMsec : Math.max(0, maxWaitMsec - waitMsec);\n            return ShapeDiverUtilsApi.waitForCustomizationResult(sdk, sessionId, dto, maxWaitMsec);\n        });\n    }\n    /**\n     * Submit an export request and wait for the result to be finished.\n     *\n     * @param sdk\n     * @param sessionId\n     * @param body\n     * @param maxWaitMsec - Maximum duration to wait for result (in milliseconds), pass value < 0 to disable limit.\n     * @throws {@link ShapeDiverError} in case a maximum duration has been specified and is exceeded.\n     * @returns\n     */\n    submitAndWaitForExport(sdk, sessionId, body, maxWaitMsec = -1) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const startMsec = Date.now();\n            const dto = yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () { return sdk.export.compute(sessionId, body); }));\n            const waitMsec = Date.now() - startMsec;\n            // Reduce the total max waiting time by the amount the compute-request took\n            maxWaitMsec = (maxWaitMsec < 0) ? maxWaitMsec : Math.max(0, maxWaitMsec - waitMsec);\n            return ShapeDiverUtilsApi.waitForExportResult(sdk, sessionId, dto, body.exports.id, maxWaitMsec);\n        });\n    }\n    /**\n     * Given a DTO resulting from a customization request, wait for the results to be finished.\n     *\n     * @param sdk\n     * @param sessionId\n     * @param dto\n     * @param maxWaitMsec - Maximum duration to wait for result (in milliseconds), pass value < 0 to disable limit.\n     * @returns\n     */\n    static waitForCustomizationResult(sdk, sessionId, dto, maxWaitMsec = -1) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dto.outputs)\n                return dto;\n            // Build new cache request\n            const outputVersions = {};\n            Object\n                .keys(dto.outputs)\n                .forEach(id => outputVersions[id] = dto.outputs[id].version);\n            let delay = ShapeDiverUtilsApi.getMaxOutputDelay(dto);\n            const startMsec = Date.now();\n            while (delay > 0) {\n                // Check whether maxWaitMsec has been reached\n                if (maxWaitMsec >= 0) {\n                    const waitMsec = Date.now() - startMsec;\n                    if (waitMsec >= maxWaitMsec) {\n                        throw new sdk_geometry_api_sdk_core_1.ShapeDiverError(`Maximum wait time of ${maxWaitMsec} ms reached`);\n                    }\n                    if (waitMsec + delay > maxWaitMsec) {\n                        delay = maxWaitMsec - waitMsec;\n                    }\n                }\n                yield (0, utils_1.sleep)(delay);\n                // Send cache request\n                dto = yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () { return sdk.output.getCache(sessionId, outputVersions); }));\n                delay = ShapeDiverUtilsApi.getMaxOutputDelay(dto);\n            }\n            return dto;\n        });\n    }\n    /**\n     * Given a DTO resulting from an export request, wait for the result to be finished.\n     *\n     * @param sdk\n     * @param sessionId\n     * @param dto\n     * @param exportId\n     * @param maxWaitMsec - Maximum duration to wait for result (in milliseconds), pass value < 0 to disable limit.\n     * @returns\n     */\n    static waitForExportResult(sdk, sessionId, dto, exportId, maxWaitMsec = -1) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dto.exports)\n                throw new sdk_geometry_api_sdk_core_1.ShapeDiverError(\"The given DTO does not contain any exports\");\n            // Build new cache request\n            const exportVersion = { [exportId]: dto.exports[exportId].version };\n            if (!dto.exports)\n                throw new sdk_geometry_api_sdk_core_1.ShapeDiverError(`Could not find any export with the id '${exportId}'`);\n            let delay = ShapeDiverUtilsApi.getExportDelay(dto, exportId);\n            const startMsec = Date.now();\n            while (delay > 0) {\n                // Check whether maxWaitMsec has been reached\n                if (maxWaitMsec >= 0) {\n                    const waitMsec = Date.now() - startMsec;\n                    if (waitMsec >= maxWaitMsec) {\n                        throw new sdk_geometry_api_sdk_core_1.ShapeDiverError(`Maximum wait time of ${maxWaitMsec} ms reached`);\n                    }\n                    if (waitMsec + delay > maxWaitMsec) {\n                        delay = maxWaitMsec - waitMsec;\n                    }\n                }\n                yield (0, utils_1.sleep)(delay);\n                // Send cache request\n                dto = yield (0, utils_1.sendRequest)(() => __awaiter(this, void 0, void 0, function* () { return sdk.export.getCache(sessionId, exportVersion); }));\n                delay = ShapeDiverUtilsApi.getExportDelay(dto, exportId);\n            }\n            return dto;\n        });\n    }\n    /**\n     * Get the maximum delay which was reported for output versions.\n     *\n     * @param dto\n     * @returns maximum delay, -1 in case no delay was reported\n     */\n    static getMaxOutputDelay(dto) {\n        return Math.max(...Object.values(dto.outputs)\n            .map(output => output)\n            .map(output => { var _a; return (_a = output.delay) !== null && _a !== void 0 ? _a : -1; }));\n    }\n    /**\n     * Get the delay which was reported for the export.\n     *\n     * @param dto\n     * @param exportId\n     * @returns delay, -1 in case no delay was reported\n     */\n    static getExportDelay(dto, exportId) {\n        var _a;\n        return (_a = dto.exports[exportId].delay) !== null && _a !== void 0 ? _a : -1;\n    }\n}\nexports.ShapeDiverUtilsApi = ShapeDiverUtilsApi;\n"},"sourceMaps":{"js":{"version":3,"file":"ShapeDiverUtilsApi.js","sourceRoot":"","sources":["../../src/resources/ShapeDiverUtilsApi.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"202d7c8642dfff1f56a945e4823ec869","cacheData":{"env":{}}}