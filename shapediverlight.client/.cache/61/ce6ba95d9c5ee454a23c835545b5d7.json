{"id":"node_modules/@shapediver/viewer.rendering-engine.camera-engine/dist/implementation/camera/OrthographicCamera.js","dependencies":[{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\camera\\OrthographicCamera.js.map","includedInParent":true,"mtime":1706527152611},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\src\\implementation\\camera\\OrthographicCamera.ts","includedInParent":true,"mtime":1706527153551},{"name":"D:\\projects\\myProjects\\shapeApp\\package.json","includedInParent":true,"mtime":1706533774939},{"name":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\package.json","includedInParent":true,"mtime":1706527151358},{"name":"@shapediver/viewer.shared.services","loc":{"line":25,"column":41,"index":2303},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\camera\\OrthographicCamera.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.services\\dist\\index.js"},{"name":"gl-matrix","loc":{"line":26,"column":28,"index":2371},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\camera\\OrthographicCamera.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\gl-matrix\\esm\\index.js"},{"name":"@shapediver/viewer.shared.node-tree","loc":{"line":27,"column":42,"index":2428},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\camera\\OrthographicCamera.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.shared.node-tree\\dist\\index.js"},{"name":"../../interfaces/ICameraEngine","loc":{"line":28,"column":32,"index":2501},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\camera\\OrthographicCamera.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\interfaces\\ICameraEngine.js"},{"name":"./AbstractCamera","loc":{"line":29,"column":33,"index":2570},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\camera\\OrthographicCamera.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\camera\\AbstractCamera.js"},{"name":"../controls/OrthographicCameraControls","loc":{"line":30,"column":45,"index":2637},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\camera\\OrthographicCamera.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\controls\\OrthographicCameraControls.js"},{"name":"../../interfaces/camera/IOrthographicCamera","loc":{"line":31,"column":38,"index":2719},"parent":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\implementation\\camera\\OrthographicCamera.js","resolved":"D:\\projects\\myProjects\\shapeApp\\node_modules\\@shapediver\\viewer.rendering-engine.camera-engine\\dist\\interfaces\\camera\\IOrthographicCamera.js"}],"generated":{"js":"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _OrthographicCamera_converter, _OrthographicCamera_logger, _OrthographicCamera_tree, _OrthographicCamera_domEventListenerToken, _OrthographicCamera_domEventEngine, _OrthographicCamera_bottom, _OrthographicCamera_direction, _OrthographicCamera_left, _OrthographicCamera_right, _OrthographicCamera_top, _OrthographicCamera_threeJsObject, _OrthographicCamera_up;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrthographicCamera = void 0;\r\nconst viewer_shared_services_1 = require(\"@shapediver/viewer.shared.services\");\r\nconst gl_matrix_1 = require(\"gl-matrix\");\r\nconst viewer_shared_node_tree_1 = require(\"@shapediver/viewer.shared.node-tree\");\r\nconst ICameraEngine_1 = require(\"../../interfaces/ICameraEngine\");\r\nconst AbstractCamera_1 = require(\"./AbstractCamera\");\r\nconst OrthographicCameraControls_1 = require(\"../controls/OrthographicCameraControls\");\r\nconst IOrthographicCamera_1 = require(\"../../interfaces/camera/IOrthographicCamera\");\r\nclass OrthographicCamera extends AbstractCamera_1.AbstractCamera {\r\n    // #endregion Properties (7)\r\n    // #region Constructors (1)\r\n    constructor(id, version) {\r\n        super(id, ICameraEngine_1.CAMERA_TYPE.ORTHOGRAPHIC, version);\r\n        // #region Properties (7)\r\n        _OrthographicCamera_converter.set(this, viewer_shared_services_1.Converter.instance);\r\n        _OrthographicCamera_logger.set(this, viewer_shared_services_1.Logger.instance);\r\n        _OrthographicCamera_tree.set(this, viewer_shared_node_tree_1.Tree.instance);\r\n        _OrthographicCamera_domEventListenerToken.set(this, void 0);\r\n        _OrthographicCamera_domEventEngine.set(this, void 0);\r\n        _OrthographicCamera_bottom.set(this, -100);\r\n        _OrthographicCamera_direction.set(this, IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.TOP);\r\n        _OrthographicCamera_left.set(this, -100);\r\n        _OrthographicCamera_right.set(this, 100);\r\n        _OrthographicCamera_top.set(this, 100);\r\n        _OrthographicCamera_threeJsObject.set(this, {});\r\n        _OrthographicCamera_up.set(this, gl_matrix_1.vec3.fromValues(0, 1, 0));\r\n        this._controls = new OrthographicCameraControls_1.OrthographicCameraControls(this, true);\r\n    }\r\n    // #endregion Constructors (1)\r\n    // #region Public Accessors (12)\r\n    get bottom() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_bottom, \"f\");\r\n    }\r\n    set bottom(value) {\r\n        __classPrivateFieldSet(this, _OrthographicCamera_bottom, value, \"f\");\r\n    }\r\n    get controls() {\r\n        return this._controls;\r\n    }\r\n    set controls(value) {\r\n        this._controls = value;\r\n    }\r\n    get direction() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_direction, \"f\");\r\n    }\r\n    set direction(value) {\r\n        const changedDirection = __classPrivateFieldGet(this, _OrthographicCamera_direction, \"f\") !== value;\r\n        __classPrivateFieldSet(this, _OrthographicCamera_direction, value, \"f\");\r\n        switch (__classPrivateFieldGet(this, _OrthographicCamera_direction, \"f\")) {\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.TOP:\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.BOTTOM:\r\n                this.up = gl_matrix_1.vec3.fromValues(0, 1, 0);\r\n                break;\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.RIGHT:\r\n                this.up = gl_matrix_1.vec3.fromValues(0, 0, 1);\r\n                break;\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.LEFT:\r\n                this.up = gl_matrix_1.vec3.fromValues(0, 0, 1);\r\n                break;\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.BACK:\r\n                this.up = gl_matrix_1.vec3.fromValues(0, 0, 1);\r\n                break;\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.FRONT:\r\n                this.up = gl_matrix_1.vec3.fromValues(0, 0, 1);\r\n                break;\r\n            default:\r\n                this.up = gl_matrix_1.vec3.fromValues(0, -1, 0);\r\n        }\r\n        if (changedDirection) {\r\n            const { position, target } = this.calculateZoomTo(undefined);\r\n            this.defaultPosition = gl_matrix_1.vec3.clone(position);\r\n            this.defaultTarget = gl_matrix_1.vec3.clone(target);\r\n            this.position = gl_matrix_1.vec3.clone(position);\r\n            this.target = gl_matrix_1.vec3.clone(target);\r\n        }\r\n    }\r\n    get left() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_left, \"f\");\r\n    }\r\n    set left(value) {\r\n        __classPrivateFieldSet(this, _OrthographicCamera_left, value, \"f\");\r\n    }\r\n    get right() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_right, \"f\");\r\n    }\r\n    set right(value) {\r\n        __classPrivateFieldSet(this, _OrthographicCamera_right, value, \"f\");\r\n    }\r\n    get top() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_top, \"f\");\r\n    }\r\n    set top(value) {\r\n        __classPrivateFieldSet(this, _OrthographicCamera_top, value, \"f\");\r\n    }\r\n    get up() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_up, \"f\");\r\n    }\r\n    set up(value) {\r\n        __classPrivateFieldSet(this, _OrthographicCamera_up, value, \"f\");\r\n    }\r\n    get threeJsObject() {\r\n        return __classPrivateFieldGet(this, _OrthographicCamera_threeJsObject, \"f\");\r\n    }\r\n    // #endregion Public Accessors (12)\r\n    // #region Public Methods (6)\r\n    applySettings(settingsEngine) {\r\n        const cameraSetting = settingsEngine.camera.cameras[this.id];\r\n        if (cameraSetting) {\r\n            this.name = cameraSetting.name;\r\n            this.autoAdjust = cameraSetting.autoAdjust;\r\n            this.cameraMovementDuration = cameraSetting.cameraMovementDuration;\r\n            this.enableCameraControls = cameraSetting.enableCameraControls;\r\n            this.revertAtMouseUp = cameraSetting.revertAtMouseUp;\r\n            this.revertAtMouseUpDuration = cameraSetting.revertAtMouseUpDuration;\r\n            this.zoomExtentsFactor = cameraSetting.zoomExtentsFactor;\r\n            let position = __classPrivateFieldGet(this, _OrthographicCamera_converter, \"f\").toVec3(cameraSetting.position);\r\n            let target = __classPrivateFieldGet(this, _OrthographicCamera_converter, \"f\").toVec3(cameraSetting.target);\r\n            this.defaultPosition = gl_matrix_1.vec3.clone(position);\r\n            this.defaultTarget = gl_matrix_1.vec3.clone(target);\r\n            this.position = position;\r\n            this.target = target;\r\n        }\r\n        if (this.position[0] === this.target[0] && this.position[1] === this.target[1] && this.position[2] === this.target[2]) {\r\n            if (this._viewportId) {\r\n                this._stateEngine.renderingEngines[this._viewportId].boundingBoxCreated\r\n                    .then(() => __awaiter(this, void 0, void 0, function* () {\r\n                    yield this.zoomTo(undefined, { duration: 0 });\r\n                    this.defaultPosition = gl_matrix_1.vec3.clone(this._controls.position);\r\n                    this.defaultTarget = gl_matrix_1.vec3.clone(this._controls.target);\r\n                }));\r\n            }\r\n        }\r\n        this._controls.applySettings(settingsEngine);\r\n    }\r\n    assignViewer(renderingEngine) {\r\n        if (renderingEngine.closed)\r\n            throw new viewer_shared_services_1.ShapeDiverViewerCameraError(`OrthographicCamera(${this.id}).assignViewer: Viewer with id ${renderingEngine.id} not found.`);\r\n        this.assignViewerInternal(renderingEngine.id, renderingEngine.canvas);\r\n        this._controls.assignViewer(renderingEngine.id, renderingEngine.canvas);\r\n        if (__classPrivateFieldGet(this, _OrthographicCamera_domEventListenerToken, \"f\") && __classPrivateFieldGet(this, _OrthographicCamera_domEventEngine, \"f\"))\r\n            __classPrivateFieldGet(this, _OrthographicCamera_domEventEngine, \"f\").removeDomEventListener(__classPrivateFieldGet(this, _OrthographicCamera_domEventListenerToken, \"f\"));\r\n        __classPrivateFieldSet(this, _OrthographicCamera_domEventEngine, renderingEngine.domEventEngine, \"f\");\r\n        __classPrivateFieldSet(this, _OrthographicCamera_domEventListenerToken, __classPrivateFieldGet(this, _OrthographicCamera_domEventEngine, \"f\").addDomEventListener(this._controls.cameraControlsEventDistribution), \"f\");\r\n        this.boundingBox = __classPrivateFieldGet(this, _OrthographicCamera_tree, \"f\").root.boundingBox.clone();\r\n        this._stateEngine.renderingEngines[renderingEngine.id].boundingBoxCreated.then(() => __awaiter(this, void 0, void 0, function* () {\r\n            if (this.position[0] === this.target[0] && this.position[1] === this.target[1] && this.position[2] === this.target[2])\r\n                yield this.zoomTo(undefined, { duration: 0 });\r\n        }));\r\n    }\r\n    clone() {\r\n        return new OrthographicCamera(this.id, this.version);\r\n    }\r\n    calculateZoomTo(zoomTarget, startingPosition = this.position, startingTarget = this.target) {\r\n        let box;\r\n        // Part 1 - calculate the bounding box that we should zoom to\r\n        if (!zoomTarget) {\r\n            // complete scene\r\n            box = this._boundingBox.clone();\r\n        }\r\n        else {\r\n            // specified Box\r\n            box = zoomTarget.clone();\r\n        }\r\n        if (box.isEmpty())\r\n            return { position: gl_matrix_1.vec3.create(), target: gl_matrix_1.vec3.create() };\r\n        const factor = 2 * box.boundingSphere.radius * this.zoomExtentsFactor;\r\n        const center = gl_matrix_1.vec3.clone(box.boundingSphere.center);\r\n        switch (__classPrivateFieldGet(this, _OrthographicCamera_direction, \"f\")) {\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.TOP:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(center[0], center[1], center[2] + factor),\r\n                    target: gl_matrix_1.vec3.clone(center)\r\n                };\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.BOTTOM:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(center[0], center[1], center[2] - factor),\r\n                    target: gl_matrix_1.vec3.clone(center)\r\n                };\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.RIGHT:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(center[0] + factor, center[1], center[2]),\r\n                    target: gl_matrix_1.vec3.clone(center)\r\n                };\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.LEFT:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(center[0] - factor, center[1], center[2]),\r\n                    target: gl_matrix_1.vec3.clone(center)\r\n                };\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.BACK:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(center[0], center[1] + factor, center[2]),\r\n                    target: gl_matrix_1.vec3.clone(center)\r\n                };\r\n            case IOrthographicCamera_1.ORTHOGRAPHIC_CAMERA_DIRECTION.FRONT:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(center[0], center[1] - factor, center[2]),\r\n                    target: gl_matrix_1.vec3.clone(center)\r\n                };\r\n            default:\r\n                return {\r\n                    position: gl_matrix_1.vec3.fromValues(center[0], center[1], center[2] + factor),\r\n                    target: gl_matrix_1.vec3.clone(center)\r\n                };\r\n        }\r\n    }\r\n    project(pos) {\r\n        const m = gl_matrix_1.mat4.targetTo(gl_matrix_1.mat4.create(), this.position, this.target, this.up);\r\n        const p = gl_matrix_1.mat4.ortho(gl_matrix_1.mat4.create(), this.left, this.right, this.bottom, this.top, this.near, this.far);\r\n        gl_matrix_1.vec3.transformMat4(pos, pos, gl_matrix_1.mat4.invert(m, m));\r\n        gl_matrix_1.vec3.transformMat4(pos, pos, p);\r\n        return gl_matrix_1.vec2.fromValues(pos[0], pos[1]);\r\n    }\r\n    unproject(pos, position = this.position, target = this.target) {\r\n        const m = gl_matrix_1.mat4.targetTo(gl_matrix_1.mat4.create(), this.position, this.target, this.up);\r\n        const p = gl_matrix_1.mat4.ortho(gl_matrix_1.mat4.create(), this.left, this.right, this.bottom, this.top, this.near, this.far);\r\n        gl_matrix_1.vec3.transformMat4(pos, pos, gl_matrix_1.mat4.invert(p, p));\r\n        gl_matrix_1.vec3.transformMat4(pos, pos, m);\r\n        return gl_matrix_1.vec3.clone(pos);\r\n    }\r\n}\r\nexports.OrthographicCamera = OrthographicCamera;\r\n_OrthographicCamera_converter = new WeakMap(), _OrthographicCamera_logger = new WeakMap(), _OrthographicCamera_tree = new WeakMap(), _OrthographicCamera_domEventListenerToken = new WeakMap(), _OrthographicCamera_domEventEngine = new WeakMap(), _OrthographicCamera_bottom = new WeakMap(), _OrthographicCamera_direction = new WeakMap(), _OrthographicCamera_left = new WeakMap(), _OrthographicCamera_right = new WeakMap(), _OrthographicCamera_top = new WeakMap(), _OrthographicCamera_threeJsObject = new WeakMap(), _OrthographicCamera_up = new WeakMap();\r\n"},"sourceMaps":{"js":{"version":3,"file":"OrthographicCamera.js","sourceRoot":"","sources":["../../../src/implementation/camera/OrthographicCamera.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Converter,\r\n  DomEventEngine,\r\n  Logger,\r\n  SettingsEngine,\r\n  ShapeDiverViewerCameraError,\r\n  StateEngine,\r\n} from '@shapediver/viewer.shared.services'\r\nimport { mat4, vec2, vec3 } from 'gl-matrix'\r\nimport { Box, IBox } from '@shapediver/viewer.shared.math'\r\nimport { IOrthographicCameraSettingsV3 } from '@shapediver/viewer.settings'\r\nimport { IRenderingEngine } from '@shapediver/viewer.rendering-engine.rendering-engine'\r\nimport { ITree, Tree } from '@shapediver/viewer.shared.node-tree'\r\n\r\nimport { CAMERA_TYPE } from '../../interfaces/ICameraEngine'\r\nimport { AbstractCamera } from './AbstractCamera'\r\nimport { OrthographicCameraControls } from '../controls/OrthographicCameraControls'\r\nimport { IOrthographicCamera, ORTHOGRAPHIC_CAMERA_DIRECTION } from '../../interfaces/camera/IOrthographicCamera'\r\nimport { IOrthographicCameraControls } from '../../interfaces/controls/IOrthographicCameraControls'\r\n\r\nexport class OrthographicCamera extends AbstractCamera implements IOrthographicCamera {\r\n  // #region Properties (7)\r\n\r\n  readonly #converter: Converter = Converter.instance;\r\n  readonly #logger: Logger = Logger.instance;\r\n  readonly #tree: ITree = Tree.instance;\r\n\r\n  #domEventListenerToken?: string;\r\n  #domEventEngine?: DomEventEngine;\r\n\r\n  #bottom: number = -100;\r\n  #direction: ORTHOGRAPHIC_CAMERA_DIRECTION = ORTHOGRAPHIC_CAMERA_DIRECTION.TOP;\r\n  #left: number = -100;\r\n  #right: number = 100;\r\n  #top: number = 100;\r\n  #threeJsObject: { [key: string]: THREE.OrthographicCamera } = {};\r\n  #up: vec3 = vec3.fromValues(0, 1, 0);\r\n  protected _controls: IOrthographicCameraControls;\r\n\r\n  // #endregion Properties (7)\r\n\r\n  // #region Constructors (1)\r\n\r\n  constructor(id: string, version?: string) {\r\n    super(id, CAMERA_TYPE.ORTHOGRAPHIC, version);\r\n    this._controls = new OrthographicCameraControls(this, true);\r\n  }\r\n\r\n  // #endregion Constructors (1)\r\n\r\n  // #region Public Accessors (12)\r\n\r\n  public get bottom(): number {\r\n    return this.#bottom;\r\n  }\r\n\r\n  public set bottom(value: number) {\r\n    this.#bottom = value;\r\n  }\r\n\r\n  public get controls(): IOrthographicCameraControls {\r\n    return this._controls;\r\n  }\r\n\r\n  public set controls(value: IOrthographicCameraControls) {\r\n    this._controls = value;\r\n  }\r\n\r\n  public get direction(): ORTHOGRAPHIC_CAMERA_DIRECTION {\r\n    return this.#direction;\r\n  }\r\n\r\n  public set direction(value: ORTHOGRAPHIC_CAMERA_DIRECTION) {\r\n    const changedDirection = this.#direction !== value;\r\n\r\n    this.#direction = value;\r\n    switch (this.#direction) {\r\n      case ORTHOGRAPHIC_CAMERA_DIRECTION.TOP:\r\n      case ORTHOGRAPHIC_CAMERA_DIRECTION.BOTTOM:\r\n        this.up = vec3.fromValues(0, 1, 0);\r\n        break;\r\n      case ORTHOGRAPHIC_CAMERA_DIRECTION.RIGHT:\r\n        this.up = vec3.fromValues(0, 0, 1);\r\n        break;\r\n      case ORTHOGRAPHIC_CAMERA_DIRECTION.LEFT:\r\n        this.up = vec3.fromValues(0, 0, 1);\r\n        break;\r\n      case ORTHOGRAPHIC_CAMERA_DIRECTION.BACK:\r\n        this.up = vec3.fromValues(0, 0, 1);\r\n        break;\r\n      case ORTHOGRAPHIC_CAMERA_DIRECTION.FRONT:\r\n        this.up = vec3.fromValues(0, 0, 1);\r\n        break;\r\n      default:\r\n        this.up = vec3.fromValues(0, -1, 0);\r\n    }\r\n\r\n    if (changedDirection) {\r\n      const { position, target } = this.calculateZoomTo(undefined);\r\n      this.defaultPosition = vec3.clone(position);\r\n      this.defaultTarget = vec3.clone(target);\r\n      \r\n      this.position = vec3.clone(position);\r\n      this.target = vec3.clone(target);\r\n    }\r\n  }\r\n\r\n  public get left(): number {\r\n    return this.#left;\r\n  }\r\n\r\n  public set left(value: number) {\r\n    this.#left = value;\r\n  }\r\n\r\n  public get right(): number {\r\n    return this.#right;\r\n  }\r\n\r\n  public set right(value: number) {\r\n    this.#right = value;\r\n  }\r\n\r\n  public get top(): number {\r\n    return this.#top;\r\n  }\r\n\r\n  public set top(value: number) {\r\n    this.#top = value;\r\n  }\r\n\r\n  public get up(): vec3 {\r\n    return this.#up;\r\n  }\r\n\r\n  public set up(value: vec3) {\r\n    this.#up = value;\r\n  }\r\n\r\n  public get threeJsObject(): { [key: string]: THREE.OrthographicCamera } {\r\n    return this.#threeJsObject;\r\n  }\r\n\r\n  // #endregion Public Accessors (12)\r\n\r\n  // #region Public Methods (6)\r\n\r\n  public applySettings(settingsEngine: SettingsEngine) {\r\n    const cameraSetting = <IOrthographicCameraSettingsV3>settingsEngine.camera.cameras[this.id];\r\n    if (cameraSetting) {\r\n      this.name = cameraSetting.name;\r\n      this.autoAdjust = cameraSetting.autoAdjust;\r\n      this.cameraMovementDuration = cameraSetting.cameraMovementDuration;\r\n      this.enableCameraControls = cameraSetting.enableCameraControls;\r\n      this.revertAtMouseUp = cameraSetting.revertAtMouseUp;\r\n      this.revertAtMouseUpDuration = cameraSetting.revertAtMouseUpDuration;\r\n      this.zoomExtentsFactor = cameraSetting.zoomExtentsFactor;\r\n\r\n      let position = this.#converter.toVec3(cameraSetting.position);\r\n      let target = this.#converter.toVec3(cameraSetting.target);\r\n      this.defaultPosition = vec3.clone(position);\r\n      this.defaultTarget = vec3.clone(target);\r\n\r\n      this.position = position;\r\n      this.target = target;\r\n    }\r\n\r\n    if (this.position[0] === this.target[0] && this.position[1] === this.target[1] && this.position[2] === this.target[2]) {\r\n      if (this._viewportId) {\r\n        this._stateEngine.renderingEngines[this._viewportId].boundingBoxCreated\r\n          .then(async () => {\r\n            await this.zoomTo(undefined, { duration: 0 });\r\n            this.defaultPosition = vec3.clone(this._controls.position);\r\n            this.defaultTarget = vec3.clone(this._controls.target);\r\n          })\r\n      }\r\n    }\r\n    (<OrthographicCameraControls>this._controls).applySettings(settingsEngine);\r\n  }\r\n\r\n  public assignViewer(renderingEngine: IRenderingEngine): void {\r\n    if(renderingEngine.closed) \r\n      throw new ShapeDiverViewerCameraError(`OrthographicCamera(${this.id}).assignViewer: Viewer with id ${renderingEngine.id} not found.`);\r\n      \r\n    this.assignViewerInternal(renderingEngine.id, renderingEngine.canvas);\r\n    this._controls.assignViewer(renderingEngine.id, renderingEngine.canvas);\r\n\r\n    if (this.#domEventListenerToken && this.#domEventEngine)\r\n      this.#domEventEngine.removeDomEventListener(this.#domEventListenerToken);\r\n\r\n    this.#domEventEngine = renderingEngine.domEventEngine;\r\n    this.#domEventListenerToken = this.#domEventEngine.addDomEventListener((<OrthographicCameraControls>this._controls).cameraControlsEventDistribution);\r\n\r\n    this.boundingBox = this.#tree.root.boundingBox.clone();\r\n      \r\n    this._stateEngine.renderingEngines[renderingEngine.id].boundingBoxCreated.then(async () => {\r\n      if (this.position[0] === this.target[0] && this.position[1] === this.target[1] && this.position[2] === this.target[2])\r\n        await this.zoomTo(undefined, { duration: 0 });\r\n    })\r\n  }\r\n\r\n  public clone(): IOrthographicCamera {\r\n    return new OrthographicCamera(this.id, this.version);\r\n  }\r\n\r\n  public calculateZoomTo(zoomTarget?: Box, startingPosition: vec3 = this.position, startingTarget: vec3 = this.target): { position: vec3; target: vec3; } {\r\n    let box: IBox;\r\n\r\n    // Part 1 - calculate the bounding box that we should zoom to\r\n    if (!zoomTarget) {\r\n      // complete scene\r\n      box = this._boundingBox.clone();\r\n    } else {\r\n      // specified Box\r\n      box = zoomTarget.clone();\r\n    }\r\n    \r\n    if (box.isEmpty()) return { position: vec3.create(), target: vec3.create() }\r\n\r\n    const factor = 2 * box.boundingSphere.radius * this.zoomExtentsFactor;\r\n    const center = vec3.clone(box.boundingSphere.center);\r\n\r\n    switch (this.#direction) {\r\n      case ORTHOGRAPHIC_CAMERA_DIRECTION.TOP:\r\n        return {\r\n          position: vec3.fromValues(center[0], center[1], center[2] + factor),\r\n          target: vec3.clone(center)\r\n        }\r\n      case ORTHOGRAPHIC_CAMERA_DIRECTION.BOTTOM:\r\n        return {\r\n          position: vec3.fromValues(center[0], center[1], center[2] - factor),\r\n          target: vec3.clone(center)\r\n        }\r\n      case ORTHOGRAPHIC_CAMERA_DIRECTION.RIGHT:\r\n        return {\r\n          position: vec3.fromValues(center[0] + factor, center[1], center[2]),\r\n          target: vec3.clone(center)\r\n        }\r\n      case ORTHOGRAPHIC_CAMERA_DIRECTION.LEFT:\r\n        return {\r\n          position: vec3.fromValues(center[0] - factor, center[1], center[2]),\r\n          target: vec3.clone(center)\r\n        }\r\n      case ORTHOGRAPHIC_CAMERA_DIRECTION.BACK:\r\n        return {\r\n          position: vec3.fromValues(center[0], center[1] + factor, center[2]),\r\n          target: vec3.clone(center)\r\n        }\r\n      case ORTHOGRAPHIC_CAMERA_DIRECTION.FRONT:\r\n        return {\r\n          position: vec3.fromValues(center[0], center[1] - factor, center[2]),\r\n          target: vec3.clone(center)\r\n        }\r\n      default:\r\n        return {\r\n          position: vec3.fromValues(center[0], center[1], center[2] + factor),\r\n          target: vec3.clone(center)\r\n        }\r\n    }\r\n  }\r\n\r\n  public project(pos: vec3): vec2 {\r\n    const m = mat4.targetTo(mat4.create(), this.position, this.target, this.up);\r\n    const p = mat4.ortho(mat4.create(), this.left, this.right, this.bottom, this.top, this.near, this.far);\r\n    vec3.transformMat4(pos, pos, mat4.invert(m, m))\r\n    vec3.transformMat4(pos, pos, p)\r\n    return vec2.fromValues(pos[0], pos[1])\r\n  }\r\n\r\n  public unproject(pos: vec3, position = this.position, target = this.target): vec3 {\r\n    const m = mat4.targetTo(mat4.create(), this.position, this.target, this.up);\r\n    const p = mat4.ortho(mat4.create(), this.left, this.right, this.bottom, this.top, this.near, this.far);\r\n    vec3.transformMat4(pos, pos, mat4.invert(p, p))\r\n    vec3.transformMat4(pos, pos, m)\r\n    return vec3.clone(pos);\r\n  }\r\n\r\n  // #endregion Public Methods (6)\r\n}"]}},"error":null,"hash":"415459b1b82e9758c8f6b0d86ca335d6","cacheData":{"env":{}}}